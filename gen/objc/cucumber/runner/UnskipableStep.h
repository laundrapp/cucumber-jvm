//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runner/UnskipableStep.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRunnerUnskipableStep")
#ifdef RESTRICT_CucumberRunnerUnskipableStep
#define INCLUDE_ALL_CucumberRunnerUnskipableStep 0
#else
#define INCLUDE_ALL_CucumberRunnerUnskipableStep 1
#endif
#undef RESTRICT_CucumberRunnerUnskipableStep

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberRunnerUnskipableStep_) && (INCLUDE_ALL_CucumberRunnerUnskipableStep || defined(INCLUDE_CucumberRunnerUnskipableStep))
#define CucumberRunnerUnskipableStep_

#define RESTRICT_CucumberApiTestStep 1
#define INCLUDE_CCBTestStep 1
#include "cucumber/api/TestStep.h"

@class CCBHookType;
@class CCBResult_Type;
@class GherkinPicklesPickleStep;
@protocol CCBRDefinitionMatch;
@protocol CCBScenario;
@protocol JavaUtilList;

@interface CucumberRunnerUnskipableStep : CCBTestStep

#pragma mark Public

- (instancetype __nonnull)initWithCCBHookType:(CCBHookType *)hookType
                      withCCBRDefinitionMatch:(id<CCBRDefinitionMatch>)definitionMatch;

- (CCBHookType *)getHookType;

- (GherkinPicklesPickleStep *)getPickleStep;

- (id<JavaUtilList>)getStepArgument;

- (jint)getStepLine;

- (NSString *)getStepLocation;

- (NSString *)getStepText;

- (jboolean)isHook;

#pragma mark Protected

- (CCBResult_Type *)executeStepWithNSString:(NSString *)language
                            withCCBScenario:(id<CCBScenario>)scenario
                                withBoolean:(jboolean)skipSteps;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithCCBRDefinitionMatch:(id<CCBRDefinitionMatch>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRunnerUnskipableStep)

FOUNDATION_EXPORT void CucumberRunnerUnskipableStep_initWithCCBHookType_withCCBRDefinitionMatch_(CucumberRunnerUnskipableStep *self, CCBHookType *hookType, id<CCBRDefinitionMatch> definitionMatch);

FOUNDATION_EXPORT CucumberRunnerUnskipableStep *new_CucumberRunnerUnskipableStep_initWithCCBHookType_withCCBRDefinitionMatch_(CCBHookType *hookType, id<CCBRDefinitionMatch> definitionMatch) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberRunnerUnskipableStep *create_CucumberRunnerUnskipableStep_initWithCCBHookType_withCCBRDefinitionMatch_(CCBHookType *hookType, id<CCBRDefinitionMatch> definitionMatch);

J2OBJC_TYPE_LITERAL_HEADER(CucumberRunnerUnskipableStep)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRunnerUnskipableStep")
