//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runner/UnskipableStep.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRunnerUnskipableStep")
#ifdef RESTRICT_CucumberRunnerUnskipableStep
#define INCLUDE_ALL_CucumberRunnerUnskipableStep 0
#else
#define INCLUDE_ALL_CucumberRunnerUnskipableStep 1
#endif
#undef RESTRICT_CucumberRunnerUnskipableStep

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBUnskipableStep_) && (INCLUDE_ALL_CucumberRunnerUnskipableStep || defined(INCLUDE_CCBUnskipableStep))
#define CCBUnskipableStep_

#define RESTRICT_CucumberApiTestStep 1
#define INCLUDE_CucumberApiTestStep 1
#include "cucumber/api/TestStep.h"

@class CucumberApiHookType;
@class CucumberApiResult_Type;
@class GHKPickleStep;
@protocol CCBRDefinitionMatch;
@protocol CucumberApiScenario;
@protocol JavaUtilList;

@interface CCBUnskipableStep : CucumberApiTestStep

#pragma mark Public

- (instancetype __nonnull)initWithCucumberApiHookType:(CucumberApiHookType *)hookType
                              withCCBRDefinitionMatch:(id<CCBRDefinitionMatch>)definitionMatch;

- (CucumberApiHookType *)getHookType;

- (GHKPickleStep *)getPickleStep;

- (id<JavaUtilList>)getStepArgument;

- (jint)getStepLine;

- (NSString *)getStepLocation;

- (NSString *)getStepText;

- (jboolean)isHook;

#pragma mark Protected

- (CucumberApiResult_Type *)executeStepWithNSString:(NSString *)language
                            withCucumberApiScenario:(id<CucumberApiScenario>)scenario
                                        withBoolean:(jboolean)skipSteps;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithCCBRDefinitionMatch:(id<CCBRDefinitionMatch>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBUnskipableStep)

FOUNDATION_EXPORT void CCBUnskipableStep_initWithCucumberApiHookType_withCCBRDefinitionMatch_(CCBUnskipableStep *self, CucumberApiHookType *hookType, id<CCBRDefinitionMatch> definitionMatch);

FOUNDATION_EXPORT CCBUnskipableStep *new_CCBUnskipableStep_initWithCucumberApiHookType_withCCBRDefinitionMatch_(CucumberApiHookType *hookType, id<CCBRDefinitionMatch> definitionMatch) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBUnskipableStep *create_CCBUnskipableStep_initWithCucumberApiHookType_withCCBRDefinitionMatch_(CucumberApiHookType *hookType, id<CCBRDefinitionMatch> definitionMatch);

J2OBJC_TYPE_LITERAL_HEADER(CCBUnskipableStep)

@compatibility_alias CucumberRunnerUnskipableStep CCBUnskipableStep;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRunnerUnskipableStep")
