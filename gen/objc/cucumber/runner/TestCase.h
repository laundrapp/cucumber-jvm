//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runner/TestCase.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRunnerTestCase")
#ifdef RESTRICT_CucumberRunnerTestCase
#define INCLUDE_ALL_CucumberRunnerTestCase 0
#else
#define INCLUDE_ALL_CucumberRunnerTestCase 1
#endif
#undef RESTRICT_CucumberRunnerTestCase

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBTestCase_) && (INCLUDE_ALL_CucumberRunnerTestCase || defined(INCLUDE_CCBTestCase))
#define CCBTestCase_

#define RESTRICT_CucumberApiTestCase 1
#define INCLUDE_CucumberApiTestCase 1
#include "cucumber/api/TestCase.h"

@class CCBEventBus;
@class GHKPickleEvent;
@protocol JavaUtilList;

@interface CCBTestCase : NSObject < CucumberApiTestCase >

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)testSteps
                              withJavaUtilList:(id<JavaUtilList>)beforeHooks
                              withJavaUtilList:(id<JavaUtilList>)afterHooks
                            withGHKPickleEvent:(GHKPickleEvent *)pickleEvent
                                   withBoolean:(jboolean)dryRun;

- (jint)getLine;

- (NSString *)getName;

- (NSString *)getScenarioDesignation;

- (id<JavaUtilList>)getTags;

- (id<JavaUtilList>)getTestSteps;

- (NSString *)getUri;

#pragma mark Package-Private

- (void)runWithCCBEventBus:(CCBEventBus *)bus;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBTestCase)

FOUNDATION_EXPORT void CCBTestCase_initWithJavaUtilList_withJavaUtilList_withJavaUtilList_withGHKPickleEvent_withBoolean_(CCBTestCase *self, id<JavaUtilList> testSteps, id<JavaUtilList> beforeHooks, id<JavaUtilList> afterHooks, GHKPickleEvent *pickleEvent, jboolean dryRun);

FOUNDATION_EXPORT CCBTestCase *new_CCBTestCase_initWithJavaUtilList_withJavaUtilList_withJavaUtilList_withGHKPickleEvent_withBoolean_(id<JavaUtilList> testSteps, id<JavaUtilList> beforeHooks, id<JavaUtilList> afterHooks, GHKPickleEvent *pickleEvent, jboolean dryRun) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBTestCase *create_CCBTestCase_initWithJavaUtilList_withJavaUtilList_withJavaUtilList_withGHKPickleEvent_withBoolean_(id<JavaUtilList> testSteps, id<JavaUtilList> beforeHooks, id<JavaUtilList> afterHooks, GHKPickleEvent *pickleEvent, jboolean dryRun);

J2OBJC_TYPE_LITERAL_HEADER(CCBTestCase)

@compatibility_alias CucumberRunnerTestCase CCBTestCase;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRunnerTestCase")
