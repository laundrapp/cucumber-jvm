//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runner/Runner.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRunnerRunner")
#ifdef RESTRICT_CucumberRunnerRunner
#define INCLUDE_ALL_CucumberRunnerRunner 0
#else
#define INCLUDE_ALL_CucumberRunnerRunner 1
#endif
#undef RESTRICT_CucumberRunnerRunner

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBRunner_) && (INCLUDE_ALL_CucumberRunnerRunner || defined(INCLUDE_CCBRunner))
#define CCBRunner_

#define RESTRICT_CucumberRuntimeUnreportedStepExecutor 1
#define INCLUDE_CCBRUnreportedStepExecutor 1
#include "cucumber/runtime/UnreportedStepExecutor.h"

@class CCBEventBus;
@class CCBRRuntimeOptions;
@class GherkinEventsPickleEvent;
@class GherkinPicklesPickleString;
@protocol CCBRGlue;
@protocol CCBStepDefinitionReporter;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

@interface CCBRunner : NSObject < CCBRUnreportedStepExecutor >

#pragma mark Public

- (instancetype __nonnull)initWithCCBRGlue:(id<CCBRGlue>)glue
                           withCCBEventBus:(CCBEventBus *)bus
                    withJavaUtilCollection:(id<JavaUtilCollection>)backends
                    withCCBRRuntimeOptions:(CCBRRuntimeOptions *)runtimeOptions;

- (id<CCBRGlue>)getGlue;

- (void)reportStepDefinitionsWithCCBStepDefinitionReporter:(id<CCBStepDefinitionReporter>)stepDefinitionReporter;

- (void)runPickleWithGherkinEventsPickleEvent:(GherkinEventsPickleEvent *)pickle;

- (void)runUnreportedStepWithNSString:(NSString *)featurePath
                         withNSString:(NSString *)language
                         withNSString:(NSString *)stepName
                              withInt:(jint)line
                     withJavaUtilList:(id<JavaUtilList>)dataTableRows
       withGherkinPicklesPickleString:(GherkinPicklesPickleString *)docString;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBRunner)

FOUNDATION_EXPORT void CCBRunner_initWithCCBRGlue_withCCBEventBus_withJavaUtilCollection_withCCBRRuntimeOptions_(CCBRunner *self, id<CCBRGlue> glue, CCBEventBus *bus, id<JavaUtilCollection> backends, CCBRRuntimeOptions *runtimeOptions);

FOUNDATION_EXPORT CCBRunner *new_CCBRunner_initWithCCBRGlue_withCCBEventBus_withJavaUtilCollection_withCCBRRuntimeOptions_(id<CCBRGlue> glue, CCBEventBus *bus, id<JavaUtilCollection> backends, CCBRRuntimeOptions *runtimeOptions) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBRunner *create_CCBRunner_initWithCCBRGlue_withCCBEventBus_withJavaUtilCollection_withCCBRRuntimeOptions_(id<CCBRGlue> glue, CCBEventBus *bus, id<JavaUtilCollection> backends, CCBRRuntimeOptions *runtimeOptions);

J2OBJC_TYPE_LITERAL_HEADER(CCBRunner)

@compatibility_alias CucumberRunnerRunner CCBRunner;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRunnerRunner")
