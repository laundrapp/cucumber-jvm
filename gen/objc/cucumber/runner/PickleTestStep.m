//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/runner/PickleTestStep.java
//

#include "J2ObjC_source.h"
#include "cucumber/api/HookType.h"
#include "cucumber/api/TestStep.h"
#include "cucumber/runner/PickleTestStep.h"
#include "cucumber/runtime/DefinitionMatch.h"
#include "cucumber/runtime/StepDefinitionMatch.h"
#include "gherkin/pickles/PickleStep.h"
#include "java/lang/Integer.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/List.h"

@interface CucumberRunnerPickleTestStep () {
 @public
  NSString *uri_;
  GherkinPicklesPickleStep *step_;
}

@end

J2OBJC_FIELD_SETTER(CucumberRunnerPickleTestStep, uri_, NSString *)
J2OBJC_FIELD_SETTER(CucumberRunnerPickleTestStep, step_, GherkinPicklesPickleStep *)

@implementation CucumberRunnerPickleTestStep

- (instancetype __nonnull)initWithNSString:(NSString *)uri
              withGherkinPicklesPickleStep:(GherkinPicklesPickleStep *)step
        withCucumberRuntimeDefinitionMatch:(id<CucumberRuntimeDefinitionMatch>)definitionMatch {
  CucumberRunnerPickleTestStep_initWithNSString_withGherkinPicklesPickleStep_withCucumberRuntimeDefinitionMatch_(self, uri, step, definitionMatch);
  return self;
}

- (jboolean)isHook {
  return false;
}

- (GherkinPicklesPickleStep *)getPickleStep {
  return step_;
}

- (NSString *)getStepLocation {
  return JreStrcat("$C$", uri_, ':', JavaLangInteger_toStringWithInt_([self getStepLine]));
}

- (jint)getStepLine {
  return CucumberRuntimeStepDefinitionMatch_getStepLineWithGherkinPicklesPickleStep_(step_);
}

- (NSString *)getStepText {
  return [((GherkinPicklesPickleStep *) nil_chk(step_)) getText];
}

- (id<JavaUtilList>)getStepArgument {
  return [((GherkinPicklesPickleStep *) nil_chk(step_)) getArgument];
}

- (CucumberApiHookType *)getHookType {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)dealloc {
  RELEASE_(uri_);
  RELEASE_(step_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGherkinPicklesPickleStep;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 1, -1, -1 },
    { NULL, "LCucumberApiHookType;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withGherkinPicklesPickleStep:withCucumberRuntimeDefinitionMatch:);
  methods[1].selector = @selector(isHook);
  methods[2].selector = @selector(getPickleStep);
  methods[3].selector = @selector(getStepLocation);
  methods[4].selector = @selector(getStepLine);
  methods[5].selector = @selector(getStepText);
  methods[6].selector = @selector(getStepArgument);
  methods[7].selector = @selector(getHookType);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "uri_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "step_", "LGherkinPicklesPickleStep;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LGherkinPicklesPickleStep;LCucumberRuntimeDefinitionMatch;", "()Ljava/util/List<Lgherkin/pickles/Argument;>;" };
  static const J2ObjcClassInfo _CucumberRunnerPickleTestStep = { "PickleTestStep", "cucumber.runner", ptrTable, methods, fields, 7, 0x1, 8, 2, -1, -1, -1, -1, -1 };
  return &_CucumberRunnerPickleTestStep;
}

@end

void CucumberRunnerPickleTestStep_initWithNSString_withGherkinPicklesPickleStep_withCucumberRuntimeDefinitionMatch_(CucumberRunnerPickleTestStep *self, NSString *uri, GherkinPicklesPickleStep *step, id<CucumberRuntimeDefinitionMatch> definitionMatch) {
  CucumberApiTestStep_initWithCucumberRuntimeDefinitionMatch_(self, definitionMatch);
  JreStrongAssign(&self->uri_, uri);
  JreStrongAssign(&self->step_, step);
}

CucumberRunnerPickleTestStep *new_CucumberRunnerPickleTestStep_initWithNSString_withGherkinPicklesPickleStep_withCucumberRuntimeDefinitionMatch_(NSString *uri, GherkinPicklesPickleStep *step, id<CucumberRuntimeDefinitionMatch> definitionMatch) {
  J2OBJC_NEW_IMPL(CucumberRunnerPickleTestStep, initWithNSString_withGherkinPicklesPickleStep_withCucumberRuntimeDefinitionMatch_, uri, step, definitionMatch)
}

CucumberRunnerPickleTestStep *create_CucumberRunnerPickleTestStep_initWithNSString_withGherkinPicklesPickleStep_withCucumberRuntimeDefinitionMatch_(NSString *uri, GherkinPicklesPickleStep *step, id<CucumberRuntimeDefinitionMatch> definitionMatch) {
  J2OBJC_CREATE_IMPL(CucumberRunnerPickleTestStep, initWithNSString_withGherkinPicklesPickleStep_withCucumberRuntimeDefinitionMatch_, uri, step, definitionMatch)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRunnerPickleTestStep)
