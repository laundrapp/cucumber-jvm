//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runner/HookTestStep.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRunnerHookTestStep")
#ifdef RESTRICT_CucumberRunnerHookTestStep
#define INCLUDE_ALL_CucumberRunnerHookTestStep 0
#else
#define INCLUDE_ALL_CucumberRunnerHookTestStep 1
#endif
#undef RESTRICT_CucumberRunnerHookTestStep

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBHookTestStep_) && (INCLUDE_ALL_CucumberRunnerHookTestStep || defined(INCLUDE_CCBHookTestStep))
#define CCBHookTestStep_

#define RESTRICT_CucumberRunnerTestStep 1
#define INCLUDE_CCBTestStep 1
#include "cucumber/runner/TestStep.h"

#define RESTRICT_CucumberApiHookTestStep 1
#define INCLUDE_CucumberApiHookTestStep 1
#include "cucumber/api/HookTestStep.h"

@class CCBRHookDefinitionMatch;
@class CucumberApiHookType;
@class GHKPickleStep;
@protocol CCBRStepDefinitionMatch;
@protocol JavaUtilList;

@interface CCBHookTestStep : CCBTestStep < CucumberApiHookTestStep >

#pragma mark Public

- (id<JavaUtilList>)getDefinitionArgument;

- (CucumberApiHookType *)getHookType;

- (NSString *)getPattern;

- (GHKPickleStep *)getPickleStep;

- (id<JavaUtilList>)getStepArgument;

- (jint)getStepLine;

- (NSString *)getStepLocation;

- (NSString *)getStepText;

- (jboolean)isHook;

#pragma mark Package-Private

- (instancetype __nonnull)initWithCucumberApiHookType:(CucumberApiHookType *)hookType
                          withCCBRHookDefinitionMatch:(CCBRHookDefinitionMatch *)definitionMatch;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithCCBRStepDefinitionMatch:(id<CCBRStepDefinitionMatch>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBHookTestStep)

FOUNDATION_EXPORT void CCBHookTestStep_initWithCucumberApiHookType_withCCBRHookDefinitionMatch_(CCBHookTestStep *self, CucumberApiHookType *hookType, CCBRHookDefinitionMatch *definitionMatch);

FOUNDATION_EXPORT CCBHookTestStep *new_CCBHookTestStep_initWithCucumberApiHookType_withCCBRHookDefinitionMatch_(CucumberApiHookType *hookType, CCBRHookDefinitionMatch *definitionMatch) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBHookTestStep *create_CCBHookTestStep_initWithCucumberApiHookType_withCCBRHookDefinitionMatch_(CucumberApiHookType *hookType, CCBRHookDefinitionMatch *definitionMatch);

J2OBJC_TYPE_LITERAL_HEADER(CCBHookTestStep)

@compatibility_alias CucumberRunnerHookTestStep CCBHookTestStep;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRunnerHookTestStep")
