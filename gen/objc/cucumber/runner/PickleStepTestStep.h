//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runner/PickleStepTestStep.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRunnerPickleStepTestStep")
#ifdef RESTRICT_CucumberRunnerPickleStepTestStep
#define INCLUDE_ALL_CucumberRunnerPickleStepTestStep 0
#else
#define INCLUDE_ALL_CucumberRunnerPickleStepTestStep 1
#endif
#undef RESTRICT_CucumberRunnerPickleStepTestStep

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBPickleStepTestStep_) && (INCLUDE_ALL_CucumberRunnerPickleStepTestStep || defined(INCLUDE_CCBPickleStepTestStep))
#define CCBPickleStepTestStep_

#define RESTRICT_CucumberRunnerTestStep 1
#define INCLUDE_CCBTestStep 1
#include "cucumber/runner/TestStep.h"

#define RESTRICT_CucumberApiPickleStepTestStep 1
#define INCLUDE_CucumberApiPickleStepTestStep 1
#include "cucumber/api/PickleStepTestStep.h"

@class CCBEventBus;
@class CCBRPickleStepDefinitionMatch;
@class CucumberApiHookType;
@class CucumberApiResult;
@class GHKPickleStep;
@protocol CCBRStepDefinitionMatch;
@protocol CucumberApiScenario;
@protocol JavaUtilList;

@interface CCBPickleStepTestStep : CCBTestStep < CucumberApiPickleStepTestStep >

#pragma mark Public

- (id<JavaUtilList>)getDefinitionArgument;

- (CucumberApiHookType *)getHookType;

- (NSString *)getPattern;

- (GHKPickleStep *)getPickleStep;

- (id<JavaUtilList>)getStepArgument;

- (jint)getStepLine;

- (NSString *)getStepLocation;

- (NSString *)getStepText;

- (jboolean)isHook;

#pragma mark Package-Private

- (instancetype __nonnull)initWithNSString:(NSString *)uri
                         withGHKPickleStep:(GHKPickleStep *)step
                          withJavaUtilList:(id<JavaUtilList>)beforeStepHookSteps
                          withJavaUtilList:(id<JavaUtilList>)afterStepHookSteps
         withCCBRPickleStepDefinitionMatch:(CCBRPickleStepDefinitionMatch *)definitionMatch;

- (instancetype __nonnull)initWithNSString:(NSString *)uri
                         withGHKPickleStep:(GHKPickleStep *)step
         withCCBRPickleStepDefinitionMatch:(CCBRPickleStepDefinitionMatch *)definitionMatch;

- (id<JavaUtilList>)getAfterStepHookSteps;

- (id<JavaUtilList>)getBeforeStepHookSteps;

- (CucumberApiResult *)runWithCCBEventBus:(CCBEventBus *)bus
                             withNSString:(NSString *)language
                  withCucumberApiScenario:(id<CucumberApiScenario>)scenario
                              withBoolean:(jboolean)skipSteps;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithCCBRStepDefinitionMatch:(id<CCBRStepDefinitionMatch>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBPickleStepTestStep)

FOUNDATION_EXPORT void CCBPickleStepTestStep_initWithNSString_withGHKPickleStep_withCCBRPickleStepDefinitionMatch_(CCBPickleStepTestStep *self, NSString *uri, GHKPickleStep *step, CCBRPickleStepDefinitionMatch *definitionMatch);

FOUNDATION_EXPORT CCBPickleStepTestStep *new_CCBPickleStepTestStep_initWithNSString_withGHKPickleStep_withCCBRPickleStepDefinitionMatch_(NSString *uri, GHKPickleStep *step, CCBRPickleStepDefinitionMatch *definitionMatch) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBPickleStepTestStep *create_CCBPickleStepTestStep_initWithNSString_withGHKPickleStep_withCCBRPickleStepDefinitionMatch_(NSString *uri, GHKPickleStep *step, CCBRPickleStepDefinitionMatch *definitionMatch);

FOUNDATION_EXPORT void CCBPickleStepTestStep_initWithNSString_withGHKPickleStep_withJavaUtilList_withJavaUtilList_withCCBRPickleStepDefinitionMatch_(CCBPickleStepTestStep *self, NSString *uri, GHKPickleStep *step, id<JavaUtilList> beforeStepHookSteps, id<JavaUtilList> afterStepHookSteps, CCBRPickleStepDefinitionMatch *definitionMatch);

FOUNDATION_EXPORT CCBPickleStepTestStep *new_CCBPickleStepTestStep_initWithNSString_withGHKPickleStep_withJavaUtilList_withJavaUtilList_withCCBRPickleStepDefinitionMatch_(NSString *uri, GHKPickleStep *step, id<JavaUtilList> beforeStepHookSteps, id<JavaUtilList> afterStepHookSteps, CCBRPickleStepDefinitionMatch *definitionMatch) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBPickleStepTestStep *create_CCBPickleStepTestStep_initWithNSString_withGHKPickleStep_withJavaUtilList_withJavaUtilList_withCCBRPickleStepDefinitionMatch_(NSString *uri, GHKPickleStep *step, id<JavaUtilList> beforeStepHookSteps, id<JavaUtilList> afterStepHookSteps, CCBRPickleStepDefinitionMatch *definitionMatch);

J2OBJC_TYPE_LITERAL_HEADER(CCBPickleStepTestStep)

@compatibility_alias CucumberRunnerPickleStepTestStep CCBPickleStepTestStep;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRunnerPickleStepTestStep")
