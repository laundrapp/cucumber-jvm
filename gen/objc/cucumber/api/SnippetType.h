//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/api/SnippetType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberApiSnippetType")
#ifdef RESTRICT_CucumberApiSnippetType
#define INCLUDE_ALL_CucumberApiSnippetType 0
#else
#define INCLUDE_ALL_CucumberApiSnippetType 1
#endif
#undef RESTRICT_CucumberApiSnippetType

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberApiSnippetType_) && (INCLUDE_ALL_CucumberApiSnippetType || defined(INCLUDE_CucumberApiSnippetType))
#define CucumberApiSnippetType_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class CucumberRuntimeSnippetsFunctionNameGenerator;
@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, CucumberApiSnippetType_Enum) {
  CucumberApiSnippetType_Enum_UNDERSCORE = 0,
  CucumberApiSnippetType_Enum_CAMELCASE = 1,
};

@interface CucumberApiSnippetType : JavaLangEnum

#pragma mark Public

+ (CucumberApiSnippetType *)fromStringWithNSString:(NSString *)name;

- (CucumberRuntimeSnippetsFunctionNameGenerator *)getFunctionNameGenerator;

+ (CucumberApiSnippetType *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

@end

J2OBJC_STATIC_INIT(CucumberApiSnippetType)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT CucumberApiSnippetType *CucumberApiSnippetType_values_[];

inline CucumberApiSnippetType *CucumberApiSnippetType_get_UNDERSCORE(void);
J2OBJC_ENUM_CONSTANT(CucumberApiSnippetType, UNDERSCORE)

inline CucumberApiSnippetType *CucumberApiSnippetType_get_CAMELCASE(void);
J2OBJC_ENUM_CONSTANT(CucumberApiSnippetType, CAMELCASE)

FOUNDATION_EXPORT CucumberApiSnippetType *CucumberApiSnippetType_fromStringWithNSString_(NSString *name);

FOUNDATION_EXPORT IOSObjectArray *CucumberApiSnippetType_values(void);

FOUNDATION_EXPORT CucumberApiSnippetType *CucumberApiSnippetType_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT CucumberApiSnippetType *CucumberApiSnippetType_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(CucumberApiSnippetType)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberApiSnippetType")
