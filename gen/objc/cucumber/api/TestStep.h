//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/api/TestStep.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberApiTestStep")
#ifdef RESTRICT_CucumberApiTestStep
#define INCLUDE_ALL_CucumberApiTestStep 0
#else
#define INCLUDE_ALL_CucumberApiTestStep 1
#endif
#undef RESTRICT_CucumberApiTestStep

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBTestStep_) && (INCLUDE_ALL_CucumberApiTestStep || defined(INCLUDE_CCBTestStep))
#define CCBTestStep_

@class CCBEventBus;
@class CCBHookType;
@class CCBResult;
@class CCBResult_Type;
@class GherkinPicklesPickleStep;
@protocol CCBRDefinitionMatch;
@protocol CCBScenario;
@protocol JavaUtilList;

@interface CCBTestStep : NSObject {
 @public
  /*!
   */
  id<CCBRDefinitionMatch> definitionMatch_;
}

#pragma mark Public

/*!
 @brief Creates a new test step from the matching step definition
 @param definitionMatch the matching step definition
 */
- (instancetype __nonnull)initWithCCBRDefinitionMatch:(id<CCBRDefinitionMatch>)definitionMatch;

- (NSString *)getCodeLocation;

- (id<JavaUtilList>)getDefinitionArgument;

- (CCBHookType *)getHookType;

- (NSString *)getPattern;

- (GherkinPicklesPickleStep *)getPickleStep;

- (id<JavaUtilList>)getStepArgument;

- (jint)getStepLine;

- (NSString *)getStepLocation;

- (NSString *)getStepText;

- (jboolean)isHook;

/*!
 @param bus to which events should be broadcast
 @param language in which the step is defined
 @param scenario of which this step is part
 @param skipSteps if this step should be skipped
 @return result of running this step
 */
- (CCBResult *)runWithCCBEventBus:(CCBEventBus *)bus
                     withNSString:(NSString *)language
                  withCCBScenario:(id<CCBScenario>)scenario
                      withBoolean:(jboolean)skipSteps;

#pragma mark Protected

- (CCBResult_Type *)executeStepWithNSString:(NSString *)language
                            withCCBScenario:(id<CCBScenario>)scenario
                                withBoolean:(jboolean)skipSteps;

- (CCBResult_Type *)nonExceptionStatusWithBoolean:(jboolean)skipSteps;

@end

J2OBJC_STATIC_INIT(CCBTestStep)

J2OBJC_FIELD_SETTER(CCBTestStep, definitionMatch_, id<CCBRDefinitionMatch>)

FOUNDATION_EXPORT void CCBTestStep_initWithCCBRDefinitionMatch_(CCBTestStep *self, id<CCBRDefinitionMatch> definitionMatch);

J2OBJC_TYPE_LITERAL_HEADER(CCBTestStep)

@compatibility_alias CucumberApiTestStep CCBTestStep;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberApiTestStep")
