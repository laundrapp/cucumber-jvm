//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/api/TestStep.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberApiTestStep")
#ifdef RESTRICT_CucumberApiTestStep
#define INCLUDE_ALL_CucumberApiTestStep 0
#else
#define INCLUDE_ALL_CucumberApiTestStep 1
#endif
#undef RESTRICT_CucumberApiTestStep

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberApiTestStep_) && (INCLUDE_ALL_CucumberApiTestStep || defined(INCLUDE_CucumberApiTestStep))
#define CucumberApiTestStep_

@class CucumberApiHookType;
@class GHKPickleStep;
@protocol JavaUtilList;

/*!
 @brief A test step can either represent the execution of a hook
  or a pickle step.Each step is tied to some glue code.
 - seealso: cucumber.api.event.TestCaseStarted
 - seealso: cucumber.api.event.TestCaseFinished
 */
@protocol CucumberApiTestStep < JavaObject >

/*!
 @brief Returns a string representation of the glue code location.
 @return a string representation of the glue code location.
 */
- (NSString *)getCodeLocation;

/*!
 @brief Returns the hook hook type.
 @return the hook type.
 */
- (CucumberApiHookType *)getHookType;

/*!
 @brief Returns true if the test step is a hook test step
 @return true if the test step is a hook test step
 */
- (jboolean)isHook;

/*!
 @brief The pattern or expression used to match the glue code to the Gherkin step.
 @return a pattern or expression
 */
- (NSString *)getPattern;

/*!
 @brief The matched Gherkin step as a compiled Pickle
 @return the matched step
 */
- (GHKPickleStep *)getPickleStep;

/*!
 @brief Returns the arguments provided to the step definition.
 <p>
  For example the step definition <code>Given (.*) pickles</code>
  when matched with <code>Given 15 pickles</code> will receive
  as argument <code>"15"</code>
 @return argument provided to the step definition
 */
- (id<JavaUtilList>)getDefinitionArgument;

/*!
 @brief Returns arguments provided to the Gherkin step.E.g:
  a data table or doc string.
 @return arguments provided to the gherkin step.
 */
- (id<JavaUtilList>)getStepArgument;

/*!
 @brief The line in the feature file defining this step.
 @return a line number
 */
- (jint)getStepLine;

/*!
 @brief A uri to to the feature and line of this step.
 @return a uri
 */
- (NSString *)getStepLocation;

/*!
 @brief The full text of the Gherkin step.
 @return the step text
 */
- (NSString *)getStepText;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberApiTestStep)

J2OBJC_TYPE_LITERAL_HEADER(CucumberApiTestStep)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberApiTestStep")
