//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/api/Pending.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberApiPending")
#ifdef RESTRICT_CucumberApiPending
#define INCLUDE_ALL_CucumberApiPending 0
#else
#define INCLUDE_ALL_CucumberApiPending 1
#endif
#undef RESTRICT_CucumberApiPending

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberApiPending_) && (INCLUDE_ALL_CucumberApiPending || defined(INCLUDE_CucumberApiPending))
#define CucumberApiPending_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

/*!
 @brief Any exception class annotated with this annotation will be treated as a "pending" exception.
 That is - if the exception is thrown from a step definition or hook, the scenario's status will
  be pending instead of failed.
 - seealso: PendingException
 */
@protocol CucumberApiPending < JavaLangAnnotationAnnotation >

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface CucumberApiPending : NSObject < CucumberApiPending >

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberApiPending)

FOUNDATION_EXPORT id<CucumberApiPending> create_CucumberApiPending(void);

J2OBJC_TYPE_LITERAL_HEADER(CucumberApiPending)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberApiPending")
