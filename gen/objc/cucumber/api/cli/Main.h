//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/api/cli/Main.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberApiCliMain")
#ifdef RESTRICT_CucumberApiCliMain
#define INCLUDE_ALL_CucumberApiCliMain 0
#else
#define INCLUDE_ALL_CucumberApiCliMain 1
#endif
#undef RESTRICT_CucumberApiCliMain

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBMain_) && (INCLUDE_ALL_CucumberApiCliMain || defined(INCLUDE_CCBMain))
#define CCBMain_

@class IOSObjectArray;
@class JavaLangClassLoader;

@interface CCBMain : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (void)mainWithNSStringArray:(IOSObjectArray *)argv;

/*!
 @brief Launches the Cucumber-JVM command line.
 @param argv runtime options. See details in the <code>cucumber.api.cli.Usage.txt</code>  resource.
 @param classLoader classloader used to load the runtime
 @return 0 if execution was successful, 1 if it was not (test failures)
 @throw IOExceptionif resources couldn't be loaded during the run.
 */
+ (jbyte)runWithNSStringArray:(IOSObjectArray *)argv
      withJavaLangClassLoader:(JavaLangClassLoader *)classLoader;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBMain)

FOUNDATION_EXPORT void CCBMain_init(CCBMain *self);

FOUNDATION_EXPORT CCBMain *new_CCBMain_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBMain *create_CCBMain_init(void);

FOUNDATION_EXPORT void CCBMain_mainWithNSStringArray_(IOSObjectArray *argv);

FOUNDATION_EXPORT jbyte CCBMain_runWithNSStringArray_withJavaLangClassLoader_(IOSObjectArray *argv, JavaLangClassLoader *classLoader);

J2OBJC_TYPE_LITERAL_HEADER(CCBMain)

@compatibility_alias CucumberApiCliMain CCBMain;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberApiCliMain")
