//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/api/Scenario.java
//

#include "J2ObjC_source.h"
#include "cucumber/api/Scenario.h"

@interface CucumberApiScenario : NSObject

@end

@implementation CucumberApiScenario

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilCollection;", 0x401, -1, -1, -1, 0, -1, -1 },
    { NULL, "LCucumberApiResult_Type;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getSourceTagNames);
  methods[1].selector = @selector(getStatus);
  methods[2].selector = @selector(isFailed);
  methods[3].selector = @selector(embedWithByteArray:withNSString:);
  methods[4].selector = @selector(writeWithNSString:);
  methods[5].selector = @selector(getName);
  methods[6].selector = @selector(getId);
  methods[7].selector = @selector(getUri);
  methods[8].selector = @selector(getLines);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Collection<Ljava/lang/String;>;", "embed", "[BLNSString;", "write", "LNSString;", "()Ljava/util/List<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _CucumberApiScenario = { "Scenario", "cucumber.api", ptrTable, methods, NULL, 7, 0x609, 9, 0, -1, -1, -1, -1, -1 };
  return &_CucumberApiScenario;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(CucumberApiScenario)
