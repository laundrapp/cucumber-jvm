//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/api/event/EventPublisher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberApiEventEventPublisher")
#ifdef RESTRICT_CucumberApiEventEventPublisher
#define INCLUDE_ALL_CucumberApiEventEventPublisher 0
#else
#define INCLUDE_ALL_CucumberApiEventEventPublisher 1
#endif
#undef RESTRICT_CucumberApiEventEventPublisher

#if !defined (CucumberApiEventEventPublisher_) && (INCLUDE_ALL_CucumberApiEventEventPublisher || defined(INCLUDE_CucumberApiEventEventPublisher))
#define CucumberApiEventEventPublisher_

@class IOSClass;
@protocol CucumberApiEventEventHandler;

@protocol CucumberApiEventEventPublisher < JavaObject >

/*!
 @brief Registers an event handler for a specific event.
 The available events types are: 
 <ul>
  <li><code>TestRunStarted</code> - the first event sent. 
 <li><code>TestSourceRead</code> - sent for each feature file read, contains the feature file source. 
 <li><code>SnippetsSuggestedEvent</code> - sent for each step that could not be matched to a step definition, contains the raw snippets for the step. 
 <li> <code>TestCaseStarted</code> - sent before starting the execution of a Test Case(/Pickle/Scenario), contains the Test Case 
 <li><code>TestStepStarted</code> - sent before starting the execution of a Test Step, contains the Test Step 
 <li><code>EmbedEvent</code> - calling scenario.embed in a hook triggers this event. 
 <li><code>WriteEvent</code> - calling scenario.write in a hook triggers this event. 
 <li><code>TestStepFinished</code> - sent after the execution of a Test Step, contains the Test Step and its Result. 
 <li><code>TestCaseFinished</code> - sent after the execution of a Test Case(/Pickle/Scenario), contains the Test Case and its Result. 
 <li><code>TestRunFinished</code> - the last event sent. 
 </ul>
 @param eventType the event type for which the handler is being registered
 @param handler the event handler
 */
- (void)registerHandlerForWithIOSClass:(IOSClass *)eventType
      withCucumberApiEventEventHandler:(id<CucumberApiEventEventHandler>)handler;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberApiEventEventPublisher)

J2OBJC_TYPE_LITERAL_HEADER(CucumberApiEventEventPublisher)

#endif

#pragma pop_macro("INCLUDE_ALL_CucumberApiEventEventPublisher")
