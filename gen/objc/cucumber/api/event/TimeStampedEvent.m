//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/api/event/TimeStampedEvent.java
//

#include "J2ObjC_source.h"
#include "cucumber/api/event/TimeStampedEvent.h"
#include "java/lang/Long.h"

@interface CucumberApiEventTimeStampedEvent () {
 @public
  JavaLangLong *timeStamp_;
}

@end

J2OBJC_FIELD_SETTER(CucumberApiEventTimeStampedEvent, timeStamp_, JavaLangLong *)

@implementation CucumberApiEventTimeStampedEvent

- (instancetype)initWithJavaLangLong:(JavaLangLong *)timeStamp {
  CucumberApiEventTimeStampedEvent_initWithJavaLangLong_(self, timeStamp);
  return self;
}

- (JavaLangLong *)getTimeStamp {
  return timeStamp_;
}

- (void)dealloc {
  RELEASE_(timeStamp_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangLong;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangLong:);
  methods[1].selector = @selector(getTimeStamp);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "timeStamp_", "LJavaLangLong;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangLong;" };
  static const J2ObjcClassInfo _CucumberApiEventTimeStampedEvent = { "TimeStampedEvent", "cucumber.api.event", ptrTable, methods, fields, 7, 0x400, 2, 1, -1, -1, -1, -1, -1 };
  return &_CucumberApiEventTimeStampedEvent;
}

@end

void CucumberApiEventTimeStampedEvent_initWithJavaLangLong_(CucumberApiEventTimeStampedEvent *self, JavaLangLong *timeStamp) {
  NSObject_init(self);
  JreStrongAssign(&self->timeStamp_, timeStamp);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberApiEventTimeStampedEvent)
