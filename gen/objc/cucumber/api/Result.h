//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/api/Result.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberApiResult")
#ifdef RESTRICT_CucumberApiResult
#define INCLUDE_ALL_CucumberApiResult 0
#else
#define INCLUDE_ALL_CucumberApiResult 1
#endif
#undef RESTRICT_CucumberApiResult

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBResult_) && (INCLUDE_ALL_CucumberApiResult || defined(INCLUDE_CCBResult))
#define CCBResult_

@class CCBResult_Type;
@class JavaLangLong;
@class JavaLangThrowable;

@interface CCBResult : NSObject

#pragma mark Public

/*!
 @brief The result of a step or scenario
 @param status status of the step or scenario
 @param duration the duration in nanoseconds
 @param error the error that caused the failure if any
 */
- (instancetype __nonnull)initWithCCBResult_Type:(CCBResult_Type *)status
                                withJavaLangLong:(JavaLangLong *)duration
                           withJavaLangThrowable:(JavaLangThrowable *)error;

- (JavaLangLong *)getDuration;

- (JavaLangThrowable *)getError;

- (NSString *)getErrorMessage;

- (CCBResult_Type *)getStatus;

- (jboolean)isWithCCBResult_Type:(CCBResult_Type *)status;

- (jboolean)isOkWithBoolean:(jboolean)isStrict;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(CCBResult)

inline CCBResult *CCBResult_get_SKIPPED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT CCBResult *CCBResult_SKIPPED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CCBResult, SKIPPED, CCBResult *)

inline CCBResult *CCBResult_get_UNDEFINED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT CCBResult *CCBResult_UNDEFINED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CCBResult, UNDEFINED, CCBResult *)

FOUNDATION_EXPORT void CCBResult_initWithCCBResult_Type_withJavaLangLong_withJavaLangThrowable_(CCBResult *self, CCBResult_Type *status, JavaLangLong *duration, JavaLangThrowable *error);

FOUNDATION_EXPORT CCBResult *new_CCBResult_initWithCCBResult_Type_withJavaLangLong_withJavaLangThrowable_(CCBResult_Type *status, JavaLangLong *duration, JavaLangThrowable *error) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBResult *create_CCBResult_initWithCCBResult_Type_withJavaLangLong_withJavaLangThrowable_(CCBResult_Type *status, JavaLangLong *duration, JavaLangThrowable *error);

J2OBJC_TYPE_LITERAL_HEADER(CCBResult)

@compatibility_alias CucumberApiResult CCBResult;

#endif

#if !defined (CCBResult_Type_) && (INCLUDE_ALL_CucumberApiResult || defined(INCLUDE_CCBResult_Type))
#define CCBResult_Type_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, CCBResult_Type_Enum) {
  CCBResult_Type_Enum_PASSED = 0,
  CCBResult_Type_Enum_SKIPPED = 1,
  CCBResult_Type_Enum_PENDING = 2,
  CCBResult_Type_Enum_UNDEFINED = 3,
  CCBResult_Type_Enum_AMBIGUOUS = 4,
  CCBResult_Type_Enum_FAILED = 5,
};

@interface CCBResult_Type : JavaLangEnum

#pragma mark Public

- (NSString *)firstLetterCapitalizedName;

+ (CCBResult_Type *)fromLowerCaseNameWithNSString:(NSString *)lowerCaseName;

- (NSString *)lowerCaseName;

+ (CCBResult_Type *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

@end

J2OBJC_STATIC_INIT(CCBResult_Type)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT CCBResult_Type *CCBResult_Type_values_[];

inline CCBResult_Type *CCBResult_Type_get_PASSED(void);
J2OBJC_ENUM_CONSTANT(CCBResult_Type, PASSED)

inline CCBResult_Type *CCBResult_Type_get_SKIPPED(void);
J2OBJC_ENUM_CONSTANT(CCBResult_Type, SKIPPED)

inline CCBResult_Type *CCBResult_Type_get_PENDING(void);
J2OBJC_ENUM_CONSTANT(CCBResult_Type, PENDING)

inline CCBResult_Type *CCBResult_Type_get_UNDEFINED(void);
J2OBJC_ENUM_CONSTANT(CCBResult_Type, UNDEFINED)

inline CCBResult_Type *CCBResult_Type_get_AMBIGUOUS(void);
J2OBJC_ENUM_CONSTANT(CCBResult_Type, AMBIGUOUS)

inline CCBResult_Type *CCBResult_Type_get_FAILED(void);
J2OBJC_ENUM_CONSTANT(CCBResult_Type, FAILED)

FOUNDATION_EXPORT CCBResult_Type *CCBResult_Type_fromLowerCaseNameWithNSString_(NSString *lowerCaseName);

FOUNDATION_EXPORT IOSObjectArray *CCBResult_Type_values(void);

FOUNDATION_EXPORT CCBResult_Type *CCBResult_Type_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT CCBResult_Type *CCBResult_Type_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(CCBResult_Type)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberApiResult")
