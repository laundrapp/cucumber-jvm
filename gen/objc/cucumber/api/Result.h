//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/api/Result.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberApiResult")
#ifdef RESTRICT_CucumberApiResult
#define INCLUDE_ALL_CucumberApiResult 0
#else
#define INCLUDE_ALL_CucumberApiResult 1
#endif
#undef RESTRICT_CucumberApiResult

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberApiResult_) && (INCLUDE_ALL_CucumberApiResult || defined(INCLUDE_CucumberApiResult))
#define CucumberApiResult_

@class CucumberApiResult_Type;
@class JavaLangLong;
@class JavaLangThrowable;

@interface CucumberApiResult : NSObject

#pragma mark Public

/*!
 @brief The result of a step or scenario
 @param status status of the step or scenario
 @param duration the duration in nanoseconds
 @param error the error that caused the failure if any
 */
- (instancetype __nonnull)initWithCucumberApiResult_Type:(CucumberApiResult_Type *)status
                                        withJavaLangLong:(JavaLangLong *)duration
                                   withJavaLangThrowable:(JavaLangThrowable *)error;

- (JavaLangLong *)getDuration;

- (JavaLangThrowable *)getError;

- (NSString *)getErrorMessage;

- (CucumberApiResult_Type *)getStatus;

- (jboolean)isWithCucumberApiResult_Type:(CucumberApiResult_Type *)status;

- (jboolean)isOkWithBoolean:(jboolean)isStrict;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(CucumberApiResult)

inline CucumberApiResult *CucumberApiResult_get_SKIPPED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT CucumberApiResult *CucumberApiResult_SKIPPED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberApiResult, SKIPPED, CucumberApiResult *)

inline CucumberApiResult *CucumberApiResult_get_UNDEFINED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT CucumberApiResult *CucumberApiResult_UNDEFINED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberApiResult, UNDEFINED, CucumberApiResult *)

FOUNDATION_EXPORT void CucumberApiResult_initWithCucumberApiResult_Type_withJavaLangLong_withJavaLangThrowable_(CucumberApiResult *self, CucumberApiResult_Type *status, JavaLangLong *duration, JavaLangThrowable *error);

FOUNDATION_EXPORT CucumberApiResult *new_CucumberApiResult_initWithCucumberApiResult_Type_withJavaLangLong_withJavaLangThrowable_(CucumberApiResult_Type *status, JavaLangLong *duration, JavaLangThrowable *error) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberApiResult *create_CucumberApiResult_initWithCucumberApiResult_Type_withJavaLangLong_withJavaLangThrowable_(CucumberApiResult_Type *status, JavaLangLong *duration, JavaLangThrowable *error);

J2OBJC_TYPE_LITERAL_HEADER(CucumberApiResult)

#endif

#if !defined (CucumberApiResult_Type_) && (INCLUDE_ALL_CucumberApiResult || defined(INCLUDE_CucumberApiResult_Type))
#define CucumberApiResult_Type_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, CucumberApiResult_Type_Enum) {
  CucumberApiResult_Type_Enum_PASSED = 0,
  CucumberApiResult_Type_Enum_SKIPPED = 1,
  CucumberApiResult_Type_Enum_PENDING = 2,
  CucumberApiResult_Type_Enum_UNDEFINED = 3,
  CucumberApiResult_Type_Enum_AMBIGUOUS = 4,
  CucumberApiResult_Type_Enum_FAILED = 5,
};

@interface CucumberApiResult_Type : JavaLangEnum

#pragma mark Public

- (NSString *)firstLetterCapitalizedName;

+ (CucumberApiResult_Type *)fromLowerCaseNameWithNSString:(NSString *)lowerCaseName;

- (NSString *)lowerCaseName;

+ (CucumberApiResult_Type *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

@end

J2OBJC_STATIC_INIT(CucumberApiResult_Type)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT CucumberApiResult_Type *CucumberApiResult_Type_values_[];

inline CucumberApiResult_Type *CucumberApiResult_Type_get_PASSED(void);
J2OBJC_ENUM_CONSTANT(CucumberApiResult_Type, PASSED)

inline CucumberApiResult_Type *CucumberApiResult_Type_get_SKIPPED(void);
J2OBJC_ENUM_CONSTANT(CucumberApiResult_Type, SKIPPED)

inline CucumberApiResult_Type *CucumberApiResult_Type_get_PENDING(void);
J2OBJC_ENUM_CONSTANT(CucumberApiResult_Type, PENDING)

inline CucumberApiResult_Type *CucumberApiResult_Type_get_UNDEFINED(void);
J2OBJC_ENUM_CONSTANT(CucumberApiResult_Type, UNDEFINED)

inline CucumberApiResult_Type *CucumberApiResult_Type_get_AMBIGUOUS(void);
J2OBJC_ENUM_CONSTANT(CucumberApiResult_Type, AMBIGUOUS)

inline CucumberApiResult_Type *CucumberApiResult_Type_get_FAILED(void);
J2OBJC_ENUM_CONSTANT(CucumberApiResult_Type, FAILED)

FOUNDATION_EXPORT CucumberApiResult_Type *CucumberApiResult_Type_fromLowerCaseNameWithNSString_(NSString *lowerCaseName);

FOUNDATION_EXPORT IOSObjectArray *CucumberApiResult_Type_values(void);

FOUNDATION_EXPORT CucumberApiResult_Type *CucumberApiResult_Type_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT CucumberApiResult_Type *CucumberApiResult_Type_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(CucumberApiResult_Type)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberApiResult")
