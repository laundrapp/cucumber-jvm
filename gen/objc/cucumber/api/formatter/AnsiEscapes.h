//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/api/formatter/AnsiEscapes.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberApiFormatterAnsiEscapes")
#ifdef RESTRICT_CucumberApiFormatterAnsiEscapes
#define INCLUDE_ALL_CucumberApiFormatterAnsiEscapes 0
#else
#define INCLUDE_ALL_CucumberApiFormatterAnsiEscapes 1
#endif
#undef RESTRICT_CucumberApiFormatterAnsiEscapes

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberApiFormatterAnsiEscapes_) && (INCLUDE_ALL_CucumberApiFormatterAnsiEscapes || defined(INCLUDE_CucumberApiFormatterAnsiEscapes))
#define CucumberApiFormatterAnsiEscapes_

@class CucumberApiFormatterNiceAppendable;
@class JavaLangStringBuilder;

@interface CucumberApiFormatterAnsiEscapes : NSObject

#pragma mark Public

- (void)appendToWithCucumberApiFormatterNiceAppendable:(CucumberApiFormatterNiceAppendable *)a;

- (void)appendToWithJavaLangStringBuilder:(JavaLangStringBuilder *)a;

- (NSString *)description;

+ (CucumberApiFormatterAnsiEscapes *)upWithInt:(jint)count;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(CucumberApiFormatterAnsiEscapes)

inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_get_RESET(void);
inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_set_RESET(CucumberApiFormatterAnsiEscapes *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_RESET;
J2OBJC_STATIC_FIELD_OBJ(CucumberApiFormatterAnsiEscapes, RESET, CucumberApiFormatterAnsiEscapes *)

inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_get_BLACK(void);
inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_set_BLACK(CucumberApiFormatterAnsiEscapes *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_BLACK;
J2OBJC_STATIC_FIELD_OBJ(CucumberApiFormatterAnsiEscapes, BLACK, CucumberApiFormatterAnsiEscapes *)

inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_get_RED(void);
inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_set_RED(CucumberApiFormatterAnsiEscapes *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_RED;
J2OBJC_STATIC_FIELD_OBJ(CucumberApiFormatterAnsiEscapes, RED, CucumberApiFormatterAnsiEscapes *)

inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_get_GREEN(void);
inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_set_GREEN(CucumberApiFormatterAnsiEscapes *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_GREEN;
J2OBJC_STATIC_FIELD_OBJ(CucumberApiFormatterAnsiEscapes, GREEN, CucumberApiFormatterAnsiEscapes *)

inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_get_YELLOW(void);
inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_set_YELLOW(CucumberApiFormatterAnsiEscapes *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_YELLOW;
J2OBJC_STATIC_FIELD_OBJ(CucumberApiFormatterAnsiEscapes, YELLOW, CucumberApiFormatterAnsiEscapes *)

inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_get_BLUE(void);
inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_set_BLUE(CucumberApiFormatterAnsiEscapes *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_BLUE;
J2OBJC_STATIC_FIELD_OBJ(CucumberApiFormatterAnsiEscapes, BLUE, CucumberApiFormatterAnsiEscapes *)

inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_get_MAGENTA(void);
inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_set_MAGENTA(CucumberApiFormatterAnsiEscapes *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_MAGENTA;
J2OBJC_STATIC_FIELD_OBJ(CucumberApiFormatterAnsiEscapes, MAGENTA, CucumberApiFormatterAnsiEscapes *)

inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_get_CYAN(void);
inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_set_CYAN(CucumberApiFormatterAnsiEscapes *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_CYAN;
J2OBJC_STATIC_FIELD_OBJ(CucumberApiFormatterAnsiEscapes, CYAN, CucumberApiFormatterAnsiEscapes *)

inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_get_WHITE(void);
inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_set_WHITE(CucumberApiFormatterAnsiEscapes *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_WHITE;
J2OBJC_STATIC_FIELD_OBJ(CucumberApiFormatterAnsiEscapes, WHITE, CucumberApiFormatterAnsiEscapes *)

inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_get_DEFAULT(void);
inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_set_DEFAULT(CucumberApiFormatterAnsiEscapes *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_DEFAULT;
J2OBJC_STATIC_FIELD_OBJ(CucumberApiFormatterAnsiEscapes, DEFAULT, CucumberApiFormatterAnsiEscapes *)

inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_get_GREY(void);
inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_set_GREY(CucumberApiFormatterAnsiEscapes *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_GREY;
J2OBJC_STATIC_FIELD_OBJ(CucumberApiFormatterAnsiEscapes, GREY, CucumberApiFormatterAnsiEscapes *)

inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_get_INTENSITY_BOLD(void);
inline CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_set_INTENSITY_BOLD(CucumberApiFormatterAnsiEscapes *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_INTENSITY_BOLD;
J2OBJC_STATIC_FIELD_OBJ(CucumberApiFormatterAnsiEscapes, INTENSITY_BOLD, CucumberApiFormatterAnsiEscapes *)

FOUNDATION_EXPORT CucumberApiFormatterAnsiEscapes *CucumberApiFormatterAnsiEscapes_upWithInt_(jint count);

J2OBJC_TYPE_LITERAL_HEADER(CucumberApiFormatterAnsiEscapes)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberApiFormatterAnsiEscapes")
