//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/api/Format.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberApiFormat")
#ifdef RESTRICT_CucumberApiFormat
#define INCLUDE_ALL_CucumberApiFormat 0
#else
#define INCLUDE_ALL_CucumberApiFormat 1
#endif
#undef RESTRICT_CucumberApiFormat

#if !defined (CucumberApiFormat_) && (INCLUDE_ALL_CucumberApiFormat || defined(INCLUDE_CucumberApiFormat))
#define CucumberApiFormat_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

/*!
 @brief <p>
  This annotation can be specified on step definition method parameters to give Cucumber a hint
  about how to transform a String into an object such as a Date or a Calendar.
 For example, if you have the following Gherkin step with a 
 <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date: 
 </p>
  @code

  Given the date is 2012-03-01T06:54:12 
  
@endcode
  <p>
  Then the following Java Step Definition would convert that into a Date: 
 </p>
  @code

   &#064;Given("^the date is (\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2})$")
  public void the_date_is(@@Format("yyyy-MM-dd'T'HH:mm:ss") Date date) {
      this.date = date;
  } 
  
@endcode
  <p>
  Or a Calendar: 
 </p>
  @code

   &#064;Given("^the date is (\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2})$")
  public void the_date_is(@@Format("yyyy-MM-dd'T'HH:mm:ss") Calendar cal) {
      this.cal = cal;
  } 
  
@endcode
  <p>
  This annotation also works for data tables that are transformed to a list of beans with Date or Calendar fields. 
 </p>
 */
@protocol CucumberApiFormat < JavaLangAnnotationAnnotation >

@property (readonly) NSString *value;

@end

@interface CucumberApiFormat : NSObject < CucumberApiFormat > {
 @public
  NSString *value_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberApiFormat)

FOUNDATION_EXPORT id<CucumberApiFormat> create_CucumberApiFormat(NSString *value);

J2OBJC_TYPE_LITERAL_HEADER(CucumberApiFormat)

#endif

#pragma pop_macro("INCLUDE_ALL_CucumberApiFormat")
