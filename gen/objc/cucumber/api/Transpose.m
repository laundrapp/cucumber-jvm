//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/api/Transpose.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "cucumber/api/Transpose.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/lang/annotation/Target.h"

__attribute__((unused)) static IOSObjectArray *CucumberApiTranspose__Annotations$0(void);

@implementation CucumberApiTranspose

@synthesize value = value_;

+ (jboolean)valueDefault {
  return true;
}

- (IOSClass *)annotationType {
  return CucumberApiTranspose_class_();
}

- (NSString *)description {
  return [NSString stringWithFormat:@"@cucumber.api.Transpose(value=%d)", value_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(value);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "Z", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&CucumberApiTranspose__Annotations$0 };
  static const J2ObjcClassInfo _CucumberApiTranspose = { "Transpose", "cucumber.api", ptrTable, methods, fields, 7, 0x2609, 1, 1, -1, -1, -1, -1, 0 };
  return &_CucumberApiTranspose;
}

@end

id<CucumberApiTranspose> create_CucumberApiTranspose(jboolean value) {
  CucumberApiTranspose *self = AUTORELEASE([[CucumberApiTranspose alloc] init]);
  self->value_ = value;
  return self;
}

IOSObjectArray *CucumberApiTranspose__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, PARAMETER) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(CucumberApiTranspose)
