//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/api/TableConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberApiTableConverter")
#ifdef RESTRICT_CucumberApiTableConverter
#define INCLUDE_ALL_CucumberApiTableConverter 0
#else
#define INCLUDE_ALL_CucumberApiTableConverter 1
#endif
#undef RESTRICT_CucumberApiTableConverter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBTableConverter_) && (INCLUDE_ALL_CucumberApiTableConverter || defined(INCLUDE_CCBTableConverter))
#define CCBTableConverter_

@class CCBDataTable;
@class IOSObjectArray;
@protocol JavaLangReflectType;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@protocol CCBTableConverter < JavaObject >

- (id)convertWithCCBDataTable:(CCBDataTable *)dataTable
      withJavaLangReflectType:(id<JavaLangReflectType>)type
                  withBoolean:(jboolean)transposed;

- (id<JavaUtilList>)toListWithCCBDataTable:(CCBDataTable *)dataTable
                   withJavaLangReflectType:(id<JavaLangReflectType>)itemType;

- (id<JavaUtilList>)toListsWithCCBDataTable:(CCBDataTable *)dataTable
                    withJavaLangReflectType:(id<JavaLangReflectType>)itemType;

- (id<JavaUtilMap>)toMapWithCCBDataTable:(CCBDataTable *)dataTable
                 withJavaLangReflectType:(id<JavaLangReflectType>)keyType
                 withJavaLangReflectType:(id<JavaLangReflectType>)valueType;

- (id<JavaUtilList>)toMapsWithCCBDataTable:(CCBDataTable *)dataTable
                   withJavaLangReflectType:(id<JavaLangReflectType>)keyType
                   withJavaLangReflectType:(id<JavaLangReflectType>)valueType;

- (CCBDataTable *)toTableWithJavaUtilList:(id<JavaUtilList>)objects
                        withNSStringArray:(IOSObjectArray *)columnNames;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBTableConverter)

J2OBJC_TYPE_LITERAL_HEADER(CCBTableConverter)

#define CucumberApiTableConverter CCBTableConverter

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberApiTableConverter")
