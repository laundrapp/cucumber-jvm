//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/api/PendingException.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "cucumber/api/Pending.h"
#include "cucumber/api/PendingException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"

__attribute__((unused)) static IOSObjectArray *CCBPendingException__Annotations$0(void);

@implementation CCBPendingException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CCBPendingException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithNSString:(NSString *)message {
  CCBPendingException_initWithNSString_(self, message);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", (void *)&CCBPendingException__Annotations$0 };
  static const J2ObjcClassInfo _CCBPendingException = { "PendingException", "cucumber.api", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, 1 };
  return &_CCBPendingException;
}

@end

void CCBPendingException_init(CCBPendingException *self) {
  CCBPendingException_initWithNSString_(self, @"TODO: implement me");
}

CCBPendingException *new_CCBPendingException_init() {
  J2OBJC_NEW_IMPL(CCBPendingException, init)
}

CCBPendingException *create_CCBPendingException_init() {
  J2OBJC_CREATE_IMPL(CCBPendingException, init)
}

void CCBPendingException_initWithNSString_(CCBPendingException *self, NSString *message) {
  JavaLangRuntimeException_initWithNSString_(self, message);
}

CCBPendingException *new_CCBPendingException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(CCBPendingException, initWithNSString_, message)
}

CCBPendingException *create_CCBPendingException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(CCBPendingException, initWithNSString_, message)
}

IOSObjectArray *CCBPendingException__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CCBPending() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CCBPendingException)
