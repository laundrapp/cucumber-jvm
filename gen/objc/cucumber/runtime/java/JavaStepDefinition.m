//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/java/src/main/java/cucumber/runtime/java/JavaStepDefinition.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "cucumber/api/java/ObjectFactory.h"
#include "cucumber/runtime/JdkPatternArgumentMatcher.h"
#include "cucumber/runtime/MethodFormat.h"
#include "cucumber/runtime/ParameterInfo.h"
#include "cucumber/runtime/Utils.h"
#include "cucumber/runtime/java/JavaStepDefinition.h"
#include "gherkin/pickles/PickleStep.h"
#include "java/lang/Integer.h"
#include "java/lang/StackTraceElement.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/Type.h"
#include "java/util/List.h"
#include "java/util/regex/Pattern.h"

@interface CCBJavaStepDefinition () {
 @public
  JavaLangReflectMethod *method_;
  JavaUtilRegexPattern *pattern_;
  jlong timeoutMillis_;
  id<CCBObjectFactory> objectFactory_;
  CCBRJdkPatternArgumentMatcher *argumentMatcher_;
  id<JavaUtilList> parameterInfos_;
}

@end

J2OBJC_FIELD_SETTER(CCBJavaStepDefinition, method_, JavaLangReflectMethod *)
J2OBJC_FIELD_SETTER(CCBJavaStepDefinition, pattern_, JavaUtilRegexPattern *)
J2OBJC_FIELD_SETTER(CCBJavaStepDefinition, objectFactory_, id<CCBObjectFactory>)
J2OBJC_FIELD_SETTER(CCBJavaStepDefinition, argumentMatcher_, CCBRJdkPatternArgumentMatcher *)
J2OBJC_FIELD_SETTER(CCBJavaStepDefinition, parameterInfos_, id<JavaUtilList>)

@implementation CCBJavaStepDefinition

- (instancetype __nonnull)initWithJavaLangReflectMethod:(JavaLangReflectMethod *)method
                               withJavaUtilRegexPattern:(JavaUtilRegexPattern *)pattern
                                               withLong:(jlong)timeoutMillis
                                   withCCBObjectFactory:(id<CCBObjectFactory>)objectFactory {
  CCBJavaStepDefinition_initWithJavaLangReflectMethod_withJavaUtilRegexPattern_withLong_withCCBObjectFactory_(self, method, pattern, timeoutMillis, objectFactory);
  return self;
}

- (void)executeWithNSString:(NSString *)language
          withNSObjectArray:(IOSObjectArray *)args {
  CCBRUtils_invokeWithId_withJavaLangReflectMethod_withLong_withNSObjectArray_([((id<CCBObjectFactory>) nil_chk(objectFactory_)) getInstanceWithIOSClass:[((JavaLangReflectMethod *) nil_chk(method_)) getDeclaringClass]], method_, timeoutMillis_, args);
}

- (id<JavaUtilList>)matchedArgumentsWithGherkinPicklesPickleStep:(GherkinPicklesPickleStep *)step {
  return [((CCBRJdkPatternArgumentMatcher *) nil_chk(argumentMatcher_)) argumentsFromWithNSString:[((GherkinPicklesPickleStep *) nil_chk(step)) getText]];
}

- (NSString *)getLocationWithBoolean:(jboolean)detail {
  CCBRMethodFormat *format = detail ? JreLoadStatic(CCBRMethodFormat, FULL) : JreLoadStatic(CCBRMethodFormat, SHORT);
  return [format formatWithJavaLangReflectMethod:method_];
}

- (JavaLangInteger *)getParameterCount {
  return JavaLangInteger_valueOfWithInt_([((id<JavaUtilList>) nil_chk(parameterInfos_)) size]);
}

- (CCBRParameterInfo *)getParameterTypeWithInt:(jint)n
                       withJavaLangReflectType:(id<JavaLangReflectType>)argumentType {
  return [((id<JavaUtilList>) nil_chk(parameterInfos_)) getWithInt:n];
}

- (jboolean)isDefinedAtWithJavaLangStackTraceElement:(JavaLangStackTraceElement *)e {
  return [((NSString *) nil_chk([((JavaLangStackTraceElement *) nil_chk(e)) getClassName])) isEqual:[((IOSClass *) nil_chk([((JavaLangReflectMethod *) nil_chk(method_)) getDeclaringClass])) getName]] && [((NSString *) nil_chk([e getMethodName])) isEqual:[method_ getName]];
}

- (NSString *)getPattern {
  return [((JavaUtilRegexPattern *) nil_chk(pattern_)) pattern];
}

- (jboolean)isScenarioScoped {
  return false;
}

- (void)dealloc {
  RELEASE_(method_);
  RELEASE_(pattern_);
  RELEASE_(objectFactory_);
  RELEASE_(argumentMatcher_);
  RELEASE_(parameterInfos_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCCBRParameterInfo;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaLangReflectMethod:withJavaUtilRegexPattern:withLong:withCCBObjectFactory:);
  methods[1].selector = @selector(executeWithNSString:withNSObjectArray:);
  methods[2].selector = @selector(matchedArgumentsWithGherkinPicklesPickleStep:);
  methods[3].selector = @selector(getLocationWithBoolean:);
  methods[4].selector = @selector(getParameterCount);
  methods[5].selector = @selector(getParameterTypeWithInt:withJavaLangReflectType:);
  methods[6].selector = @selector(isDefinedAtWithJavaLangStackTraceElement:);
  methods[7].selector = @selector(getPattern);
  methods[8].selector = @selector(isScenarioScoped);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "method_", "LJavaLangReflectMethod;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "pattern_", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "timeoutMillis_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "objectFactory_", "LCCBObjectFactory;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "argumentMatcher_", "LCCBRJdkPatternArgumentMatcher;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "parameterInfos_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 13, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangReflectMethod;LJavaUtilRegexPattern;JLCCBObjectFactory;", "execute", "LNSString;[LNSObject;", "LJavaLangThrowable;", "matchedArguments", "LGherkinPicklesPickleStep;", "(Lgherkin/pickles/PickleStep;)Ljava/util/List<Lcucumber/runtime/Argument;>;", "getLocation", "Z", "getParameterType", "ILJavaLangReflectType;", "isDefinedAt", "LJavaLangStackTraceElement;", "Ljava/util/List<Lcucumber/runtime/ParameterInfo;>;" };
  static const J2ObjcClassInfo _CCBJavaStepDefinition = { "JavaStepDefinition", "cucumber.runtime.java", ptrTable, methods, fields, 7, 0x0, 9, 6, -1, -1, -1, -1, -1 };
  return &_CCBJavaStepDefinition;
}

@end

void CCBJavaStepDefinition_initWithJavaLangReflectMethod_withJavaUtilRegexPattern_withLong_withCCBObjectFactory_(CCBJavaStepDefinition *self, JavaLangReflectMethod *method, JavaUtilRegexPattern *pattern, jlong timeoutMillis, id<CCBObjectFactory> objectFactory) {
  NSObject_init(self);
  JreStrongAssign(&self->method_, method);
  JreStrongAssign(&self->pattern_, pattern);
  self->timeoutMillis_ = timeoutMillis;
  JreStrongAssign(&self->objectFactory_, objectFactory);
  JreStrongAssignAndConsume(&self->argumentMatcher_, new_CCBRJdkPatternArgumentMatcher_initWithJavaUtilRegexPattern_(pattern));
  JreStrongAssign(&self->parameterInfos_, CCBRParameterInfo_fromMethodWithJavaLangReflectMethod_(method));
}

CCBJavaStepDefinition *new_CCBJavaStepDefinition_initWithJavaLangReflectMethod_withJavaUtilRegexPattern_withLong_withCCBObjectFactory_(JavaLangReflectMethod *method, JavaUtilRegexPattern *pattern, jlong timeoutMillis, id<CCBObjectFactory> objectFactory) {
  J2OBJC_NEW_IMPL(CCBJavaStepDefinition, initWithJavaLangReflectMethod_withJavaUtilRegexPattern_withLong_withCCBObjectFactory_, method, pattern, timeoutMillis, objectFactory)
}

CCBJavaStepDefinition *create_CCBJavaStepDefinition_initWithJavaLangReflectMethod_withJavaUtilRegexPattern_withLong_withCCBObjectFactory_(JavaLangReflectMethod *method, JavaUtilRegexPattern *pattern, jlong timeoutMillis, id<CCBObjectFactory> objectFactory) {
  J2OBJC_CREATE_IMPL(CCBJavaStepDefinition, initWithJavaLangReflectMethod_withJavaUtilRegexPattern_withLong_withCCBObjectFactory_, method, pattern, timeoutMillis, objectFactory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CCBJavaStepDefinition)
