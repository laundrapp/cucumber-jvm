//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/RuntimeOptions.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRuntimeRuntimeOptions")
#ifdef RESTRICT_CucumberRuntimeRuntimeOptions
#define INCLUDE_ALL_CucumberRuntimeRuntimeOptions 0
#else
#define INCLUDE_ALL_CucumberRuntimeRuntimeOptions 1
#endif
#undef RESTRICT_CucumberRuntimeRuntimeOptions

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberRuntimeRuntimeOptions_) && (INCLUDE_ALL_CucumberRuntimeRuntimeOptions || defined(INCLUDE_CucumberRuntimeRuntimeOptions))
#define CucumberRuntimeRuntimeOptions_

@class CucumberApiSnippetType;
@class CucumberRunnerEventBus;
@class CucumberRuntimeEnv;
@class CucumberRuntimeFormatterPluginFactory;
@class JavaLangClassLoader;
@protocol CucumberApiFormatterFormatter;
@protocol CucumberApiStepDefinitionReporter;
@protocol CucumberApiSummaryPrinter;
@protocol CucumberRuntimeIoResourceLoader;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface CucumberRuntimeRuntimeOptions : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithCucumberRuntimeEnv:(CucumberRuntimeEnv *)env
                                    withJavaUtilList:(id<JavaUtilList>)argv;

- (instancetype __nonnull)initWithCucumberRuntimeEnv:(CucumberRuntimeEnv *)env
           withCucumberRuntimeFormatterPluginFactory:(CucumberRuntimeFormatterPluginFactory *)pluginFactory
                                    withJavaUtilList:(id<JavaUtilList>)argv;

/*!
 @brief Create a new instance from a list of options, for example:
 <p>
  <pre<<code>Arrays.asList("--name", "the fox", "--plugin", "pretty", "--strict");</code>
@endcode
 @param argv the arguments
 */
- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)argv;

- (instancetype __nonnull)initWithCucumberRuntimeFormatterPluginFactory:(CucumberRuntimeFormatterPluginFactory *)pluginFactory
                                                       withJavaUtilList:(id<JavaUtilList>)argv;

/*!
 @brief Create a new instance from a string of options, for example:
 <p>
  <pre<<code>"--name 'the fox' --plugin pretty --strict"</code>
@endcode
 @param argv the arguments
 */
- (instancetype __nonnull)initWithNSString:(NSString *)argv;

- (void)addPluginWithCucumberApiFormatterFormatter:(id<CucumberApiFormatterFormatter>)plugin;

- (id<JavaUtilList>)cucumberFeaturesWithCucumberRuntimeIoResourceLoader:(id<CucumberRuntimeIoResourceLoader>)resourceLoader
                                             withCucumberRunnerEventBus:(CucumberRunnerEventBus *)bus;

- (id<CucumberApiFormatterFormatter>)formatterWithJavaLangClassLoader:(JavaLangClassLoader *)classLoader;

- (id<JavaUtilList>)getFeaturePaths;

- (id<JavaUtilList>)getGlue;

- (id<JavaUtilList>)getJunitOptions;

- (id<JavaUtilMap>)getLineFiltersWithCucumberRuntimeIoResourceLoader:(id<CucumberRuntimeIoResourceLoader>)resourceLoader;

- (id<JavaUtilList>)getNameFilters;

- (id<JavaUtilList>)getPlugins;

- (CucumberApiSnippetType *)getSnippetType;

- (id<JavaUtilList>)getTagFilters;

- (jboolean)isDryRun;

- (jboolean)isMonochrome;

- (jboolean)isStrict;

- (id<CucumberApiStepDefinitionReporter>)stepDefinitionReporterWithJavaLangClassLoader:(JavaLangClassLoader *)classLoader;

- (id<CucumberApiSummaryPrinter>)summaryPrinterWithJavaLangClassLoader:(JavaLangClassLoader *)classLoader;

#pragma mark Package-Private

- (id<JavaUtilList>)getConverters;

+ (void)loadUsageTextIfNeeded;

- (void)setEventBusWithCucumberRunnerEventBus:(CucumberRunnerEventBus *)bus;

- (CucumberRuntimeRuntimeOptions *)withConvertersWithJavaUtilList:(id<JavaUtilList>)converters;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(CucumberRuntimeRuntimeOptions)

inline NSString *CucumberRuntimeRuntimeOptions_get_VERSION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *CucumberRuntimeRuntimeOptions_VERSION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberRuntimeRuntimeOptions, VERSION, NSString *)

inline NSString *CucumberRuntimeRuntimeOptions_get_USAGE_RESOURCE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *CucumberRuntimeRuntimeOptions_USAGE_RESOURCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberRuntimeRuntimeOptions, USAGE_RESOURCE, NSString *)

inline NSString *CucumberRuntimeRuntimeOptions_get_usageText(void);
inline NSString *CucumberRuntimeRuntimeOptions_set_usageText(NSString *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *CucumberRuntimeRuntimeOptions_usageText;
J2OBJC_STATIC_FIELD_OBJ(CucumberRuntimeRuntimeOptions, usageText, NSString *)

FOUNDATION_EXPORT void CucumberRuntimeRuntimeOptions_initWithNSString_(CucumberRuntimeRuntimeOptions *self, NSString *argv);

FOUNDATION_EXPORT CucumberRuntimeRuntimeOptions *new_CucumberRuntimeRuntimeOptions_initWithNSString_(NSString *argv) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberRuntimeRuntimeOptions *create_CucumberRuntimeRuntimeOptions_initWithNSString_(NSString *argv);

FOUNDATION_EXPORT void CucumberRuntimeRuntimeOptions_initWithJavaUtilList_(CucumberRuntimeRuntimeOptions *self, id<JavaUtilList> argv);

FOUNDATION_EXPORT CucumberRuntimeRuntimeOptions *new_CucumberRuntimeRuntimeOptions_initWithJavaUtilList_(id<JavaUtilList> argv) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberRuntimeRuntimeOptions *create_CucumberRuntimeRuntimeOptions_initWithJavaUtilList_(id<JavaUtilList> argv);

FOUNDATION_EXPORT void CucumberRuntimeRuntimeOptions_initWithCucumberRuntimeEnv_withJavaUtilList_(CucumberRuntimeRuntimeOptions *self, CucumberRuntimeEnv *env, id<JavaUtilList> argv);

FOUNDATION_EXPORT CucumberRuntimeRuntimeOptions *new_CucumberRuntimeRuntimeOptions_initWithCucumberRuntimeEnv_withJavaUtilList_(CucumberRuntimeEnv *env, id<JavaUtilList> argv) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberRuntimeRuntimeOptions *create_CucumberRuntimeRuntimeOptions_initWithCucumberRuntimeEnv_withJavaUtilList_(CucumberRuntimeEnv *env, id<JavaUtilList> argv);

FOUNDATION_EXPORT void CucumberRuntimeRuntimeOptions_initWithCucumberRuntimeFormatterPluginFactory_withJavaUtilList_(CucumberRuntimeRuntimeOptions *self, CucumberRuntimeFormatterPluginFactory *pluginFactory, id<JavaUtilList> argv);

FOUNDATION_EXPORT CucumberRuntimeRuntimeOptions *new_CucumberRuntimeRuntimeOptions_initWithCucumberRuntimeFormatterPluginFactory_withJavaUtilList_(CucumberRuntimeFormatterPluginFactory *pluginFactory, id<JavaUtilList> argv) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberRuntimeRuntimeOptions *create_CucumberRuntimeRuntimeOptions_initWithCucumberRuntimeFormatterPluginFactory_withJavaUtilList_(CucumberRuntimeFormatterPluginFactory *pluginFactory, id<JavaUtilList> argv);

FOUNDATION_EXPORT void CucumberRuntimeRuntimeOptions_initWithCucumberRuntimeEnv_withCucumberRuntimeFormatterPluginFactory_withJavaUtilList_(CucumberRuntimeRuntimeOptions *self, CucumberRuntimeEnv *env, CucumberRuntimeFormatterPluginFactory *pluginFactory, id<JavaUtilList> argv);

FOUNDATION_EXPORT CucumberRuntimeRuntimeOptions *new_CucumberRuntimeRuntimeOptions_initWithCucumberRuntimeEnv_withCucumberRuntimeFormatterPluginFactory_withJavaUtilList_(CucumberRuntimeEnv *env, CucumberRuntimeFormatterPluginFactory *pluginFactory, id<JavaUtilList> argv) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberRuntimeRuntimeOptions *create_CucumberRuntimeRuntimeOptions_initWithCucumberRuntimeEnv_withCucumberRuntimeFormatterPluginFactory_withJavaUtilList_(CucumberRuntimeEnv *env, CucumberRuntimeFormatterPluginFactory *pluginFactory, id<JavaUtilList> argv);

FOUNDATION_EXPORT void CucumberRuntimeRuntimeOptions_loadUsageTextIfNeeded(void);

J2OBJC_TYPE_LITERAL_HEADER(CucumberRuntimeRuntimeOptions)

#endif

#if !defined (CucumberRuntimeRuntimeOptions_ParsedPluginData_) && (INCLUDE_ALL_CucumberRuntimeRuntimeOptions || defined(INCLUDE_CucumberRuntimeRuntimeOptions_ParsedPluginData))
#define CucumberRuntimeRuntimeOptions_ParsedPluginData_

@class CucumberRuntimeRuntimeOptions;
@class CucumberRuntimeRuntimeOptions_ParsedOptionNames;
@protocol JavaUtilList;

@interface CucumberRuntimeRuntimeOptions_ParsedPluginData : NSObject {
 @public
  CucumberRuntimeRuntimeOptions_ParsedOptionNames *formatterNames_;
  CucumberRuntimeRuntimeOptions_ParsedOptionNames *stepDefinitionReporterNames_;
  CucumberRuntimeRuntimeOptions_ParsedOptionNames *summaryPrinterNames_;
}

#pragma mark Public

- (void)addPluginNameWithNSString:(NSString *)name
                      withBoolean:(jboolean)isAddPlugin;

- (void)updatePluginFormatterNamesWithJavaUtilList:(id<JavaUtilList>)pluginFormatterNames;

- (void)updatePluginStepDefinitionReporterNamesWithJavaUtilList:(id<JavaUtilList>)pluginStepDefinitionReporterNames;

- (void)updatePluginSummaryPrinterNamesWithJavaUtilList:(id<JavaUtilList>)pluginSummaryPrinterNames;

#pragma mark Package-Private

- (instancetype __nonnull)initWithCucumberRuntimeRuntimeOptions:(CucumberRuntimeRuntimeOptions *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeRuntimeOptions_ParsedPluginData)

J2OBJC_FIELD_SETTER(CucumberRuntimeRuntimeOptions_ParsedPluginData, formatterNames_, CucumberRuntimeRuntimeOptions_ParsedOptionNames *)
J2OBJC_FIELD_SETTER(CucumberRuntimeRuntimeOptions_ParsedPluginData, stepDefinitionReporterNames_, CucumberRuntimeRuntimeOptions_ParsedOptionNames *)
J2OBJC_FIELD_SETTER(CucumberRuntimeRuntimeOptions_ParsedPluginData, summaryPrinterNames_, CucumberRuntimeRuntimeOptions_ParsedOptionNames *)

FOUNDATION_EXPORT void CucumberRuntimeRuntimeOptions_ParsedPluginData_initWithCucumberRuntimeRuntimeOptions_(CucumberRuntimeRuntimeOptions_ParsedPluginData *self, CucumberRuntimeRuntimeOptions *outer$);

FOUNDATION_EXPORT CucumberRuntimeRuntimeOptions_ParsedPluginData *new_CucumberRuntimeRuntimeOptions_ParsedPluginData_initWithCucumberRuntimeRuntimeOptions_(CucumberRuntimeRuntimeOptions *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberRuntimeRuntimeOptions_ParsedPluginData *create_CucumberRuntimeRuntimeOptions_ParsedPluginData_initWithCucumberRuntimeRuntimeOptions_(CucumberRuntimeRuntimeOptions *outer$);

J2OBJC_TYPE_LITERAL_HEADER(CucumberRuntimeRuntimeOptions_ParsedPluginData)

#endif

#if !defined (CucumberRuntimeRuntimeOptions_ParsedOptionNames_) && (INCLUDE_ALL_CucumberRuntimeRuntimeOptions || defined(INCLUDE_CucumberRuntimeRuntimeOptions_ParsedOptionNames))
#define CucumberRuntimeRuntimeOptions_ParsedOptionNames_

@class CucumberRuntimeRuntimeOptions;
@protocol JavaUtilList;

@interface CucumberRuntimeRuntimeOptions_ParsedOptionNames : NSObject

#pragma mark Public

- (void)addNameWithNSString:(NSString *)name
                withBoolean:(jboolean)isAddOption;

- (void)updateNameListWithJavaUtilList:(id<JavaUtilList>)nameList;

#pragma mark Package-Private

- (instancetype __nonnull)initWithCucumberRuntimeRuntimeOptions:(CucumberRuntimeRuntimeOptions *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeRuntimeOptions_ParsedOptionNames)

FOUNDATION_EXPORT void CucumberRuntimeRuntimeOptions_ParsedOptionNames_initWithCucumberRuntimeRuntimeOptions_(CucumberRuntimeRuntimeOptions_ParsedOptionNames *self, CucumberRuntimeRuntimeOptions *outer$);

FOUNDATION_EXPORT CucumberRuntimeRuntimeOptions_ParsedOptionNames *new_CucumberRuntimeRuntimeOptions_ParsedOptionNames_initWithCucumberRuntimeRuntimeOptions_(CucumberRuntimeRuntimeOptions *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberRuntimeRuntimeOptions_ParsedOptionNames *create_CucumberRuntimeRuntimeOptions_ParsedOptionNames_initWithCucumberRuntimeRuntimeOptions_(CucumberRuntimeRuntimeOptions *outer$);

J2OBJC_TYPE_LITERAL_HEADER(CucumberRuntimeRuntimeOptions_ParsedOptionNames)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRuntimeRuntimeOptions")
