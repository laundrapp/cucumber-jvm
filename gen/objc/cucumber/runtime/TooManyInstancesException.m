//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/TooManyInstancesException.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "cucumber/runtime/CucumberException.h"
#include "cucumber/runtime/TooManyInstancesException.h"
#include "java/util/Collection.h"

@interface CCBRTooManyInstancesException ()

+ (NSString *)createMessageWithJavaUtilCollection:(id<JavaUtilCollection>)instances;

@end

__attribute__((unused)) static NSString *CCBRTooManyInstancesException_createMessageWithJavaUtilCollection_(id<JavaUtilCollection> instances);

@implementation CCBRTooManyInstancesException

- (instancetype __nonnull)initWithJavaUtilCollection:(id<JavaUtilCollection>)instances {
  CCBRTooManyInstancesException_initWithJavaUtilCollection_(self, instances);
  return self;
}

+ (NSString *)createMessageWithJavaUtilCollection:(id<JavaUtilCollection>)instances {
  return CCBRTooManyInstancesException_createMessageWithJavaUtilCollection_(instances);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilCollection:);
  methods[1].selector = @selector(createMessageWithJavaUtilCollection:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaUtilCollection;", "createMessage" };
  static const J2ObjcClassInfo _CCBRTooManyInstancesException = { "TooManyInstancesException", "cucumber.runtime", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_CCBRTooManyInstancesException;
}

@end

void CCBRTooManyInstancesException_initWithJavaUtilCollection_(CCBRTooManyInstancesException *self, id<JavaUtilCollection> instances) {
  CCBRCucumberException_initWithNSString_(self, CCBRTooManyInstancesException_createMessageWithJavaUtilCollection_(instances));
}

CCBRTooManyInstancesException *new_CCBRTooManyInstancesException_initWithJavaUtilCollection_(id<JavaUtilCollection> instances) {
  J2OBJC_NEW_IMPL(CCBRTooManyInstancesException, initWithJavaUtilCollection_, instances)
}

CCBRTooManyInstancesException *create_CCBRTooManyInstancesException_initWithJavaUtilCollection_(id<JavaUtilCollection> instances) {
  J2OBJC_CREATE_IMPL(CCBRTooManyInstancesException, initWithJavaUtilCollection_, instances)
}

NSString *CCBRTooManyInstancesException_createMessageWithJavaUtilCollection_(id<JavaUtilCollection> instances) {
  CCBRTooManyInstancesException_initialize();
  return NSString_java_formatWithNSString_withNSObjectArray_(JreStrcat("$@", @"Expected only one instance, but found too many: ", instances), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CCBRTooManyInstancesException)
