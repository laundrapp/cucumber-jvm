//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/autocomplete/MetaStepdef.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/runtime/autocomplete/MetaStepdef.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/SortedSet.h"
#include "java/util/TreeSet.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@interface CucumberRuntimeAutocompleteMetaStepdef () {
 @public
  JavaUtilRegexPattern *pattern_;
}

- (JavaUtilRegexPattern *)pattern;

@end

J2OBJC_FIELD_SETTER(CucumberRuntimeAutocompleteMetaStepdef, pattern_, JavaUtilRegexPattern *)

__attribute__((unused)) static JavaUtilRegexPattern *CucumberRuntimeAutocompleteMetaStepdef_pattern(CucumberRuntimeAutocompleteMetaStepdef *self);

@implementation CucumberRuntimeAutocompleteMetaStepdef

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberRuntimeAutocompleteMetaStepdef_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)matchesWithNSString:(NSString *)text {
  JavaUtilRegexPattern *p = CucumberRuntimeAutocompleteMetaStepdef_pattern(self);
  JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(p)) matcherWithJavaLangCharSequence:text];
  return [((JavaUtilRegexMatcher *) nil_chk(m)) matches] || [m hitEnd];
}

- (JavaUtilRegexPattern *)pattern {
  return CucumberRuntimeAutocompleteMetaStepdef_pattern(self);
}

- (jboolean)isEqual:(id)o {
  if (self == o) return true;
  if (o == nil || [self java_getClass] != [o java_getClass]) return false;
  CucumberRuntimeAutocompleteMetaStepdef *that = (CucumberRuntimeAutocompleteMetaStepdef *) cast_chk(o, [CucumberRuntimeAutocompleteMetaStepdef class]);
  if (![((NSString *) nil_chk(flags_)) isEqual:that->flags_]) return false;
  if (![((NSString *) nil_chk(source_)) isEqual:that->source_]) return false;
  if (![((id<JavaUtilSortedSet>) nil_chk(steps_)) isEqual:that->steps_]) return false;
  return true;
}

- (NSUInteger)hash {
  jint result = ((jint) [((id<JavaUtilSortedSet>) nil_chk(steps_)) hash]);
  result = 31 * result + ((jint) [((NSString *) nil_chk(source_)) hash]);
  result = 31 * result + ((jint) [((NSString *) nil_chk(flags_)) hash]);
  return result;
}

- (NSString *)description {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Needs gson");
}

- (void)dealloc {
  RELEASE_(steps_);
  RELEASE_(source_);
  RELEASE_(flags_);
  RELEASE_(pattern_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilRegexPattern;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(matchesWithNSString:);
  methods[2].selector = @selector(pattern);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "steps_", "LJavaUtilSortedSet;", .constantValue.asLong = 0, 0x11, -1, -1, 6, -1 },
    { "source_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "flags_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "pattern_", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "matches", "LNSString;", "equals", "LNSObject;", "hashCode", "toString", "Ljava/util/SortedSet<Lcucumber/runtime/autocomplete/MetaStepdef$MetaStep;>;", "LCucumberRuntimeAutocompleteMetaStepdef_MetaStep;LCucumberRuntimeAutocompleteMetaStepdef_MetaArgument;" };
  static const J2ObjcClassInfo _CucumberRuntimeAutocompleteMetaStepdef = { "MetaStepdef", "cucumber.runtime.autocomplete", ptrTable, methods, fields, 7, 0x1, 6, 4, -1, 7, -1, -1, -1 };
  return &_CucumberRuntimeAutocompleteMetaStepdef;
}

@end

void CucumberRuntimeAutocompleteMetaStepdef_init(CucumberRuntimeAutocompleteMetaStepdef *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->steps_, new_JavaUtilTreeSet_init());
}

CucumberRuntimeAutocompleteMetaStepdef *new_CucumberRuntimeAutocompleteMetaStepdef_init() {
  J2OBJC_NEW_IMPL(CucumberRuntimeAutocompleteMetaStepdef, init)
}

CucumberRuntimeAutocompleteMetaStepdef *create_CucumberRuntimeAutocompleteMetaStepdef_init() {
  J2OBJC_CREATE_IMPL(CucumberRuntimeAutocompleteMetaStepdef, init)
}

JavaUtilRegexPattern *CucumberRuntimeAutocompleteMetaStepdef_pattern(CucumberRuntimeAutocompleteMetaStepdef *self) {
  if (self->pattern_ == nil) {
    JreStrongAssign(&self->pattern_, JavaUtilRegexPattern_compileWithNSString_(self->source_));
  }
  return self->pattern_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeAutocompleteMetaStepdef)

@implementation CucumberRuntimeAutocompleteMetaStepdef_MetaStep

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberRuntimeAutocompleteMetaStepdef_MetaStep_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareToWithId:(CucumberRuntimeAutocompleteMetaStepdef_MetaStep *)other {
  cast_chk(other, [CucumberRuntimeAutocompleteMetaStepdef_MetaStep class]);
  return [((NSString *) nil_chk(name_)) compareToWithId:((CucumberRuntimeAutocompleteMetaStepdef_MetaStep *) nil_chk(other))->name_];
}

- (jboolean)isEqual:(id)o {
  if (self == o) return true;
  if (o == nil || [self java_getClass] != [o java_getClass]) return false;
  CucumberRuntimeAutocompleteMetaStepdef_MetaStep *metaStep = (CucumberRuntimeAutocompleteMetaStepdef_MetaStep *) cast_chk(o, [CucumberRuntimeAutocompleteMetaStepdef_MetaStep class]);
  if (![((id<JavaUtilList>) nil_chk(args_)) isEqual:metaStep->args_]) return false;
  if (![((NSString *) nil_chk(name_)) isEqual:metaStep->name_]) return false;
  return true;
}

- (NSUInteger)hash {
  jint result = ((jint) [((NSString *) nil_chk(name_)) hash]);
  result = 31 * result + ((jint) [((id<JavaUtilList>) nil_chk(args_)) hash]);
  return result;
}

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(args_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareToWithId:);
  methods[2].selector = @selector(isEqual:);
  methods[3].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "args_", "LJavaUtilList;", .constantValue.asLong = 0, 0x11, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "compareTo", "LCucumberRuntimeAutocompleteMetaStepdef_MetaStep;", "equals", "LNSObject;", "hashCode", "Ljava/util/List<Lcucumber/runtime/autocomplete/MetaStepdef$MetaArgument;>;", "LCucumberRuntimeAutocompleteMetaStepdef;", "Ljava/lang/Object;Ljava/lang/Comparable<Lcucumber/runtime/autocomplete/MetaStepdef$MetaStep;>;" };
  static const J2ObjcClassInfo _CucumberRuntimeAutocompleteMetaStepdef_MetaStep = { "MetaStep", "cucumber.runtime.autocomplete", ptrTable, methods, fields, 7, 0x9, 4, 2, 6, -1, -1, 7, -1 };
  return &_CucumberRuntimeAutocompleteMetaStepdef_MetaStep;
}

@end

void CucumberRuntimeAutocompleteMetaStepdef_MetaStep_init(CucumberRuntimeAutocompleteMetaStepdef_MetaStep *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->args_, new_JavaUtilArrayList_init());
}

CucumberRuntimeAutocompleteMetaStepdef_MetaStep *new_CucumberRuntimeAutocompleteMetaStepdef_MetaStep_init() {
  J2OBJC_NEW_IMPL(CucumberRuntimeAutocompleteMetaStepdef_MetaStep, init)
}

CucumberRuntimeAutocompleteMetaStepdef_MetaStep *create_CucumberRuntimeAutocompleteMetaStepdef_MetaStep_init() {
  J2OBJC_CREATE_IMPL(CucumberRuntimeAutocompleteMetaStepdef_MetaStep, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeAutocompleteMetaStepdef_MetaStep)

@implementation CucumberRuntimeAutocompleteMetaStepdef_MetaArgument

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberRuntimeAutocompleteMetaStepdef_MetaArgument_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(val_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "offset_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "val_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberRuntimeAutocompleteMetaStepdef;" };
  static const J2ObjcClassInfo _CucumberRuntimeAutocompleteMetaStepdef_MetaArgument = { "MetaArgument", "cucumber.runtime.autocomplete", ptrTable, methods, fields, 7, 0x9, 1, 2, 0, -1, -1, -1, -1 };
  return &_CucumberRuntimeAutocompleteMetaStepdef_MetaArgument;
}

@end

void CucumberRuntimeAutocompleteMetaStepdef_MetaArgument_init(CucumberRuntimeAutocompleteMetaStepdef_MetaArgument *self) {
  NSObject_init(self);
}

CucumberRuntimeAutocompleteMetaStepdef_MetaArgument *new_CucumberRuntimeAutocompleteMetaStepdef_MetaArgument_init() {
  J2OBJC_NEW_IMPL(CucumberRuntimeAutocompleteMetaStepdef_MetaArgument, init)
}

CucumberRuntimeAutocompleteMetaStepdef_MetaArgument *create_CucumberRuntimeAutocompleteMetaStepdef_MetaArgument_init() {
  J2OBJC_CREATE_IMPL(CucumberRuntimeAutocompleteMetaStepdef_MetaArgument, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeAutocompleteMetaStepdef_MetaArgument)
