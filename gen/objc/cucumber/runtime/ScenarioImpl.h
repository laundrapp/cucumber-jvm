//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/ScenarioImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRuntimeScenarioImpl")
#ifdef RESTRICT_CucumberRuntimeScenarioImpl
#define INCLUDE_ALL_CucumberRuntimeScenarioImpl 0
#else
#define INCLUDE_ALL_CucumberRuntimeScenarioImpl 1
#endif
#undef RESTRICT_CucumberRuntimeScenarioImpl

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBRScenarioImpl_) && (INCLUDE_ALL_CucumberRuntimeScenarioImpl || defined(INCLUDE_CCBRScenarioImpl))
#define CCBRScenarioImpl_

#define RESTRICT_CucumberApiScenario 1
#define INCLUDE_CucumberApiScenario 1
#include "cucumber/api/Scenario.h"

@class CCBEventBus;
@class CucumberApiResult;
@class CucumberApiResult_Type;
@class GherkinEventsPickleEvent;
@class IOSByteArray;
@class JavaLangThrowable;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

@interface CCBRScenarioImpl : NSObject < CucumberApiScenario >

#pragma mark Public

- (instancetype __nonnull)initWithCCBEventBus:(CCBEventBus *)bus
                 withGherkinEventsPickleEvent:(GherkinEventsPickleEvent *)pickleEvent;

- (void)addWithCucumberApiResult:(CucumberApiResult *)result;

- (void)embedWithByteArray:(IOSByteArray *)data
              withNSString:(NSString *)mimeType;

- (JavaLangThrowable *)getError;

- (NSString *)getId;

- (id<JavaUtilList>)getLines;

- (NSString *)getName;

- (id<JavaUtilCollection>)getSourceTagNames;

- (CucumberApiResult_Type *)getStatus;

- (NSString *)getUri;

- (jboolean)isFailed;

- (void)writeWithNSString:(NSString *)text;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(CCBRScenarioImpl)

FOUNDATION_EXPORT void CCBRScenarioImpl_initWithCCBEventBus_withGherkinEventsPickleEvent_(CCBRScenarioImpl *self, CCBEventBus *bus, GherkinEventsPickleEvent *pickleEvent);

FOUNDATION_EXPORT CCBRScenarioImpl *new_CCBRScenarioImpl_initWithCCBEventBus_withGherkinEventsPickleEvent_(CCBEventBus *bus, GherkinEventsPickleEvent *pickleEvent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBRScenarioImpl *create_CCBRScenarioImpl_initWithCCBEventBus_withGherkinEventsPickleEvent_(CCBEventBus *bus, GherkinEventsPickleEvent *pickleEvent);

J2OBJC_TYPE_LITERAL_HEADER(CCBRScenarioImpl)

@compatibility_alias CucumberRuntimeScenarioImpl CCBRScenarioImpl;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRuntimeScenarioImpl")
