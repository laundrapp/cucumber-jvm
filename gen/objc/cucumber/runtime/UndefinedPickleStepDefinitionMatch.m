//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/UndefinedPickleStepDefinitionMatch.java
//

#include "J2ObjC_source.h"
#include "cucumber/api/Scenario.h"
#include "cucumber/runtime/NoStepDefinition.h"
#include "cucumber/runtime/PickleStepDefinitionMatch.h"
#include "cucumber/runtime/UndefinedPickleStepDefinitionMatch.h"
#include "cucumber/runtime/UndefinedStepDefinitionException.h"
#include "gherkin/pickles/PickleStep.h"
#include "java/util/Collections.h"
#include "java/util/List.h"

@implementation CCBRUndefinedPickleStepDefinitionMatch

- (instancetype __nonnull)initWithGHKPickleStep:(GHKPickleStep *)step {
  CCBRUndefinedPickleStepDefinitionMatch_initWithGHKPickleStep_(self, step);
  return self;
}

- (void)runStepWithNSString:(NSString *)language
    withCucumberApiScenario:(id<CucumberApiScenario>)scenario {
  @throw create_CCBRUndefinedStepDefinitionException_init();
}

- (void)dryRunStepWithNSString:(NSString *)language
       withCucumberApiScenario:(id<CucumberApiScenario>)scenario {
  [self runStepWithNSString:language withCucumberApiScenario:scenario];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 2, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithGHKPickleStep:);
  methods[1].selector = @selector(runStepWithNSString:withCucumberApiScenario:);
  methods[2].selector = @selector(dryRunStepWithNSString:withCucumberApiScenario:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LGHKPickleStep;", "runStep", "LNSString;LCucumberApiScenario;", "LJavaLangThrowable;", "dryRunStep" };
  static const J2ObjcClassInfo _CCBRUndefinedPickleStepDefinitionMatch = { "UndefinedPickleStepDefinitionMatch", "cucumber.runtime", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_CCBRUndefinedPickleStepDefinitionMatch;
}

@end

void CCBRUndefinedPickleStepDefinitionMatch_initWithGHKPickleStep_(CCBRUndefinedPickleStepDefinitionMatch *self, GHKPickleStep *step) {
  CCBRPickleStepDefinitionMatch_initWithJavaUtilList_withCCBRStepDefinition_withNSString_withGHKPickleStep_(self, JavaUtilCollections_emptyList(), create_CCBRNoStepDefinition_init(), nil, step);
}

CCBRUndefinedPickleStepDefinitionMatch *new_CCBRUndefinedPickleStepDefinitionMatch_initWithGHKPickleStep_(GHKPickleStep *step) {
  J2OBJC_NEW_IMPL(CCBRUndefinedPickleStepDefinitionMatch, initWithGHKPickleStep_, step)
}

CCBRUndefinedPickleStepDefinitionMatch *create_CCBRUndefinedPickleStepDefinitionMatch_initWithGHKPickleStep_(GHKPickleStep *step) {
  J2OBJC_CREATE_IMPL(CCBRUndefinedPickleStepDefinitionMatch, initWithGHKPickleStep_, step)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CCBRUndefinedPickleStepDefinitionMatch)
