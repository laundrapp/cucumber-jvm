//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/runtime/snippets/Snippet.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRuntimeSnippetsSnippet")
#ifdef RESTRICT_CucumberRuntimeSnippetsSnippet
#define INCLUDE_ALL_CucumberRuntimeSnippetsSnippet 0
#else
#define INCLUDE_ALL_CucumberRuntimeSnippetsSnippet 1
#endif
#undef RESTRICT_CucumberRuntimeSnippetsSnippet

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberRuntimeSnippetsSnippet_) && (INCLUDE_ALL_CucumberRuntimeSnippetsSnippet || defined(INCLUDE_CucumberRuntimeSnippetsSnippet))
#define CucumberRuntimeSnippetsSnippet_

@protocol JavaUtilList;

@protocol CucumberRuntimeSnippetsSnippet < JavaObject >

/*!
 @return a <code>java.text.MessageFormat</code> template used to generate a snippet. The template can access the following variables:
          <p>
          <ul>
          <li>{0} : Step Keyword</li>
          <li>{1} : Value of <code>escapePattern(String)</code></li>
          <li>{2} : Function name</li>
          <li>{3} : Value of <code>arguments(java.util.List)</code></li>
          <li>{4} : Regexp hint comment</li>
          <li>{5} : value of <code>tableHint()</code> if the step has a table</li>
          </ul>
 */
- (NSString *)template__;

/*!
 @return a hint about alternative ways to declare a table argument
 */
- (NSString *)tableHint;

/*!
 @param argumentTypes the types the snippet's argument should accept
 @return a string representation of the arguments
 */
- (NSString *)argumentsWithJavaUtilList:(id<JavaUtilList>)argumentTypes;

/*!
 @brief Langauges that don't support named capture groups should return null.
 @return the start of a named capture group
 */
- (NSString *)namedGroupStart;

/*!
 @brief Langauges that don't support named capture groups should return null.
 @return the end of a named capture group
 */
- (NSString *)namedGroupEnd;

/*!
 @param pattern the computed pattern that will match an undefined step
 @return an escaped representation of the pattern, if escaping is necessary.
 */
- (NSString *)escapePatternWithNSString:(NSString *)pattern;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeSnippetsSnippet)

J2OBJC_TYPE_LITERAL_HEADER(CucumberRuntimeSnippetsSnippet)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRuntimeSnippetsSnippet")
