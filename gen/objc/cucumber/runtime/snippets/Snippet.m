//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/runtime/snippets/Snippet.java
//

#include "J2ObjC_source.h"
#include "cucumber/runtime/snippets/Snippet.h"

@interface CucumberRuntimeSnippetsSnippet : NSObject

@end

@implementation CucumberRuntimeSnippetsSnippet

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, 0, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 1, 2, -1, 3, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(template__);
  methods[1].selector = @selector(tableHint);
  methods[2].selector = @selector(argumentsWithJavaUtilList:);
  methods[3].selector = @selector(namedGroupStart);
  methods[4].selector = @selector(namedGroupEnd);
  methods[5].selector = @selector(escapePatternWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "template", "arguments", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Class<*>;>;)Ljava/lang/String;", "escapePattern", "LNSString;" };
  static const J2ObjcClassInfo _CucumberRuntimeSnippetsSnippet = { "Snippet", "cucumber.runtime.snippets", ptrTable, methods, NULL, 7, 0x609, 6, 0, -1, -1, -1, -1, -1 };
  return &_CucumberRuntimeSnippetsSnippet;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(CucumberRuntimeSnippetsSnippet)
