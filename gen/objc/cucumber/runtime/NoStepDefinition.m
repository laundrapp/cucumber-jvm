//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/NoStepDefinition.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "cucumber/runtime/NoStepDefinition.h"
#include "gherkin/pickles/PickleStep.h"
#include "java/lang/Integer.h"
#include "java/lang/StackTraceElement.h"
#include "java/util/List.h"

@implementation CCBRNoStepDefinition

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CCBRNoStepDefinition_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilList>)matchedArgumentsWithGHKPickleStep:(GHKPickleStep *)step {
  return nil;
}

- (NSString *)getLocationWithBoolean:(jboolean)detail {
  return nil;
}

- (JavaLangInteger *)getParameterCount {
  return JavaLangInteger_valueOfWithInt_(0);
}

- (void)executeWithNSString:(NSString *)language
          withNSObjectArray:(IOSObjectArray *)args {
}

- (jboolean)isDefinedAtWithJavaLangStackTraceElement:(JavaLangStackTraceElement *)stackTraceElement {
  return false;
}

- (NSString *)getPattern {
  return nil;
}

- (jboolean)isScenarioScoped {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(matchedArgumentsWithGHKPickleStep:);
  methods[2].selector = @selector(getLocationWithBoolean:);
  methods[3].selector = @selector(getParameterCount);
  methods[4].selector = @selector(executeWithNSString:withNSObjectArray:);
  methods[5].selector = @selector(isDefinedAtWithJavaLangStackTraceElement:);
  methods[6].selector = @selector(getPattern);
  methods[7].selector = @selector(isScenarioScoped);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "matchedArguments", "LGHKPickleStep;", "(Lgherkin/pickles/PickleStep;)Ljava/util/List<Lio/cucumber/stepexpression/Argument;>;", "getLocation", "Z", "execute", "LNSString;[LNSObject;", "isDefinedAt", "LJavaLangStackTraceElement;" };
  static const J2ObjcClassInfo _CCBRNoStepDefinition = { "NoStepDefinition", "cucumber.runtime", ptrTable, methods, NULL, 7, 0x0, 8, 0, -1, -1, -1, -1, -1 };
  return &_CCBRNoStepDefinition;
}

@end

void CCBRNoStepDefinition_init(CCBRNoStepDefinition *self) {
  NSObject_init(self);
}

CCBRNoStepDefinition *new_CCBRNoStepDefinition_init() {
  J2OBJC_NEW_IMPL(CCBRNoStepDefinition, init)
}

CCBRNoStepDefinition *create_CCBRNoStepDefinition_init() {
  J2OBJC_CREATE_IMPL(CCBRNoStepDefinition, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CCBRNoStepDefinition)
