//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/Argument.java
//

#include "J2ObjC_source.h"
#include "cucumber/runtime/Argument.h"
#include "java/lang/Integer.h"

@interface CucumberRuntimeArgument () {
 @public
  JavaLangInteger *offset_;
  NSString *val_;
}

@end

J2OBJC_FIELD_SETTER(CucumberRuntimeArgument, offset_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(CucumberRuntimeArgument, val_, NSString *)

inline jlong CucumberRuntimeArgument_get_serialVersionUID(void);
#define CucumberRuntimeArgument_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(CucumberRuntimeArgument, serialVersionUID, jlong)

@implementation CucumberRuntimeArgument

- (instancetype __nonnull)initWithJavaLangInteger:(JavaLangInteger *)offset
                                     withNSString:(NSString *)val {
  CucumberRuntimeArgument_initWithJavaLangInteger_withNSString_(self, offset, val);
  return self;
}

- (NSString *)getVal {
  return val_;
}

- (JavaLangInteger *)getOffset {
  return offset_;
}

- (NSString *)description {
  return [self getVal];
}

- (void)dealloc {
  RELEASE_(offset_);
  RELEASE_(val_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaLangInteger:withNSString:);
  methods[1].selector = @selector(getVal);
  methods[2].selector = @selector(getOffset);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = CucumberRuntimeArgument_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "offset_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "val_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangInteger;LNSString;", "toString" };
  static const J2ObjcClassInfo _CucumberRuntimeArgument = { "Argument", "cucumber.runtime", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, -1, -1, -1, -1 };
  return &_CucumberRuntimeArgument;
}

@end

void CucumberRuntimeArgument_initWithJavaLangInteger_withNSString_(CucumberRuntimeArgument *self, JavaLangInteger *offset, NSString *val) {
  NSObject_init(self);
  JreStrongAssign(&self->offset_, offset);
  JreStrongAssign(&self->val_, val);
}

CucumberRuntimeArgument *new_CucumberRuntimeArgument_initWithJavaLangInteger_withNSString_(JavaLangInteger *offset, NSString *val) {
  J2OBJC_NEW_IMPL(CucumberRuntimeArgument, initWithJavaLangInteger_withNSString_, offset, val)
}

CucumberRuntimeArgument *create_CucumberRuntimeArgument_initWithJavaLangInteger_withNSString_(JavaLangInteger *offset, NSString *val) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeArgument, initWithJavaLangInteger_withNSString_, offset, val)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeArgument)
