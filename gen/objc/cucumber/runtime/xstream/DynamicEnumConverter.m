//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/xstream/DynamicEnumConverter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/SingleValueConverterWrapper.h"
#include "cucumber/runtime/xstream/ConverterWithEnumFormat.h"
#include "cucumber/runtime/xstream/DynamicClassBasedSingleValueConverter.h"
#include "cucumber/runtime/xstream/DynamicEnumConverter.h"
#include "cucumber/runtime/xstream/SingleValueConverterWrapperExt.h"
#include "java/util/Locale.h"

@interface CCBRDynamicEnumConverter () {
 @public
  JavaUtilLocale *locale_;
}

@end

J2OBJC_FIELD_SETTER(CCBRDynamicEnumConverter, locale_, JavaUtilLocale *)

@implementation CCBRDynamicEnumConverter

- (instancetype __nonnull)initWithJavaUtilLocale:(JavaUtilLocale *)locale {
  CCBRDynamicEnumConverter_initWithJavaUtilLocale_(self, locale);
  return self;
}

- (CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper *)converterForClassWithIOSClass:(IOSClass *)type {
  return create_CCBRSingleValueConverterWrapperExt_initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_(create_CCBRConverterWithEnumFormat_initWithJavaUtilLocale_withIOSClass_(locale_, type));
}

- (jboolean)canConvertWithIOSClass:(IOSClass *)type {
  return [((IOSClass *) nil_chk(type)) isEnum];
}

- (void)dealloc {
  RELEASE_(locale_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilLocale:);
  methods[1].selector = @selector(converterForClassWithIOSClass:);
  methods[2].selector = @selector(canConvertWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "locale_", "LJavaUtilLocale;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilLocale;", "converterForClass", "LIOSClass;", "canConvert" };
  static const J2ObjcClassInfo _CCBRDynamicEnumConverter = { "DynamicEnumConverter", "cucumber.runtime.xstream", ptrTable, methods, fields, 7, 0x0, 3, 1, -1, -1, -1, -1, -1 };
  return &_CCBRDynamicEnumConverter;
}

@end

void CCBRDynamicEnumConverter_initWithJavaUtilLocale_(CCBRDynamicEnumConverter *self, JavaUtilLocale *locale) {
  CCBRDynamicClassBasedSingleValueConverter_init(self);
  JreStrongAssign(&self->locale_, locale);
}

CCBRDynamicEnumConverter *new_CCBRDynamicEnumConverter_initWithJavaUtilLocale_(JavaUtilLocale *locale) {
  J2OBJC_NEW_IMPL(CCBRDynamicEnumConverter, initWithJavaUtilLocale_, locale)
}

CCBRDynamicEnumConverter *create_CCBRDynamicEnumConverter_initWithJavaUtilLocale_(JavaUtilLocale *locale) {
  J2OBJC_CREATE_IMPL(CCBRDynamicEnumConverter, initWithJavaUtilLocale_, locale)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CCBRDynamicEnumConverter)
