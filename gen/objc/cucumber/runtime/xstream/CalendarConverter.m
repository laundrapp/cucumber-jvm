//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/runtime/xstream/CalendarConverter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "cucumber/runtime/xstream/CalendarConverter.h"
#include "cucumber/runtime/xstream/TimeConverter.h"
#include "java/text/Format.h"
#include "java/util/Calendar.h"
#include "java/util/Date.h"
#include "java/util/Locale.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CucumberRuntimeXstreamCalendarConverter

- (instancetype __nonnull)initWithJavaUtilLocale:(JavaUtilLocale *)locale {
  CucumberRuntimeXstreamCalendarConverter_initWithJavaUtilLocale_(self, locale);
  return self;
}

- (id)transformWithJavaTextFormat:(JavaTextFormat *)format
                     withNSString:(NSString *)argument {
  JavaUtilDate *date = (JavaUtilDate *) cast_chk([super transformWithJavaTextFormat:format withNSString:argument], [JavaUtilDate class]);
  JavaUtilCalendar *cal = JavaUtilCalendar_getInstanceWithJavaUtilLocale_([self getLocale]);
  [((JavaUtilCalendar *) nil_chk(cal)) setTimeWithJavaUtilDate:date];
  return cal;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilLocale:);
  methods[1].selector = @selector(transformWithJavaTextFormat:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaUtilLocale;", "transform", "LJavaTextFormat;LNSString;", "Lcucumber/runtime/xstream/TimeConverter<Ljava/util/Calendar;>;" };
  static const J2ObjcClassInfo _CucumberRuntimeXstreamCalendarConverter = { "CalendarConverter", "cucumber.runtime.xstream", ptrTable, methods, NULL, 7, 0x0, 2, 0, -1, -1, -1, 3, -1 };
  return &_CucumberRuntimeXstreamCalendarConverter;
}

@end

void CucumberRuntimeXstreamCalendarConverter_initWithJavaUtilLocale_(CucumberRuntimeXstreamCalendarConverter *self, JavaUtilLocale *locale) {
  CucumberRuntimeXstreamTimeConverter_initWithJavaUtilLocale_withIOSClassArray_(self, locale, [IOSObjectArray arrayWithObjects:(id[]){ JavaUtilCalendar_class_() } count:1 type:IOSClass_class_()]);
}

CucumberRuntimeXstreamCalendarConverter *new_CucumberRuntimeXstreamCalendarConverter_initWithJavaUtilLocale_(JavaUtilLocale *locale) {
  J2OBJC_NEW_IMPL(CucumberRuntimeXstreamCalendarConverter, initWithJavaUtilLocale_, locale)
}

CucumberRuntimeXstreamCalendarConverter *create_CucumberRuntimeXstreamCalendarConverter_initWithJavaUtilLocale_(JavaUtilLocale *locale) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeXstreamCalendarConverter, initWithJavaUtilLocale_, locale)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeXstreamCalendarConverter)
