//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/runtime/xstream/ListOfSingleValueWriter.java
//

#include "J2ObjC_source.h"
#include "cucumber/runtime/CucumberException.h"
#include "cucumber/runtime/xstream/CellWriter.h"
#include "cucumber/runtime/xstream/ListOfSingleValueWriter.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface CucumberRuntimeXstreamListOfSingleValueWriter () {
 @public
  jint nodeDepth_;
  id<JavaUtilList> values_;
}

@end

J2OBJC_FIELD_SETTER(CucumberRuntimeXstreamListOfSingleValueWriter, values_, id<JavaUtilList>)

@implementation CucumberRuntimeXstreamListOfSingleValueWriter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CucumberRuntimeXstreamListOfSingleValueWriter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilList>)getHeader {
  return nil;
}

- (id<JavaUtilList>)getValues {
  return values_;
}

- (void)startNodeWithNSString:(NSString *)name {
  if (nodeDepth_ > 1) {
    @throw create_CucumberRuntimeCucumberException_initWithNSString_(@"Can only convert List<List<T>> to a table when T is a single value (primitive, string, date etc).");
  }
  nodeDepth_++;
}

- (void)addAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)value {
}

- (void)setValueWithNSString:(NSString *)value {
  [((id<JavaUtilList>) nil_chk(values_)) addWithId:value == nil ? @"" : value];
}

- (void)endNode {
  nodeDepth_--;
}

- (void)flush {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)close {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)dealloc {
  RELEASE_(values_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getHeader);
  methods[2].selector = @selector(getValues);
  methods[3].selector = @selector(startNodeWithNSString:);
  methods[4].selector = @selector(addAttributeWithNSString:withNSString:);
  methods[5].selector = @selector(setValueWithNSString:);
  methods[6].selector = @selector(endNode);
  methods[7].selector = @selector(flush);
  methods[8].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "nodeDepth_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "values_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/List<Ljava/lang/String;>;", "startNode", "LNSString;", "addAttribute", "LNSString;LNSString;", "setValue", "Ljava/util/List<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _CucumberRuntimeXstreamListOfSingleValueWriter = { "ListOfSingleValueWriter", "cucumber.runtime.xstream", ptrTable, methods, fields, 7, 0x1, 9, 2, -1, -1, -1, -1, -1 };
  return &_CucumberRuntimeXstreamListOfSingleValueWriter;
}

@end

void CucumberRuntimeXstreamListOfSingleValueWriter_init(CucumberRuntimeXstreamListOfSingleValueWriter *self) {
  CucumberRuntimeXstreamCellWriter_init(self);
  JreStrongAssignAndConsume(&self->values_, new_JavaUtilArrayList_init());
}

CucumberRuntimeXstreamListOfSingleValueWriter *new_CucumberRuntimeXstreamListOfSingleValueWriter_init() {
  J2OBJC_NEW_IMPL(CucumberRuntimeXstreamListOfSingleValueWriter, init)
}

CucumberRuntimeXstreamListOfSingleValueWriter *create_CucumberRuntimeXstreamListOfSingleValueWriter_init() {
  J2OBJC_CREATE_IMPL(CucumberRuntimeXstreamListOfSingleValueWriter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeXstreamListOfSingleValueWriter)
