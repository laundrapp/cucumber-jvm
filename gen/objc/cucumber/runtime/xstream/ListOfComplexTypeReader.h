//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/xstream/ListOfComplexTypeReader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRuntimeXstreamListOfComplexTypeReader")
#ifdef RESTRICT_CucumberRuntimeXstreamListOfComplexTypeReader
#define INCLUDE_ALL_CucumberRuntimeXstreamListOfComplexTypeReader 0
#else
#define INCLUDE_ALL_CucumberRuntimeXstreamListOfComplexTypeReader 1
#endif
#undef RESTRICT_CucumberRuntimeXstreamListOfComplexTypeReader

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberRuntimeXstreamListOfComplexTypeReader_) && (INCLUDE_ALL_CucumberRuntimeXstreamListOfComplexTypeReader || defined(INCLUDE_CucumberRuntimeXstreamListOfComplexTypeReader))
#define CucumberRuntimeXstreamListOfComplexTypeReader_

#define RESTRICT_CucumberDepsComThoughtworksXstreamIoAbstractReader 1
#define INCLUDE_CucumberDepsComThoughtworksXstreamIoAbstractReader 1
#include "cucumber/deps/com/thoughtworks/xstream/io/AbstractReader.h"

@class IOSClass;
@protocol CucumberDepsComThoughtworksXstreamConvertersErrorWriter;
@protocol CucumberDepsComThoughtworksXstreamIoNamingNameCoder;
@protocol JavaUtilIterator;
@protocol JavaUtilList;

/*!
 @brief Generates XStream XML data from table rows that will create a List of objects.Example:
  @code

   <list>
          <cucumber.runtime.table.TableConverterTest_-UserPojo>
                  <name>Sid Vicious</name>
                  <birthDate>1957-05-10 00:00:00.0 UTC</birthDate>
                  <credits>1000</credits>
          </cucumber.runtime.table.TableConverterTest_-UserPojo>
          <cucumber.runtime.table.TableConverterTest_-UserPojo>
                  <name>Frank Zappa</name>
                  <birthDate>1940-12-21 00:00:00.0 UTC</birthDate>
                  <credits>3000</credits>
          </cucumber.runtime.table.TableConverterTest_-UserPojo>
   </list>
   
@endcode
 */
@interface CucumberRuntimeXstreamListOfComplexTypeReader : CucumberDepsComThoughtworksXstreamIoAbstractReader

#pragma mark Public

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)itemType
                          withJavaUtilList:(id<JavaUtilList>)attributeNames
                          withJavaUtilList:(id<JavaUtilList>)items;

- (void)appendErrorsWithCucumberDepsComThoughtworksXstreamConvertersErrorWriter:(id<CucumberDepsComThoughtworksXstreamConvertersErrorWriter>)errorWriter;

- (void)close;

- (NSString *)getAttributeWithInt:(jint)index;

- (NSString *)getAttributeWithNSString:(NSString *)name;

- (jint)getAttributeCount;

- (NSString *)getAttributeNameWithInt:(jint)index;

- (id<JavaUtilIterator>)getAttributeNames;

- (NSString *)getNodeName;

- (NSString *)getValue;

- (jboolean)hasMoreChildren;

- (void)moveDown;

- (void)moveUp;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamIoNamingNameCoder:(id<CucumberDepsComThoughtworksXstreamIoNamingNameCoder>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeXstreamListOfComplexTypeReader)

FOUNDATION_EXPORT void CucumberRuntimeXstreamListOfComplexTypeReader_initWithIOSClass_withJavaUtilList_withJavaUtilList_(CucumberRuntimeXstreamListOfComplexTypeReader *self, IOSClass *itemType, id<JavaUtilList> attributeNames, id<JavaUtilList> items);

FOUNDATION_EXPORT CucumberRuntimeXstreamListOfComplexTypeReader *new_CucumberRuntimeXstreamListOfComplexTypeReader_initWithIOSClass_withJavaUtilList_withJavaUtilList_(IOSClass *itemType, id<JavaUtilList> attributeNames, id<JavaUtilList> items) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberRuntimeXstreamListOfComplexTypeReader *create_CucumberRuntimeXstreamListOfComplexTypeReader_initWithIOSClass_withJavaUtilList_withJavaUtilList_(IOSClass *itemType, id<JavaUtilList> attributeNames, id<JavaUtilList> items);

J2OBJC_TYPE_LITERAL_HEADER(CucumberRuntimeXstreamListOfComplexTypeReader)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRuntimeXstreamListOfComplexTypeReader")
