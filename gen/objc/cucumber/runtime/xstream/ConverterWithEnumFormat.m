//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/xstream/ConverterWithEnumFormat.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/ConversionException.h"
#include "cucumber/runtime/xstream/ConverterWithEnumFormat.h"
#include "cucumber/runtime/xstream/ConverterWithFormat.h"
#include "java/lang/Enum.h"
#include "java/lang/StringBuffer.h"
#include "java/text/FieldPosition.h"
#include "java/text/Format.h"
#include "java/text/ParsePosition.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/Locale.h"

@interface CucumberRuntimeXstreamConverterWithEnumFormat () {
 @public
  id<JavaUtilList> formats_;
  JavaUtilLocale *locale_ConverterWithEnumFormat_;
  IOSClass *typeClass_;
}

@end

J2OBJC_FIELD_SETTER(CucumberRuntimeXstreamConverterWithEnumFormat, formats_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(CucumberRuntimeXstreamConverterWithEnumFormat, locale_ConverterWithEnumFormat_, JavaUtilLocale *)
J2OBJC_FIELD_SETTER(CucumberRuntimeXstreamConverterWithEnumFormat, typeClass_, IOSClass *)

@interface CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat : JavaTextFormat {
 @public
  CucumberRuntimeXstreamConverterWithEnumFormat *this$0_;
}

- (instancetype __nonnull)initWithCucumberRuntimeXstreamConverterWithEnumFormat:(CucumberRuntimeXstreamConverterWithEnumFormat *)outer$;

- (JavaLangStringBuffer *)formatWithId:(id)obj
              withJavaLangStringBuffer:(JavaLangStringBuffer *)toAppendTo
             withJavaTextFieldPosition:(JavaTextFieldPosition *)pos;

- (id)parseObjectWithNSString:(NSString *)source
    withJavaTextParsePosition:(JavaTextParsePosition *)pos;

- (NSString *)transformSourceWithNSString:(NSString *)source;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat)

__attribute__((unused)) static void CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat *self, CucumberRuntimeXstreamConverterWithEnumFormat *outer$);

J2OBJC_TYPE_LITERAL_HEADER(CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat)

@interface CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat : CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat

- (instancetype __nonnull)initWithCucumberRuntimeXstreamConverterWithEnumFormat:(CucumberRuntimeXstreamConverterWithEnumFormat *)outer$;

- (NSString *)transformSourceWithNSString:(NSString *)source;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat)

__attribute__((unused)) static void CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat *self, CucumberRuntimeXstreamConverterWithEnumFormat *outer$);

__attribute__((unused)) static CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat *new_CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat *create_CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat *outer$);

J2OBJC_TYPE_LITERAL_HEADER(CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat)

@interface CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat : CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat {
 @public
  CucumberRuntimeXstreamConverterWithEnumFormat *this$1_;
}

- (instancetype __nonnull)initWithCucumberRuntimeXstreamConverterWithEnumFormat:(CucumberRuntimeXstreamConverterWithEnumFormat *)outer$;

- (NSString *)transformSourceWithNSString:(NSString *)source;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat)

__attribute__((unused)) static void CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat *self, CucumberRuntimeXstreamConverterWithEnumFormat *outer$);

__attribute__((unused)) static CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat *new_CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat *create_CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat *outer$);

J2OBJC_TYPE_LITERAL_HEADER(CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat)

@interface CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat : CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat {
 @public
  CucumberRuntimeXstreamConverterWithEnumFormat *this$1_;
}

- (instancetype __nonnull)initWithCucumberRuntimeXstreamConverterWithEnumFormat:(CucumberRuntimeXstreamConverterWithEnumFormat *)outer$;

- (NSString *)transformSourceWithNSString:(NSString *)source;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat)

__attribute__((unused)) static void CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat *self, CucumberRuntimeXstreamConverterWithEnumFormat *outer$);

__attribute__((unused)) static CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat *new_CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat *create_CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat *outer$);

J2OBJC_TYPE_LITERAL_HEADER(CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat)

@interface CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat : CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat {
 @public
  CucumberRuntimeXstreamConverterWithEnumFormat *this$1_;
}

- (instancetype __nonnull)initWithCucumberRuntimeXstreamConverterWithEnumFormat:(CucumberRuntimeXstreamConverterWithEnumFormat *)outer$;

- (NSString *)transformSourceWithNSString:(NSString *)source;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat)

__attribute__((unused)) static void CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat *self, CucumberRuntimeXstreamConverterWithEnumFormat *outer$);

__attribute__((unused)) static CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat *new_CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat *create_CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat *outer$);

J2OBJC_TYPE_LITERAL_HEADER(CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat)

@implementation CucumberRuntimeXstreamConverterWithEnumFormat

- (instancetype __nonnull)initWithJavaUtilLocale:(JavaUtilLocale *)locale
                                    withIOSClass:(IOSClass *)enumClass {
  CucumberRuntimeXstreamConverterWithEnumFormat_initWithJavaUtilLocale_withIOSClass_(self, locale, enumClass);
  return self;
}

- (JavaLangEnum *)transformWithNSString:(NSString *)string {
  @try {
    return [super transformWithNSString:string];
  }
  @catch (CucumberDepsComThoughtworksXstreamConvertersConversionException *e) {
    NSString *allowed = [((id<JavaUtilList>) nil_chk(JavaUtilArrays_asListWithNSObjectArray_([((IOSClass *) nil_chk(typeClass_)) getEnumConstants]))) description];
    @throw create_CucumberDepsComThoughtworksXstreamConvertersConversionException_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(@"Couldn't convert %s to %s. Legal values are %s", [IOSObjectArray arrayWithObjects:(id[]){ string, [typeClass_ getName], allowed } count:3 type:NSObject_class_()]));
  }
}

- (id<JavaUtilList>)getFormats {
  return formats_;
}

- (void)dealloc {
  RELEASE_(formats_);
  RELEASE_(locale_ConverterWithEnumFormat_);
  RELEASE_(typeClass_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaLangEnum;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilLocale:withIOSClass:);
  methods[1].selector = @selector(transformWithNSString:);
  methods[2].selector = @selector(getFormats);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "formats_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
    { "locale_ConverterWithEnumFormat_", "LJavaUtilLocale;", .constantValue.asLong = 0, 0x12, 7, -1, -1, -1 },
    { "typeClass_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilLocale;LIOSClass;", "(Ljava/util/Locale;Ljava/lang/Class<+Ljava/lang/Enum;>;)V", "transform", "LNSString;", "(Ljava/lang/String;)TT;", "()Ljava/util/List<Ljava/text/Format;>;", "Ljava/util/List<Ljava/text/Format;>;", "locale", "Ljava/lang/Class<+Ljava/lang/Enum;>;", "LCucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat;LCucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat;LCucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat;LCucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat;LCucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat;", "<T:Ljava/lang/Enum;>Lcucumber/runtime/xstream/ConverterWithFormat<TT;>;" };
  static const J2ObjcClassInfo _CucumberRuntimeXstreamConverterWithEnumFormat = { "ConverterWithEnumFormat", "cucumber.runtime.xstream", ptrTable, methods, fields, 7, 0x0, 3, 3, -1, 9, -1, 10, -1 };
  return &_CucumberRuntimeXstreamConverterWithEnumFormat;
}

@end

void CucumberRuntimeXstreamConverterWithEnumFormat_initWithJavaUtilLocale_withIOSClass_(CucumberRuntimeXstreamConverterWithEnumFormat *self, JavaUtilLocale *locale, IOSClass *enumClass) {
  CucumberRuntimeXstreamConverterWithFormat_initWithIOSClassArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ enumClass } count:1 type:IOSClass_class_()]);
  JreStrongAssignAndConsume(&self->formats_, new_JavaUtilArrayList_init());
  JreStrongAssign(&self->locale_ConverterWithEnumFormat_, locale);
  JreStrongAssign(&self->typeClass_, enumClass);
  [self->formats_ addWithId:create_CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(self)];
  [self->formats_ addWithId:create_CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(self)];
  [self->formats_ addWithId:create_CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(self)];
  [self->formats_ addWithId:create_CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(self)];
}

CucumberRuntimeXstreamConverterWithEnumFormat *new_CucumberRuntimeXstreamConverterWithEnumFormat_initWithJavaUtilLocale_withIOSClass_(JavaUtilLocale *locale, IOSClass *enumClass) {
  J2OBJC_NEW_IMPL(CucumberRuntimeXstreamConverterWithEnumFormat, initWithJavaUtilLocale_withIOSClass_, locale, enumClass)
}

CucumberRuntimeXstreamConverterWithEnumFormat *create_CucumberRuntimeXstreamConverterWithEnumFormat_initWithJavaUtilLocale_withIOSClass_(JavaUtilLocale *locale, IOSClass *enumClass) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeXstreamConverterWithEnumFormat, initWithJavaUtilLocale_withIOSClass_, locale, enumClass)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeXstreamConverterWithEnumFormat)

@implementation CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat

- (instancetype __nonnull)initWithCucumberRuntimeXstreamConverterWithEnumFormat:(CucumberRuntimeXstreamConverterWithEnumFormat *)outer$ {
  CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(self, outer$);
  return self;
}

- (JavaLangStringBuffer *)formatWithId:(id)obj
              withJavaLangStringBuffer:(JavaLangStringBuffer *)toAppendTo
             withJavaTextFieldPosition:(JavaTextFieldPosition *)pos {
  return [((JavaLangStringBuffer *) nil_chk(toAppendTo)) appendWithNSString:NSString_java_valueOf_(obj)];
}

- (id)parseObjectWithNSString:(NSString *)source
    withJavaTextParsePosition:(JavaTextParsePosition *)pos {
  return source == nil ? nil : JavaLangEnum_valueOfWithIOSClass_withNSString_(this$0_->typeClass_, [self transformSourceWithNSString:source]);
}

- (NSString *)transformSourceWithNSString:(NSString *)source {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuffer;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x404, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberRuntimeXstreamConverterWithEnumFormat:);
  methods[1].selector = @selector(formatWithId:withJavaLangStringBuffer:withJavaTextFieldPosition:);
  methods[2].selector = @selector(parseObjectWithNSString:withJavaTextParsePosition:);
  methods[3].selector = @selector(transformSourceWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberRuntimeXstreamConverterWithEnumFormat;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "format", "LNSObject;LJavaLangStringBuffer;LJavaTextFieldPosition;", "parseObject", "LNSString;LJavaTextParsePosition;", "transformSource", "LNSString;", "Lcucumber/runtime/xstream/ConverterWithEnumFormat<TT;>;", "LCucumberRuntimeXstreamConverterWithEnumFormat;" };
  static const J2ObjcClassInfo _CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat = { "AbstractEnumFormat", "cucumber.runtime.xstream", ptrTable, methods, fields, 7, 0x402, 4, 1, 7, -1, -1, -1, -1 };
  return &_CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat;
}

@end

void CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat *self, CucumberRuntimeXstreamConverterWithEnumFormat *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  JavaTextFormat_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat)

@implementation CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat

- (instancetype __nonnull)initWithCucumberRuntimeXstreamConverterWithEnumFormat:(CucumberRuntimeXstreamConverterWithEnumFormat *)outer$ {
  CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(self, outer$);
  return self;
}

- (NSString *)transformSourceWithNSString:(NSString *)source {
  return source;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberRuntimeXstreamConverterWithEnumFormat:);
  methods[1].selector = @selector(transformSourceWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "transformSource", "LNSString;", "LCucumberRuntimeXstreamConverterWithEnumFormat;" };
  static const J2ObjcClassInfo _CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat = { "OriginalFormat", "cucumber.runtime.xstream", ptrTable, methods, NULL, 7, 0x2, 2, 0, 2, -1, -1, -1, -1 };
  return &_CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat;
}

@end

void CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat *self, CucumberRuntimeXstreamConverterWithEnumFormat *outer$) {
  CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(self, outer$);
}

CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat *new_CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat *outer$) {
  J2OBJC_NEW_IMPL(CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat, initWithCucumberRuntimeXstreamConverterWithEnumFormat_, outer$)
}

CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat *create_CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat *outer$) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat, initWithCucumberRuntimeXstreamConverterWithEnumFormat_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeXstreamConverterWithEnumFormat_OriginalFormat)

@implementation CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat

- (instancetype __nonnull)initWithCucumberRuntimeXstreamConverterWithEnumFormat:(CucumberRuntimeXstreamConverterWithEnumFormat *)outer$ {
  CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(self, outer$);
  return self;
}

- (NSString *)transformSourceWithNSString:(NSString *)source {
  return [((NSString *) nil_chk(source)) java_lowercaseStringWithJRELocale:this$1_->locale_ConverterWithEnumFormat_];
}

- (void)dealloc {
  RELEASE_(this$1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberRuntimeXstreamConverterWithEnumFormat:);
  methods[1].selector = @selector(transformSourceWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", "LCucumberRuntimeXstreamConverterWithEnumFormat;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "transformSource", "LNSString;", "Lcucumber/runtime/xstream/ConverterWithEnumFormat<TT;>;", "LCucumberRuntimeXstreamConverterWithEnumFormat;" };
  static const J2ObjcClassInfo _CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat = { "LowercaseFormat", "cucumber.runtime.xstream", ptrTable, methods, fields, 7, 0x2, 2, 1, 3, -1, -1, -1, -1 };
  return &_CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat;
}

@end

void CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat *self, CucumberRuntimeXstreamConverterWithEnumFormat *outer$) {
  JreStrongAssign(&self->this$1_, outer$);
  CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(self, outer$);
}

CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat *new_CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat *outer$) {
  J2OBJC_NEW_IMPL(CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat, initWithCucumberRuntimeXstreamConverterWithEnumFormat_, outer$)
}

CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat *create_CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat *outer$) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat, initWithCucumberRuntimeXstreamConverterWithEnumFormat_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeXstreamConverterWithEnumFormat_LowercaseFormat)

@implementation CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat

- (instancetype __nonnull)initWithCucumberRuntimeXstreamConverterWithEnumFormat:(CucumberRuntimeXstreamConverterWithEnumFormat *)outer$ {
  CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(self, outer$);
  return self;
}

- (NSString *)transformSourceWithNSString:(NSString *)source {
  return [((NSString *) nil_chk(source)) java_uppercaseStringWithJRELocale:this$1_->locale_ConverterWithEnumFormat_];
}

- (void)dealloc {
  RELEASE_(this$1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberRuntimeXstreamConverterWithEnumFormat:);
  methods[1].selector = @selector(transformSourceWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", "LCucumberRuntimeXstreamConverterWithEnumFormat;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "transformSource", "LNSString;", "Lcucumber/runtime/xstream/ConverterWithEnumFormat<TT;>;", "LCucumberRuntimeXstreamConverterWithEnumFormat;" };
  static const J2ObjcClassInfo _CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat = { "UppercaseFormat", "cucumber.runtime.xstream", ptrTable, methods, fields, 7, 0x2, 2, 1, 3, -1, -1, -1, -1 };
  return &_CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat;
}

@end

void CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat *self, CucumberRuntimeXstreamConverterWithEnumFormat *outer$) {
  JreStrongAssign(&self->this$1_, outer$);
  CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(self, outer$);
}

CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat *new_CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat *outer$) {
  J2OBJC_NEW_IMPL(CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat, initWithCucumberRuntimeXstreamConverterWithEnumFormat_, outer$)
}

CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat *create_CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat *outer$) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat, initWithCucumberRuntimeXstreamConverterWithEnumFormat_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeXstreamConverterWithEnumFormat_UppercaseFormat)

@implementation CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat

- (instancetype __nonnull)initWithCucumberRuntimeXstreamConverterWithEnumFormat:(CucumberRuntimeXstreamConverterWithEnumFormat *)outer$ {
  CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(self, outer$);
  return self;
}

- (NSString *)transformSourceWithNSString:(NSString *)source {
  NSString *firstLetter = [((NSString *) nil_chk(source)) java_substring:0 endIndex:1];
  NSString *restOfTheString = [source java_substring:1 endIndex:[source java_length]];
  return JreStrcat("$$", [((NSString *) nil_chk(firstLetter)) java_uppercaseStringWithJRELocale:this$1_->locale_ConverterWithEnumFormat_], restOfTheString);
}

- (void)dealloc {
  RELEASE_(this$1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberRuntimeXstreamConverterWithEnumFormat:);
  methods[1].selector = @selector(transformSourceWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", "LCucumberRuntimeXstreamConverterWithEnumFormat;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "transformSource", "LNSString;", "Lcucumber/runtime/xstream/ConverterWithEnumFormat<TT;>;", "LCucumberRuntimeXstreamConverterWithEnumFormat;" };
  static const J2ObjcClassInfo _CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat = { "CapitalizeFormat", "cucumber.runtime.xstream", ptrTable, methods, fields, 7, 0x2, 2, 1, 3, -1, -1, -1, -1 };
  return &_CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat;
}

@end

void CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat *self, CucumberRuntimeXstreamConverterWithEnumFormat *outer$) {
  JreStrongAssign(&self->this$1_, outer$);
  CucumberRuntimeXstreamConverterWithEnumFormat_AbstractEnumFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(self, outer$);
}

CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat *new_CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat *outer$) {
  J2OBJC_NEW_IMPL(CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat, initWithCucumberRuntimeXstreamConverterWithEnumFormat_, outer$)
}

CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat *create_CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat_initWithCucumberRuntimeXstreamConverterWithEnumFormat_(CucumberRuntimeXstreamConverterWithEnumFormat *outer$) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat, initWithCucumberRuntimeXstreamConverterWithEnumFormat_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeXstreamConverterWithEnumFormat_CapitalizeFormat)
