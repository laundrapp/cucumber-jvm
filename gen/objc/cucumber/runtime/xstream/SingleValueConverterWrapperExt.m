//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/xstream/SingleValueConverterWrapperExt.java
//

#include "J2ObjC_source.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/SingleValueConverter.h"
#include "cucumber/deps/com/thoughtworks/xstream/converters/SingleValueConverterWrapper.h"
#include "cucumber/runtime/xstream/SingleValueConverterWrapperExt.h"

@interface CucumberRuntimeXstreamSingleValueConverterWrapperExt () {
 @public
  id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter> converter_;
}

@end

J2OBJC_FIELD_SETTER(CucumberRuntimeXstreamSingleValueConverterWrapperExt, converter_, id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)

@implementation CucumberRuntimeXstreamSingleValueConverterWrapperExt

- (instancetype __nonnull)initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:(id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)converter {
  CucumberRuntimeXstreamSingleValueConverterWrapperExt_initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_(self, converter);
  return self;
}

- (id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter>)getConverter {
  return converter_;
}

- (void)dealloc {
  RELEASE_(converter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter:);
  methods[1].selector = @selector(getConverter);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "converter_", "LCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter;" };
  static const J2ObjcClassInfo _CucumberRuntimeXstreamSingleValueConverterWrapperExt = { "SingleValueConverterWrapperExt", "cucumber.runtime.xstream", ptrTable, methods, fields, 7, 0x0, 2, 1, -1, -1, -1, -1, -1 };
  return &_CucumberRuntimeXstreamSingleValueConverterWrapperExt;
}

@end

void CucumberRuntimeXstreamSingleValueConverterWrapperExt_initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_(CucumberRuntimeXstreamSingleValueConverterWrapperExt *self, id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter> converter) {
  CucumberDepsComThoughtworksXstreamConvertersSingleValueConverterWrapper_initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_(self, converter);
  JreStrongAssign(&self->converter_, converter);
}

CucumberRuntimeXstreamSingleValueConverterWrapperExt *new_CucumberRuntimeXstreamSingleValueConverterWrapperExt_initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_(id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter> converter) {
  J2OBJC_NEW_IMPL(CucumberRuntimeXstreamSingleValueConverterWrapperExt, initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_, converter)
}

CucumberRuntimeXstreamSingleValueConverterWrapperExt *create_CucumberRuntimeXstreamSingleValueConverterWrapperExt_initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_(id<CucumberDepsComThoughtworksXstreamConvertersSingleValueConverter> converter) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeXstreamSingleValueConverterWrapperExt, initWithCucumberDepsComThoughtworksXstreamConvertersSingleValueConverter_, converter)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeXstreamSingleValueConverterWrapperExt)
