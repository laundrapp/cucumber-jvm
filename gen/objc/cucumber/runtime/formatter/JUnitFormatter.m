//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/formatter/JUnitFormatter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "cucumber/api/PickleStepTestStep.h"
#include "cucumber/api/Result.h"
#include "cucumber/api/TestCase.h"
#include "cucumber/api/TestStep.h"
#include "cucumber/api/event/EventHandler.h"
#include "cucumber/api/event/EventPublisher.h"
#include "cucumber/api/event/TestCaseFinished.h"
#include "cucumber/api/event/TestCaseStarted.h"
#include "cucumber/api/event/TestRunFinished.h"
#include "cucumber/api/event/TestSourceRead.h"
#include "cucumber/api/event/TestStepFinished.h"
#include "cucumber/runtime/CucumberException.h"
#include "cucumber/runtime/Utils.h"
#include "cucumber/runtime/formatter/JUnitFormatter.h"
#include "cucumber/runtime/formatter/TestSourcesModel.h"
#include "cucumber/runtime/io/URLOutputStream.h"
#include "cucumber/runtime/io/UTF8OutputStreamWriter.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/io/PrintWriter.h"
#include "java/io/StringWriter.h"
#include "java/io/Writer.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/net/URL.h"
#include "java/text/DecimalFormat.h"
#include "java/text/NumberFormat.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "javax/xml/parsers/DocumentBuilder.h"
#include "javax/xml/parsers/DocumentBuilderFactory.h"
#include "javax/xml/parsers/ParserConfigurationException.h"
#include "javax/xml/transform/OutputKeys.h"
#include "javax/xml/transform/Transformer.h"
#include "javax/xml/transform/TransformerException.h"
#include "javax/xml/transform/TransformerFactory.h"
#include "javax/xml/transform/dom/DOMSource.h"
#include "javax/xml/transform/stream/StreamResult.h"
#include "org/w3c/dom/CDATASection.h"
#include "org/w3c/dom/Document.h"
#include "org/w3c/dom/Element.h"
#include "org/w3c/dom/NamedNodeMap.h"
#include "org/w3c/dom/Node.h"
#include "org/w3c/dom/NodeList.h"

@class CCBRJUnitFormatter_TestCase;

@interface CCBRJUnitFormatter () {
 @public
  JavaIoWriter *out_;
  id<OrgW3cDomDocument> doc_;
  id<OrgW3cDomElement> rootElement_;
  CCBRJUnitFormatter_TestCase *testCase_;
  id<OrgW3cDomElement> root_;
  id<CucumberApiEventEventHandler> sourceReadHandler_;
  id<CucumberApiEventEventHandler> caseStartedHandler_;
  id<CucumberApiEventEventHandler> stepFinishedHandler_;
  id<CucumberApiEventEventHandler> caseFinishedHandler_;
  id<CucumberApiEventEventHandler> runFinishedHandler_;
}

- (void)handleTestSourceReadWithCucumberApiEventTestSourceRead:(CucumberApiEventTestSourceRead *)event;

- (void)handleTestCaseStartedWithCucumberApiEventTestCaseStarted:(CucumberApiEventTestCaseStarted *)event;

- (void)handleTestStepFinishedWithCucumberApiEventTestStepFinished:(CucumberApiEventTestStepFinished *)event;

- (void)handleTestCaseFinishedWithCucumberApiEventTestCaseFinished:(CucumberApiEventTestCaseFinished *)event;

- (void)finishReport;

- (NSString *)sumTimesWithOrgW3cDomNodeList:(id<OrgW3cDomNodeList>)testCaseNodes;

- (void)increaseAttributeValueWithOrgW3cDomElement:(id<OrgW3cDomElement>)element
                                      withNSString:(NSString *)attribute;

+ (void)closeQuietlyWithJavaIoCloseable:(id<JavaIoCloseable>)outArg;

@end

J2OBJC_FIELD_SETTER(CCBRJUnitFormatter, out_, JavaIoWriter *)
J2OBJC_FIELD_SETTER(CCBRJUnitFormatter, doc_, id<OrgW3cDomDocument>)
J2OBJC_FIELD_SETTER(CCBRJUnitFormatter, rootElement_, id<OrgW3cDomElement>)
J2OBJC_FIELD_SETTER(CCBRJUnitFormatter, testCase_, CCBRJUnitFormatter_TestCase *)
J2OBJC_FIELD_SETTER(CCBRJUnitFormatter, root_, id<OrgW3cDomElement>)
J2OBJC_FIELD_SETTER(CCBRJUnitFormatter, sourceReadHandler_, id<CucumberApiEventEventHandler>)
J2OBJC_FIELD_SETTER(CCBRJUnitFormatter, caseStartedHandler_, id<CucumberApiEventEventHandler>)
J2OBJC_FIELD_SETTER(CCBRJUnitFormatter, stepFinishedHandler_, id<CucumberApiEventEventHandler>)
J2OBJC_FIELD_SETTER(CCBRJUnitFormatter, caseFinishedHandler_, id<CucumberApiEventEventHandler>)
J2OBJC_FIELD_SETTER(CCBRJUnitFormatter, runFinishedHandler_, id<CucumberApiEventEventHandler>)

__attribute__((unused)) static void CCBRJUnitFormatter_handleTestSourceReadWithCucumberApiEventTestSourceRead_(CCBRJUnitFormatter *self, CucumberApiEventTestSourceRead *event);

__attribute__((unused)) static void CCBRJUnitFormatter_handleTestCaseStartedWithCucumberApiEventTestCaseStarted_(CCBRJUnitFormatter *self, CucumberApiEventTestCaseStarted *event);

__attribute__((unused)) static void CCBRJUnitFormatter_handleTestStepFinishedWithCucumberApiEventTestStepFinished_(CCBRJUnitFormatter *self, CucumberApiEventTestStepFinished *event);

__attribute__((unused)) static void CCBRJUnitFormatter_handleTestCaseFinishedWithCucumberApiEventTestCaseFinished_(CCBRJUnitFormatter *self, CucumberApiEventTestCaseFinished *event);

__attribute__((unused)) static void CCBRJUnitFormatter_finishReport(CCBRJUnitFormatter *self);

__attribute__((unused)) static NSString *CCBRJUnitFormatter_sumTimesWithOrgW3cDomNodeList_(CCBRJUnitFormatter *self, id<OrgW3cDomNodeList> testCaseNodes);

__attribute__((unused)) static void CCBRJUnitFormatter_increaseAttributeValueWithOrgW3cDomElement_withNSString_(CCBRJUnitFormatter *self, id<OrgW3cDomElement> element, NSString *attribute);

__attribute__((unused)) static void CCBRJUnitFormatter_closeQuietlyWithJavaIoCloseable_(id<JavaIoCloseable> outArg);

@interface CCBRJUnitFormatter_1 : NSObject < CucumberApiEventEventHandler > {
 @public
  CCBRJUnitFormatter *this$0_;
}

- (instancetype __nonnull)initWithCCBRJUnitFormatter:(CCBRJUnitFormatter *)outer$;

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestSourceRead *)event;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBRJUnitFormatter_1)

__attribute__((unused)) static void CCBRJUnitFormatter_1_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter_1 *self, CCBRJUnitFormatter *outer$);

__attribute__((unused)) static CCBRJUnitFormatter_1 *new_CCBRJUnitFormatter_1_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CCBRJUnitFormatter_1 *create_CCBRJUnitFormatter_1_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$);

@interface CCBRJUnitFormatter_2 : NSObject < CucumberApiEventEventHandler > {
 @public
  CCBRJUnitFormatter *this$0_;
}

- (instancetype __nonnull)initWithCCBRJUnitFormatter:(CCBRJUnitFormatter *)outer$;

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestCaseStarted *)event;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBRJUnitFormatter_2)

__attribute__((unused)) static void CCBRJUnitFormatter_2_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter_2 *self, CCBRJUnitFormatter *outer$);

__attribute__((unused)) static CCBRJUnitFormatter_2 *new_CCBRJUnitFormatter_2_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CCBRJUnitFormatter_2 *create_CCBRJUnitFormatter_2_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$);

@interface CCBRJUnitFormatter_3 : NSObject < CucumberApiEventEventHandler > {
 @public
  CCBRJUnitFormatter *this$0_;
}

- (instancetype __nonnull)initWithCCBRJUnitFormatter:(CCBRJUnitFormatter *)outer$;

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestStepFinished *)event;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBRJUnitFormatter_3)

__attribute__((unused)) static void CCBRJUnitFormatter_3_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter_3 *self, CCBRJUnitFormatter *outer$);

__attribute__((unused)) static CCBRJUnitFormatter_3 *new_CCBRJUnitFormatter_3_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CCBRJUnitFormatter_3 *create_CCBRJUnitFormatter_3_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$);

@interface CCBRJUnitFormatter_4 : NSObject < CucumberApiEventEventHandler > {
 @public
  CCBRJUnitFormatter *this$0_;
}

- (instancetype __nonnull)initWithCCBRJUnitFormatter:(CCBRJUnitFormatter *)outer$;

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestCaseFinished *)event;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBRJUnitFormatter_4)

__attribute__((unused)) static void CCBRJUnitFormatter_4_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter_4 *self, CCBRJUnitFormatter *outer$);

__attribute__((unused)) static CCBRJUnitFormatter_4 *new_CCBRJUnitFormatter_4_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CCBRJUnitFormatter_4 *create_CCBRJUnitFormatter_4_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$);

@interface CCBRJUnitFormatter_5 : NSObject < CucumberApiEventEventHandler > {
 @public
  CCBRJUnitFormatter *this$0_;
}

- (instancetype __nonnull)initWithCCBRJUnitFormatter:(CCBRJUnitFormatter *)outer$;

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestRunFinished *)event;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBRJUnitFormatter_5)

__attribute__((unused)) static void CCBRJUnitFormatter_5_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter_5 *self, CCBRJUnitFormatter *outer$);

__attribute__((unused)) static CCBRJUnitFormatter_5 *new_CCBRJUnitFormatter_5_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CCBRJUnitFormatter_5 *create_CCBRJUnitFormatter_5_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$);

@interface CCBRJUnitFormatter_TestCase : NSObject {
 @public
  id<JavaUtilList> steps_;
  id<JavaUtilList> results_;
  id<CucumberApiTestCase> testCase_;
}

- (instancetype __nonnull)initWithCucumberApiTestCase:(id<CucumberApiTestCase>)testCase;

- (id<OrgW3cDomElement>)createElementWithOrgW3cDomDocument:(id<OrgW3cDomDocument>)doc;

- (void)writeElementWithOrgW3cDomDocument:(id<OrgW3cDomDocument>)doc
                     withOrgW3cDomElement:(id<OrgW3cDomElement>)tc;

- (NSString *)calculateElementNameWithCucumberApiTestCase:(id<CucumberApiTestCase>)testCase;

- (void)addTestCaseElementWithOrgW3cDomDocument:(id<OrgW3cDomDocument>)doc
                           withOrgW3cDomElement:(id<OrgW3cDomElement>)tc
                          withCucumberApiResult:(CucumberApiResult *)result;

- (void)handleEmptyTestCaseWithOrgW3cDomDocument:(id<OrgW3cDomDocument>)doc
                            withOrgW3cDomElement:(id<OrgW3cDomElement>)tc
                           withCucumberApiResult:(CucumberApiResult *)result;

- (NSString *)calculateTotalDurationStringWithCucumberApiResult:(CucumberApiResult *)result;

- (void)addStepAndResultListingWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (NSString *)getKeywordFromSourceWithInt:(jint)stepLine;

- (void)addStackTraceWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                         withCucumberApiResult:(CucumberApiResult *)failed;

- (id<OrgW3cDomElement>)createElementWithMessageWithOrgW3cDomDocument:(id<OrgW3cDomDocument>)doc
                                            withJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                                         withNSString:(NSString *)elementType
                                                         withNSString:(NSString *)message;

- (id<OrgW3cDomElement>)createElementWithOrgW3cDomDocument:(id<OrgW3cDomDocument>)doc
                                 withJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                              withNSString:(NSString *)elementType;

@end

J2OBJC_STATIC_INIT(CCBRJUnitFormatter_TestCase)

J2OBJC_FIELD_SETTER(CCBRJUnitFormatter_TestCase, steps_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(CCBRJUnitFormatter_TestCase, results_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(CCBRJUnitFormatter_TestCase, testCase_, id<CucumberApiTestCase>)

inline JavaTextDecimalFormat *CCBRJUnitFormatter_TestCase_get_NUMBER_FORMAT(void);
static JavaTextDecimalFormat *CCBRJUnitFormatter_TestCase_NUMBER_FORMAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CCBRJUnitFormatter_TestCase, NUMBER_FORMAT, JavaTextDecimalFormat *)

inline CCBRTestSourcesModel *CCBRJUnitFormatter_TestCase_get_testSources(void);
static CCBRTestSourcesModel *CCBRJUnitFormatter_TestCase_testSources;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CCBRJUnitFormatter_TestCase, testSources, CCBRTestSourcesModel *)

inline NSString *CCBRJUnitFormatter_TestCase_get_currentFeatureFile(void);
inline NSString *CCBRJUnitFormatter_TestCase_set_currentFeatureFile(NSString *value);
static NSString *CCBRJUnitFormatter_TestCase_currentFeatureFile;
J2OBJC_STATIC_FIELD_OBJ(CCBRJUnitFormatter_TestCase, currentFeatureFile, NSString *)

inline NSString *CCBRJUnitFormatter_TestCase_get_previousTestCaseName(void);
inline NSString *CCBRJUnitFormatter_TestCase_set_previousTestCaseName(NSString *value);
static NSString *CCBRJUnitFormatter_TestCase_previousTestCaseName;
J2OBJC_STATIC_FIELD_OBJ(CCBRJUnitFormatter_TestCase, previousTestCaseName, NSString *)

inline jint CCBRJUnitFormatter_TestCase_get_exampleNumber(void);
inline jint CCBRJUnitFormatter_TestCase_set_exampleNumber(jint value);
inline jint *CCBRJUnitFormatter_TestCase_getRef_exampleNumber(void);
static jint CCBRJUnitFormatter_TestCase_exampleNumber;
J2OBJC_STATIC_FIELD_PRIMITIVE(CCBRJUnitFormatter_TestCase, exampleNumber, jint)

inline jboolean CCBRJUnitFormatter_TestCase_get_treatConditionallySkippedAsFailure(void);
inline jboolean CCBRJUnitFormatter_TestCase_set_treatConditionallySkippedAsFailure(jboolean value);
inline jboolean *CCBRJUnitFormatter_TestCase_getRef_treatConditionallySkippedAsFailure(void);
static jboolean CCBRJUnitFormatter_TestCase_treatConditionallySkippedAsFailure = false;
J2OBJC_STATIC_FIELD_PRIMITIVE(CCBRJUnitFormatter_TestCase, treatConditionallySkippedAsFailure, jboolean)

__attribute__((unused)) static void CCBRJUnitFormatter_TestCase_initWithCucumberApiTestCase_(CCBRJUnitFormatter_TestCase *self, id<CucumberApiTestCase> testCase);

__attribute__((unused)) static CCBRJUnitFormatter_TestCase *new_CCBRJUnitFormatter_TestCase_initWithCucumberApiTestCase_(id<CucumberApiTestCase> testCase) NS_RETURNS_RETAINED;

__attribute__((unused)) static CCBRJUnitFormatter_TestCase *create_CCBRJUnitFormatter_TestCase_initWithCucumberApiTestCase_(id<CucumberApiTestCase> testCase);

__attribute__((unused)) static id<OrgW3cDomElement> CCBRJUnitFormatter_TestCase_createElementWithOrgW3cDomDocument_(CCBRJUnitFormatter_TestCase *self, id<OrgW3cDomDocument> doc);

__attribute__((unused)) static void CCBRJUnitFormatter_TestCase_writeElementWithOrgW3cDomDocument_withOrgW3cDomElement_(CCBRJUnitFormatter_TestCase *self, id<OrgW3cDomDocument> doc, id<OrgW3cDomElement> tc);

__attribute__((unused)) static NSString *CCBRJUnitFormatter_TestCase_calculateElementNameWithCucumberApiTestCase_(CCBRJUnitFormatter_TestCase *self, id<CucumberApiTestCase> testCase);

__attribute__((unused)) static NSString *CCBRJUnitFormatter_TestCase_calculateTotalDurationStringWithCucumberApiResult_(CCBRJUnitFormatter_TestCase *self, CucumberApiResult *result);

__attribute__((unused)) static void CCBRJUnitFormatter_TestCase_addStepAndResultListingWithJavaLangStringBuilder_(CCBRJUnitFormatter_TestCase *self, JavaLangStringBuilder *sb);

__attribute__((unused)) static NSString *CCBRJUnitFormatter_TestCase_getKeywordFromSourceWithInt_(CCBRJUnitFormatter_TestCase *self, jint stepLine);

__attribute__((unused)) static void CCBRJUnitFormatter_TestCase_addStackTraceWithJavaLangStringBuilder_withCucumberApiResult_(CCBRJUnitFormatter_TestCase *self, JavaLangStringBuilder *sb, CucumberApiResult *failed);

__attribute__((unused)) static id<OrgW3cDomElement> CCBRJUnitFormatter_TestCase_createElementWithMessageWithOrgW3cDomDocument_withJavaLangStringBuilder_withNSString_withNSString_(CCBRJUnitFormatter_TestCase *self, id<OrgW3cDomDocument> doc, JavaLangStringBuilder *sb, NSString *elementType, NSString *message);

__attribute__((unused)) static id<OrgW3cDomElement> CCBRJUnitFormatter_TestCase_createElementWithOrgW3cDomDocument_withJavaLangStringBuilder_withNSString_(CCBRJUnitFormatter_TestCase *self, id<OrgW3cDomDocument> doc, JavaLangStringBuilder *sb, NSString *elementType);

J2OBJC_TYPE_LITERAL_HEADER(CCBRJUnitFormatter_TestCase)

@implementation CCBRJUnitFormatter

- (instancetype __nonnull)initWithJavaNetURL:(JavaNetURL *)outArg {
  CCBRJUnitFormatter_initWithJavaNetURL_(self, outArg);
  return self;
}

- (void)setEventPublisherWithCucumberApiEventEventPublisher:(id<CucumberApiEventEventPublisher>)publisher {
  [((id<CucumberApiEventEventPublisher>) nil_chk(publisher)) registerHandlerForWithIOSClass:CucumberApiEventTestSourceRead_class_() withCucumberApiEventEventHandler:sourceReadHandler_];
  [publisher registerHandlerForWithIOSClass:CucumberApiEventTestCaseStarted_class_() withCucumberApiEventEventHandler:caseStartedHandler_];
  [publisher registerHandlerForWithIOSClass:CucumberApiEventTestCaseFinished_class_() withCucumberApiEventEventHandler:caseFinishedHandler_];
  [publisher registerHandlerForWithIOSClass:CucumberApiEventTestStepFinished_class_() withCucumberApiEventEventHandler:stepFinishedHandler_];
  [publisher registerHandlerForWithIOSClass:CucumberApiEventTestRunFinished_class_() withCucumberApiEventEventHandler:runFinishedHandler_];
}

- (void)handleTestSourceReadWithCucumberApiEventTestSourceRead:(CucumberApiEventTestSourceRead *)event {
  CCBRJUnitFormatter_handleTestSourceReadWithCucumberApiEventTestSourceRead_(self, event);
}

- (void)handleTestCaseStartedWithCucumberApiEventTestCaseStarted:(CucumberApiEventTestCaseStarted *)event {
  CCBRJUnitFormatter_handleTestCaseStartedWithCucumberApiEventTestCaseStarted_(self, event);
}

- (void)handleTestStepFinishedWithCucumberApiEventTestStepFinished:(CucumberApiEventTestStepFinished *)event {
  CCBRJUnitFormatter_handleTestStepFinishedWithCucumberApiEventTestStepFinished_(self, event);
}

- (void)handleTestCaseFinishedWithCucumberApiEventTestCaseFinished:(CucumberApiEventTestCaseFinished *)event {
  CCBRJUnitFormatter_handleTestCaseFinishedWithCucumberApiEventTestCaseFinished_(self, event);
}

- (void)finishReport {
  CCBRJUnitFormatter_finishReport(self);
}

- (NSString *)sumTimesWithOrgW3cDomNodeList:(id<OrgW3cDomNodeList>)testCaseNodes {
  return CCBRJUnitFormatter_sumTimesWithOrgW3cDomNodeList_(self, testCaseNodes);
}

- (void)increaseAttributeValueWithOrgW3cDomElement:(id<OrgW3cDomElement>)element
                                      withNSString:(NSString *)attribute {
  CCBRJUnitFormatter_increaseAttributeValueWithOrgW3cDomElement_withNSString_(self, element, attribute);
}

- (void)setStrictWithBoolean:(jboolean)strict {
  *JreLoadStaticRef(CCBRJUnitFormatter_TestCase, treatConditionallySkippedAsFailure) = strict;
}

+ (void)closeQuietlyWithJavaIoCloseable:(id<JavaIoCloseable>)outArg {
  CCBRJUnitFormatter_closeQuietlyWithJavaIoCloseable_(outArg);
}

- (void)dealloc {
  RELEASE_(out_);
  RELEASE_(doc_);
  RELEASE_(rootElement_);
  RELEASE_(testCase_);
  RELEASE_(root_);
  RELEASE_(sourceReadHandler_);
  RELEASE_(caseStartedHandler_);
  RELEASE_(stepFinishedHandler_);
  RELEASE_(caseFinishedHandler_);
  RELEASE_(runFinishedHandler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 18, 19, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaNetURL:);
  methods[1].selector = @selector(setEventPublisherWithCucumberApiEventEventPublisher:);
  methods[2].selector = @selector(handleTestSourceReadWithCucumberApiEventTestSourceRead:);
  methods[3].selector = @selector(handleTestCaseStartedWithCucumberApiEventTestCaseStarted:);
  methods[4].selector = @selector(handleTestStepFinishedWithCucumberApiEventTestStepFinished:);
  methods[5].selector = @selector(handleTestCaseFinishedWithCucumberApiEventTestCaseFinished:);
  methods[6].selector = @selector(finishReport);
  methods[7].selector = @selector(sumTimesWithOrgW3cDomNodeList:);
  methods[8].selector = @selector(increaseAttributeValueWithOrgW3cDomElement:withNSString:);
  methods[9].selector = @selector(setStrictWithBoolean:);
  methods[10].selector = @selector(closeQuietlyWithJavaIoCloseable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "out_", "LJavaIoWriter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "doc_", "LOrgW3cDomDocument;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "rootElement_", "LOrgW3cDomElement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "testCase_", "LCCBRJUnitFormatter_TestCase;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "root_", "LOrgW3cDomElement;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sourceReadHandler_", "LCucumberApiEventEventHandler;", .constantValue.asLong = 0, 0x2, -1, -1, 20, -1 },
    { "caseStartedHandler_", "LCucumberApiEventEventHandler;", .constantValue.asLong = 0, 0x2, -1, -1, 21, -1 },
    { "stepFinishedHandler_", "LCucumberApiEventEventHandler;", .constantValue.asLong = 0, 0x2, -1, -1, 22, -1 },
    { "caseFinishedHandler_", "LCucumberApiEventEventHandler;", .constantValue.asLong = 0, 0x2, -1, -1, 23, -1 },
    { "runFinishedHandler_", "LCucumberApiEventEventHandler;", .constantValue.asLong = 0, 0x2, -1, -1, 24, -1 },
  };
  static const void *ptrTable[] = { "LJavaNetURL;", "LJavaIoIOException;", "setEventPublisher", "LCucumberApiEventEventPublisher;", "handleTestSourceRead", "LCucumberApiEventTestSourceRead;", "handleTestCaseStarted", "LCucumberApiEventTestCaseStarted;", "handleTestStepFinished", "LCucumberApiEventTestStepFinished;", "handleTestCaseFinished", "LCucumberApiEventTestCaseFinished;", "sumTimes", "LOrgW3cDomNodeList;", "increaseAttributeValue", "LOrgW3cDomElement;LNSString;", "setStrict", "Z", "closeQuietly", "LJavaIoCloseable;", "Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestSourceRead;>;", "Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestCaseStarted;>;", "Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestStepFinished;>;", "Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestCaseFinished;>;", "Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestRunFinished;>;", "LCCBRJUnitFormatter_TestCase;" };
  static const J2ObjcClassInfo _CCBRJUnitFormatter = { "JUnitFormatter", "cucumber.runtime.formatter", ptrTable, methods, fields, 7, 0x10, 11, 10, -1, 25, -1, -1, -1 };
  return &_CCBRJUnitFormatter;
}

@end

void CCBRJUnitFormatter_initWithJavaNetURL_(CCBRJUnitFormatter *self, JavaNetURL *outArg) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->sourceReadHandler_, new_CCBRJUnitFormatter_1_initWithCCBRJUnitFormatter_(self));
  JreStrongAssignAndConsume(&self->caseStartedHandler_, new_CCBRJUnitFormatter_2_initWithCCBRJUnitFormatter_(self));
  JreStrongAssignAndConsume(&self->stepFinishedHandler_, new_CCBRJUnitFormatter_3_initWithCCBRJUnitFormatter_(self));
  JreStrongAssignAndConsume(&self->caseFinishedHandler_, new_CCBRJUnitFormatter_4_initWithCCBRJUnitFormatter_(self));
  JreStrongAssignAndConsume(&self->runFinishedHandler_, new_CCBRJUnitFormatter_5_initWithCCBRJUnitFormatter_(self));
  JreStrongAssignAndConsume(&self->out_, new_CCBRUTF8OutputStreamWriter_initWithJavaIoOutputStream_(create_CCBRURLOutputStream_initWithJavaNetURL_(outArg)));
  *JreLoadStaticRef(CCBRJUnitFormatter_TestCase, treatConditionallySkippedAsFailure) = false;
  JreStrongAssign(JreLoadStaticRef(CCBRJUnitFormatter_TestCase, currentFeatureFile), nil);
  JreStrongAssign(JreLoadStaticRef(CCBRJUnitFormatter_TestCase, previousTestCaseName), @"");
  *JreLoadStaticRef(CCBRJUnitFormatter_TestCase, exampleNumber) = 1;
  @try {
    JreStrongAssign(&self->doc_, [((JavaxXmlParsersDocumentBuilder *) nil_chk([((JavaxXmlParsersDocumentBuilderFactory *) nil_chk(JavaxXmlParsersDocumentBuilderFactory_newInstance())) newDocumentBuilder])) newDocument]);
    JreStrongAssign(&self->rootElement_, [((id<OrgW3cDomDocument>) nil_chk(self->doc_)) createElementWithNSString:@"testsuite"]);
    [self->doc_ appendChildWithOrgW3cDomNode:self->rootElement_];
  }
  @catch (JavaxXmlParsersParserConfigurationException *e) {
    @throw create_CCBRCucumberException_initWithNSString_withJavaLangThrowable_(@"Error while processing unit report", e);
  }
}

CCBRJUnitFormatter *new_CCBRJUnitFormatter_initWithJavaNetURL_(JavaNetURL *outArg) {
  J2OBJC_NEW_IMPL(CCBRJUnitFormatter, initWithJavaNetURL_, outArg)
}

CCBRJUnitFormatter *create_CCBRJUnitFormatter_initWithJavaNetURL_(JavaNetURL *outArg) {
  J2OBJC_CREATE_IMPL(CCBRJUnitFormatter, initWithJavaNetURL_, outArg)
}

void CCBRJUnitFormatter_handleTestSourceReadWithCucumberApiEventTestSourceRead_(CCBRJUnitFormatter *self, CucumberApiEventTestSourceRead *event) {
  [((CCBRTestSourcesModel *) nil_chk(JreLoadStatic(CCBRJUnitFormatter_TestCase, testSources))) addTestSourceReadEventWithNSString:((CucumberApiEventTestSourceRead *) nil_chk(event))->uri_ withCucumberApiEventTestSourceRead:event];
}

void CCBRJUnitFormatter_handleTestCaseStartedWithCucumberApiEventTestCaseStarted_(CCBRJUnitFormatter *self, CucumberApiEventTestCaseStarted *event) {
  if (JreLoadStatic(CCBRJUnitFormatter_TestCase, currentFeatureFile) == nil || ![JreLoadStatic(CCBRJUnitFormatter_TestCase, currentFeatureFile) isEqual:[((id<CucumberApiTestCase>) nil_chk(((CucumberApiEventTestCaseStarted *) nil_chk(event))->testCase_)) getUri]]) {
    JreStrongAssign(JreLoadStaticRef(CCBRJUnitFormatter_TestCase, currentFeatureFile), [((id<CucumberApiTestCase>) nil_chk(((CucumberApiEventTestCaseStarted *) nil_chk(event))->testCase_)) getUri]);
    JreStrongAssign(JreLoadStaticRef(CCBRJUnitFormatter_TestCase, previousTestCaseName), @"");
    *JreLoadStaticRef(CCBRJUnitFormatter_TestCase, exampleNumber) = 1;
  }
  JreStrongAssignAndConsume(&self->testCase_, new_CCBRJUnitFormatter_TestCase_initWithCucumberApiTestCase_(((CucumberApiEventTestCaseStarted *) nil_chk(event))->testCase_));
  JreStrongAssign(&self->root_, CCBRJUnitFormatter_TestCase_createElementWithOrgW3cDomDocument_(self->testCase_, self->doc_));
  CCBRJUnitFormatter_TestCase_writeElementWithOrgW3cDomDocument_withOrgW3cDomElement_(nil_chk(self->testCase_), self->doc_, self->root_);
  [((id<OrgW3cDomElement>) nil_chk(self->rootElement_)) appendChildWithOrgW3cDomNode:self->root_];
  CCBRJUnitFormatter_increaseAttributeValueWithOrgW3cDomElement_withNSString_(self, self->rootElement_, @"tests");
}

void CCBRJUnitFormatter_handleTestStepFinishedWithCucumberApiEventTestStepFinished_(CCBRJUnitFormatter *self, CucumberApiEventTestStepFinished *event) {
  if ([CucumberApiPickleStepTestStep_class_() isInstance:((CucumberApiEventTestStepFinished *) nil_chk(event))->testStep_]) {
    [((id<JavaUtilList>) nil_chk(((CCBRJUnitFormatter_TestCase *) nil_chk(self->testCase_))->steps_)) addWithId:(id<CucumberApiPickleStepTestStep>) cast_check(event->testStep_, CucumberApiPickleStepTestStep_class_())];
    [((id<JavaUtilList>) nil_chk(((CCBRJUnitFormatter_TestCase *) nil_chk(self->testCase_))->results_)) addWithId:event->result_];
  }
}

void CCBRJUnitFormatter_handleTestCaseFinishedWithCucumberApiEventTestCaseFinished_(CCBRJUnitFormatter *self, CucumberApiEventTestCaseFinished *event) {
  if ([((id<JavaUtilList>) nil_chk(((CCBRJUnitFormatter_TestCase *) nil_chk(self->testCase_))->steps_)) isEmpty]) {
    [((CCBRJUnitFormatter_TestCase *) nil_chk(self->testCase_)) handleEmptyTestCaseWithOrgW3cDomDocument:self->doc_ withOrgW3cDomElement:self->root_ withCucumberApiResult:((CucumberApiEventTestCaseFinished *) nil_chk(event))->result_];
  }
  else {
    [((CCBRJUnitFormatter_TestCase *) nil_chk(self->testCase_)) addTestCaseElementWithOrgW3cDomDocument:self->doc_ withOrgW3cDomElement:self->root_ withCucumberApiResult:((CucumberApiEventTestCaseFinished *) nil_chk(event))->result_];
  }
}

void CCBRJUnitFormatter_finishReport(CCBRJUnitFormatter *self) {
  @try {
    [((id<OrgW3cDomElement>) nil_chk(self->rootElement_)) setAttributeWithNSString:@"name" withNSString:[CCBRJUnitFormatter_class_() getName]];
    [self->rootElement_ setAttributeWithNSString:@"failures" withNSString:NSString_java_valueOfInt_([((id<OrgW3cDomNodeList>) nil_chk([self->rootElement_ getElementsByTagNameWithNSString:@"failure"])) getLength])];
    [self->rootElement_ setAttributeWithNSString:@"skipped" withNSString:NSString_java_valueOfInt_([((id<OrgW3cDomNodeList>) nil_chk([self->rootElement_ getElementsByTagNameWithNSString:@"skipped"])) getLength])];
    [self->rootElement_ setAttributeWithNSString:@"time" withNSString:CCBRJUnitFormatter_sumTimesWithOrgW3cDomNodeList_(self, [self->rootElement_ getElementsByTagNameWithNSString:@"testcase"])];
    JavaxXmlTransformTransformerFactory *transfac = JavaxXmlTransformTransformerFactory_newInstance();
    JavaxXmlTransformTransformer *trans = [((JavaxXmlTransformTransformerFactory *) nil_chk(transfac)) newTransformer];
    [((JavaxXmlTransformTransformer *) nil_chk(trans)) setOutputPropertyWithNSString:JavaxXmlTransformOutputKeys_INDENT withNSString:@"yes"];
    JavaxXmlTransformStreamStreamResult *result = create_JavaxXmlTransformStreamStreamResult_initWithJavaIoWriter_(self->out_);
    JavaxXmlTransformDomDOMSource *source = create_JavaxXmlTransformDomDOMSource_initWithOrgW3cDomNode_(self->doc_);
    [trans transformWithJavaxXmlTransformSource:source withJavaxXmlTransformResult:result];
    CCBRJUnitFormatter_closeQuietlyWithJavaIoCloseable_(self->out_);
  }
  @catch (JavaxXmlTransformTransformerException *e) {
    @throw create_CCBRCucumberException_initWithNSString_withJavaLangThrowable_(@"Error while transforming.", e);
  }
}

NSString *CCBRJUnitFormatter_sumTimesWithOrgW3cDomNodeList_(CCBRJUnitFormatter *self, id<OrgW3cDomNodeList> testCaseNodes) {
  jdouble totalDurationSecondsForAllTimes = 0.0;
  for (jint i = 0; i < [((id<OrgW3cDomNodeList>) nil_chk(testCaseNodes)) getLength]; i++) {
    @try {
      jdouble testCaseTime = JavaLangDouble_parseDoubleWithNSString_([((id<OrgW3cDomNode>) nil_chk([((id<OrgW3cDomNamedNodeMap>) nil_chk([((id<OrgW3cDomNode>) nil_chk([testCaseNodes itemWithInt:i])) getAttributes])) getNamedItemWithNSString:@"time"])) getNodeValue]);
      JrePlusAssignDoubleD(&totalDurationSecondsForAllTimes, testCaseTime);
    }
    @catch (JavaLangNumberFormatException *e) {
      @throw create_CCBRCucumberException_initWithJavaLangThrowable_(e);
    }
    @catch (JavaLangNullPointerException *e) {
      @throw create_CCBRCucumberException_initWithJavaLangThrowable_(e);
    }
  }
  JavaTextDecimalFormat *nfmt = (JavaTextDecimalFormat *) cast_chk(JavaTextNumberFormat_getNumberInstanceWithJavaUtilLocale_(JreLoadStatic(JavaUtilLocale, US)), [JavaTextDecimalFormat class]);
  [((JavaTextDecimalFormat *) nil_chk(nfmt)) applyPatternWithNSString:@"0.######"];
  return [nfmt formatWithDouble:totalDurationSecondsForAllTimes];
}

void CCBRJUnitFormatter_increaseAttributeValueWithOrgW3cDomElement_withNSString_(CCBRJUnitFormatter *self, id<OrgW3cDomElement> element, NSString *attribute) {
  jint value = 0;
  if ([((id<OrgW3cDomElement>) nil_chk(element)) hasAttributeWithNSString:attribute]) {
    value = JavaLangInteger_parseIntWithNSString_([element getAttributeWithNSString:attribute]);
  }
  [element setAttributeWithNSString:attribute withNSString:NSString_java_valueOfInt_(++value)];
}

void CCBRJUnitFormatter_closeQuietlyWithJavaIoCloseable_(id<JavaIoCloseable> outArg) {
  CCBRJUnitFormatter_initialize();
  @try {
    [((id<JavaIoCloseable>) nil_chk(outArg)) close];
  }
  @catch (JavaIoIOException *ignored) {
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CCBRJUnitFormatter)

@implementation CCBRJUnitFormatter_1

- (instancetype __nonnull)initWithCCBRJUnitFormatter:(CCBRJUnitFormatter *)outer$ {
  CCBRJUnitFormatter_1_initWithCCBRJUnitFormatter_(self, outer$);
  return self;
}

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestSourceRead *)event {
  CCBRJUnitFormatter_handleTestSourceReadWithCucumberApiEventTestSourceRead_(this$0_, event);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCCBRJUnitFormatter:);
  methods[1].selector = @selector(receiveWithCucumberApiEventEvent:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCCBRJUnitFormatter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "receive", "LCucumberApiEventTestSourceRead;", "LCCBRJUnitFormatter;", "Ljava/lang/Object;Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestSourceRead;>;" };
  static const J2ObjcClassInfo _CCBRJUnitFormatter_1 = { "", "cucumber.runtime.formatter", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, -1, 3, -1 };
  return &_CCBRJUnitFormatter_1;
}

@end

void CCBRJUnitFormatter_1_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter_1 *self, CCBRJUnitFormatter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

CCBRJUnitFormatter_1 *new_CCBRJUnitFormatter_1_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$) {
  J2OBJC_NEW_IMPL(CCBRJUnitFormatter_1, initWithCCBRJUnitFormatter_, outer$)
}

CCBRJUnitFormatter_1 *create_CCBRJUnitFormatter_1_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$) {
  J2OBJC_CREATE_IMPL(CCBRJUnitFormatter_1, initWithCCBRJUnitFormatter_, outer$)
}

@implementation CCBRJUnitFormatter_2

- (instancetype __nonnull)initWithCCBRJUnitFormatter:(CCBRJUnitFormatter *)outer$ {
  CCBRJUnitFormatter_2_initWithCCBRJUnitFormatter_(self, outer$);
  return self;
}

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestCaseStarted *)event {
  CCBRJUnitFormatter_handleTestCaseStartedWithCucumberApiEventTestCaseStarted_(this$0_, event);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCCBRJUnitFormatter:);
  methods[1].selector = @selector(receiveWithCucumberApiEventEvent:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCCBRJUnitFormatter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "receive", "LCucumberApiEventTestCaseStarted;", "LCCBRJUnitFormatter;", "Ljava/lang/Object;Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestCaseStarted;>;" };
  static const J2ObjcClassInfo _CCBRJUnitFormatter_2 = { "", "cucumber.runtime.formatter", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, -1, 3, -1 };
  return &_CCBRJUnitFormatter_2;
}

@end

void CCBRJUnitFormatter_2_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter_2 *self, CCBRJUnitFormatter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

CCBRJUnitFormatter_2 *new_CCBRJUnitFormatter_2_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$) {
  J2OBJC_NEW_IMPL(CCBRJUnitFormatter_2, initWithCCBRJUnitFormatter_, outer$)
}

CCBRJUnitFormatter_2 *create_CCBRJUnitFormatter_2_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$) {
  J2OBJC_CREATE_IMPL(CCBRJUnitFormatter_2, initWithCCBRJUnitFormatter_, outer$)
}

@implementation CCBRJUnitFormatter_3

- (instancetype __nonnull)initWithCCBRJUnitFormatter:(CCBRJUnitFormatter *)outer$ {
  CCBRJUnitFormatter_3_initWithCCBRJUnitFormatter_(self, outer$);
  return self;
}

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestStepFinished *)event {
  CCBRJUnitFormatter_handleTestStepFinishedWithCucumberApiEventTestStepFinished_(this$0_, event);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCCBRJUnitFormatter:);
  methods[1].selector = @selector(receiveWithCucumberApiEventEvent:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCCBRJUnitFormatter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "receive", "LCucumberApiEventTestStepFinished;", "LCCBRJUnitFormatter;", "Ljava/lang/Object;Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestStepFinished;>;" };
  static const J2ObjcClassInfo _CCBRJUnitFormatter_3 = { "", "cucumber.runtime.formatter", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, -1, 3, -1 };
  return &_CCBRJUnitFormatter_3;
}

@end

void CCBRJUnitFormatter_3_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter_3 *self, CCBRJUnitFormatter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

CCBRJUnitFormatter_3 *new_CCBRJUnitFormatter_3_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$) {
  J2OBJC_NEW_IMPL(CCBRJUnitFormatter_3, initWithCCBRJUnitFormatter_, outer$)
}

CCBRJUnitFormatter_3 *create_CCBRJUnitFormatter_3_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$) {
  J2OBJC_CREATE_IMPL(CCBRJUnitFormatter_3, initWithCCBRJUnitFormatter_, outer$)
}

@implementation CCBRJUnitFormatter_4

- (instancetype __nonnull)initWithCCBRJUnitFormatter:(CCBRJUnitFormatter *)outer$ {
  CCBRJUnitFormatter_4_initWithCCBRJUnitFormatter_(self, outer$);
  return self;
}

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestCaseFinished *)event {
  CCBRJUnitFormatter_handleTestCaseFinishedWithCucumberApiEventTestCaseFinished_(this$0_, event);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCCBRJUnitFormatter:);
  methods[1].selector = @selector(receiveWithCucumberApiEventEvent:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCCBRJUnitFormatter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "receive", "LCucumberApiEventTestCaseFinished;", "LCCBRJUnitFormatter;", "Ljava/lang/Object;Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestCaseFinished;>;" };
  static const J2ObjcClassInfo _CCBRJUnitFormatter_4 = { "", "cucumber.runtime.formatter", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, -1, 3, -1 };
  return &_CCBRJUnitFormatter_4;
}

@end

void CCBRJUnitFormatter_4_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter_4 *self, CCBRJUnitFormatter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

CCBRJUnitFormatter_4 *new_CCBRJUnitFormatter_4_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$) {
  J2OBJC_NEW_IMPL(CCBRJUnitFormatter_4, initWithCCBRJUnitFormatter_, outer$)
}

CCBRJUnitFormatter_4 *create_CCBRJUnitFormatter_4_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$) {
  J2OBJC_CREATE_IMPL(CCBRJUnitFormatter_4, initWithCCBRJUnitFormatter_, outer$)
}

@implementation CCBRJUnitFormatter_5

- (instancetype __nonnull)initWithCCBRJUnitFormatter:(CCBRJUnitFormatter *)outer$ {
  CCBRJUnitFormatter_5_initWithCCBRJUnitFormatter_(self, outer$);
  return self;
}

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestRunFinished *)event {
  CCBRJUnitFormatter_finishReport(this$0_);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCCBRJUnitFormatter:);
  methods[1].selector = @selector(receiveWithCucumberApiEventEvent:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCCBRJUnitFormatter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "receive", "LCucumberApiEventTestRunFinished;", "LCCBRJUnitFormatter;", "Ljava/lang/Object;Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestRunFinished;>;" };
  static const J2ObjcClassInfo _CCBRJUnitFormatter_5 = { "", "cucumber.runtime.formatter", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, -1, 3, -1 };
  return &_CCBRJUnitFormatter_5;
}

@end

void CCBRJUnitFormatter_5_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter_5 *self, CCBRJUnitFormatter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

CCBRJUnitFormatter_5 *new_CCBRJUnitFormatter_5_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$) {
  J2OBJC_NEW_IMPL(CCBRJUnitFormatter_5, initWithCCBRJUnitFormatter_, outer$)
}

CCBRJUnitFormatter_5 *create_CCBRJUnitFormatter_5_initWithCCBRJUnitFormatter_(CCBRJUnitFormatter *outer$) {
  J2OBJC_CREATE_IMPL(CCBRJUnitFormatter_5, initWithCCBRJUnitFormatter_, outer$)
}

J2OBJC_INITIALIZED_DEFN(CCBRJUnitFormatter_TestCase)

@implementation CCBRJUnitFormatter_TestCase

- (instancetype __nonnull)initWithCucumberApiTestCase:(id<CucumberApiTestCase>)testCase {
  CCBRJUnitFormatter_TestCase_initWithCucumberApiTestCase_(self, testCase);
  return self;
}

- (id<OrgW3cDomElement>)createElementWithOrgW3cDomDocument:(id<OrgW3cDomDocument>)doc {
  return CCBRJUnitFormatter_TestCase_createElementWithOrgW3cDomDocument_(self, doc);
}

- (void)writeElementWithOrgW3cDomDocument:(id<OrgW3cDomDocument>)doc
                     withOrgW3cDomElement:(id<OrgW3cDomElement>)tc {
  CCBRJUnitFormatter_TestCase_writeElementWithOrgW3cDomDocument_withOrgW3cDomElement_(self, doc, tc);
}

- (NSString *)calculateElementNameWithCucumberApiTestCase:(id<CucumberApiTestCase>)testCase {
  return CCBRJUnitFormatter_TestCase_calculateElementNameWithCucumberApiTestCase_(self, testCase);
}

- (void)addTestCaseElementWithOrgW3cDomDocument:(id<OrgW3cDomDocument>)doc
                           withOrgW3cDomElement:(id<OrgW3cDomElement>)tc
                          withCucumberApiResult:(CucumberApiResult *)result {
  [((id<OrgW3cDomElement>) nil_chk(tc)) setAttributeWithNSString:@"time" withNSString:CCBRJUnitFormatter_TestCase_calculateTotalDurationStringWithCucumberApiResult_(self, result)];
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  CCBRJUnitFormatter_TestCase_addStepAndResultListingWithJavaLangStringBuilder_(self, sb);
  id<OrgW3cDomElement> child;
  if ([((CucumberApiResult *) nil_chk(result)) isWithCucumberApiResult_Type:JreLoadEnum(CucumberApiResult_Type, FAILED)]) {
    CCBRJUnitFormatter_TestCase_addStackTraceWithJavaLangStringBuilder_withCucumberApiResult_(self, sb, result);
    child = CCBRJUnitFormatter_TestCase_createElementWithMessageWithOrgW3cDomDocument_withJavaLangStringBuilder_withNSString_withNSString_(self, doc, sb, @"failure", [result getErrorMessage]);
  }
  else if ([result isWithCucumberApiResult_Type:JreLoadEnum(CucumberApiResult_Type, AMBIGUOUS)]) {
    CCBRJUnitFormatter_TestCase_addStackTraceWithJavaLangStringBuilder_withCucumberApiResult_(self, sb, result);
    child = CCBRJUnitFormatter_TestCase_createElementWithMessageWithOrgW3cDomDocument_withJavaLangStringBuilder_withNSString_withNSString_(self, doc, sb, @"failure", [result getErrorMessage]);
  }
  else if ([result isWithCucumberApiResult_Type:JreLoadEnum(CucumberApiResult_Type, PENDING)] || [result isWithCucumberApiResult_Type:JreLoadEnum(CucumberApiResult_Type, UNDEFINED)]) {
    if (CCBRJUnitFormatter_TestCase_treatConditionallySkippedAsFailure) {
      child = CCBRJUnitFormatter_TestCase_createElementWithMessageWithOrgW3cDomDocument_withJavaLangStringBuilder_withNSString_withNSString_(self, doc, sb, @"failure", @"The scenario has pending or undefined step(s)");
    }
    else {
      child = CCBRJUnitFormatter_TestCase_createElementWithOrgW3cDomDocument_withJavaLangStringBuilder_withNSString_(self, doc, sb, @"skipped");
    }
  }
  else if ([result isWithCucumberApiResult_Type:JreLoadEnum(CucumberApiResult_Type, SKIPPED)] && [result getError] != nil) {
    CCBRJUnitFormatter_TestCase_addStackTraceWithJavaLangStringBuilder_withCucumberApiResult_(self, sb, result);
    child = CCBRJUnitFormatter_TestCase_createElementWithMessageWithOrgW3cDomDocument_withJavaLangStringBuilder_withNSString_withNSString_(self, doc, sb, @"skipped", [result getErrorMessage]);
  }
  else {
    child = CCBRJUnitFormatter_TestCase_createElementWithOrgW3cDomDocument_withJavaLangStringBuilder_withNSString_(self, doc, sb, @"system-out");
  }
  [tc appendChildWithOrgW3cDomNode:child];
}

- (void)handleEmptyTestCaseWithOrgW3cDomDocument:(id<OrgW3cDomDocument>)doc
                            withOrgW3cDomElement:(id<OrgW3cDomElement>)tc
                           withCucumberApiResult:(CucumberApiResult *)result {
  [((id<OrgW3cDomElement>) nil_chk(tc)) setAttributeWithNSString:@"time" withNSString:CCBRJUnitFormatter_TestCase_calculateTotalDurationStringWithCucumberApiResult_(self, result)];
  NSString *resultType = CCBRJUnitFormatter_TestCase_treatConditionallySkippedAsFailure ? @"failure" : @"skipped";
  id<OrgW3cDomElement> child = CCBRJUnitFormatter_TestCase_createElementWithMessageWithOrgW3cDomDocument_withJavaLangStringBuilder_withNSString_withNSString_(self, doc, create_JavaLangStringBuilder_init(), resultType, @"The scenario has no steps");
  [tc appendChildWithOrgW3cDomNode:child];
}

- (NSString *)calculateTotalDurationStringWithCucumberApiResult:(CucumberApiResult *)result {
  return CCBRJUnitFormatter_TestCase_calculateTotalDurationStringWithCucumberApiResult_(self, result);
}

- (void)addStepAndResultListingWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  CCBRJUnitFormatter_TestCase_addStepAndResultListingWithJavaLangStringBuilder_(self, sb);
}

- (NSString *)getKeywordFromSourceWithInt:(jint)stepLine {
  return CCBRJUnitFormatter_TestCase_getKeywordFromSourceWithInt_(self, stepLine);
}

- (void)addStackTraceWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                         withCucumberApiResult:(CucumberApiResult *)failed {
  CCBRJUnitFormatter_TestCase_addStackTraceWithJavaLangStringBuilder_withCucumberApiResult_(self, sb, failed);
}

- (id<OrgW3cDomElement>)createElementWithMessageWithOrgW3cDomDocument:(id<OrgW3cDomDocument>)doc
                                            withJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                                         withNSString:(NSString *)elementType
                                                         withNSString:(NSString *)message {
  return CCBRJUnitFormatter_TestCase_createElementWithMessageWithOrgW3cDomDocument_withJavaLangStringBuilder_withNSString_withNSString_(self, doc, sb, elementType, message);
}

- (id<OrgW3cDomElement>)createElementWithOrgW3cDomDocument:(id<OrgW3cDomDocument>)doc
                                 withJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                              withNSString:(NSString *)elementType {
  return CCBRJUnitFormatter_TestCase_createElementWithOrgW3cDomDocument_withJavaLangStringBuilder_withNSString_(self, doc, sb, elementType);
}

- (void)dealloc {
  RELEASE_(steps_);
  RELEASE_(results_);
  RELEASE_(testCase_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgW3cDomElement;", 0x2, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 5, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 15, 16, -1, -1, -1, -1 },
    { NULL, "LOrgW3cDomElement;", 0x2, 17, 18, -1, -1, -1, -1 },
    { NULL, "LOrgW3cDomElement;", 0x2, 1, 19, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberApiTestCase:);
  methods[1].selector = @selector(createElementWithOrgW3cDomDocument:);
  methods[2].selector = @selector(writeElementWithOrgW3cDomDocument:withOrgW3cDomElement:);
  methods[3].selector = @selector(calculateElementNameWithCucumberApiTestCase:);
  methods[4].selector = @selector(addTestCaseElementWithOrgW3cDomDocument:withOrgW3cDomElement:withCucumberApiResult:);
  methods[5].selector = @selector(handleEmptyTestCaseWithOrgW3cDomDocument:withOrgW3cDomElement:withCucumberApiResult:);
  methods[6].selector = @selector(calculateTotalDurationStringWithCucumberApiResult:);
  methods[7].selector = @selector(addStepAndResultListingWithJavaLangStringBuilder:);
  methods[8].selector = @selector(getKeywordFromSourceWithInt:);
  methods[9].selector = @selector(addStackTraceWithJavaLangStringBuilder:withCucumberApiResult:);
  methods[10].selector = @selector(createElementWithMessageWithOrgW3cDomDocument:withJavaLangStringBuilder:withNSString:withNSString:);
  methods[11].selector = @selector(createElementWithOrgW3cDomDocument:withJavaLangStringBuilder:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NUMBER_FORMAT", "LJavaTextDecimalFormat;", .constantValue.asLong = 0, 0x1a, -1, 20, -1, -1 },
    { "testSources", "LCCBRTestSourcesModel;", .constantValue.asLong = 0, 0x1a, -1, 21, -1, -1 },
    { "currentFeatureFile", "LNSString;", .constantValue.asLong = 0, 0x8, -1, 22, -1, -1 },
    { "previousTestCaseName", "LNSString;", .constantValue.asLong = 0, 0x8, -1, 23, -1, -1 },
    { "exampleNumber", "I", .constantValue.asLong = 0, 0x8, -1, 24, -1, -1 },
    { "treatConditionallySkippedAsFailure", "Z", .constantValue.asLong = 0, 0x8, -1, 25, -1, -1 },
    { "steps_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 26, -1 },
    { "results_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 27, -1 },
    { "testCase_", "LCucumberApiTestCase;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberApiTestCase;", "createElement", "LOrgW3cDomDocument;", "writeElement", "LOrgW3cDomDocument;LOrgW3cDomElement;", "calculateElementName", "addTestCaseElement", "LOrgW3cDomDocument;LOrgW3cDomElement;LCucumberApiResult;", "handleEmptyTestCase", "calculateTotalDurationString", "LCucumberApiResult;", "addStepAndResultListing", "LJavaLangStringBuilder;", "getKeywordFromSource", "I", "addStackTrace", "LJavaLangStringBuilder;LCucumberApiResult;", "createElementWithMessage", "LOrgW3cDomDocument;LJavaLangStringBuilder;LNSString;LNSString;", "LOrgW3cDomDocument;LJavaLangStringBuilder;LNSString;", &CCBRJUnitFormatter_TestCase_NUMBER_FORMAT, &CCBRJUnitFormatter_TestCase_testSources, &CCBRJUnitFormatter_TestCase_currentFeatureFile, &CCBRJUnitFormatter_TestCase_previousTestCaseName, &CCBRJUnitFormatter_TestCase_exampleNumber, &CCBRJUnitFormatter_TestCase_treatConditionallySkippedAsFailure, "Ljava/util/List<Lcucumber/api/PickleStepTestStep;>;", "Ljava/util/List<Lcucumber/api/Result;>;", "LCCBRJUnitFormatter;" };
  static const J2ObjcClassInfo _CCBRJUnitFormatter_TestCase = { "TestCase", "cucumber.runtime.formatter", ptrTable, methods, fields, 7, 0xa, 12, 9, 28, -1, -1, -1, -1 };
  return &_CCBRJUnitFormatter_TestCase;
}

+ (void)initialize {
  if (self == [CCBRJUnitFormatter_TestCase class]) {
    JreStrongAssign(&CCBRJUnitFormatter_TestCase_NUMBER_FORMAT, (JavaTextDecimalFormat *) cast_chk(JavaTextNumberFormat_getNumberInstanceWithJavaUtilLocale_(JreLoadStatic(JavaUtilLocale, US)), [JavaTextDecimalFormat class]));
    JreStrongAssignAndConsume(&CCBRJUnitFormatter_TestCase_testSources, new_CCBRTestSourcesModel_init());
    {
      [((JavaTextDecimalFormat *) nil_chk(CCBRJUnitFormatter_TestCase_NUMBER_FORMAT)) applyPatternWithNSString:@"0.######"];
    }
    J2OBJC_SET_INITIALIZED(CCBRJUnitFormatter_TestCase)
  }
}

@end

void CCBRJUnitFormatter_TestCase_initWithCucumberApiTestCase_(CCBRJUnitFormatter_TestCase *self, id<CucumberApiTestCase> testCase) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->steps_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->results_, new_JavaUtilArrayList_init());
  JreStrongAssign(&self->testCase_, testCase);
}

CCBRJUnitFormatter_TestCase *new_CCBRJUnitFormatter_TestCase_initWithCucumberApiTestCase_(id<CucumberApiTestCase> testCase) {
  J2OBJC_NEW_IMPL(CCBRJUnitFormatter_TestCase, initWithCucumberApiTestCase_, testCase)
}

CCBRJUnitFormatter_TestCase *create_CCBRJUnitFormatter_TestCase_initWithCucumberApiTestCase_(id<CucumberApiTestCase> testCase) {
  J2OBJC_CREATE_IMPL(CCBRJUnitFormatter_TestCase, initWithCucumberApiTestCase_, testCase)
}

id<OrgW3cDomElement> CCBRJUnitFormatter_TestCase_createElementWithOrgW3cDomDocument_(CCBRJUnitFormatter_TestCase *self, id<OrgW3cDomDocument> doc) {
  return [((id<OrgW3cDomDocument>) nil_chk(doc)) createElementWithNSString:@"testcase"];
}

void CCBRJUnitFormatter_TestCase_writeElementWithOrgW3cDomDocument_withOrgW3cDomElement_(CCBRJUnitFormatter_TestCase *self, id<OrgW3cDomDocument> doc, id<OrgW3cDomElement> tc) {
  [((id<OrgW3cDomElement>) nil_chk(tc)) setAttributeWithNSString:@"classname" withNSString:[((CCBRTestSourcesModel *) nil_chk(CCBRJUnitFormatter_TestCase_testSources)) getFeatureNameWithNSString:CCBRJUnitFormatter_TestCase_currentFeatureFile]];
  [tc setAttributeWithNSString:@"name" withNSString:CCBRJUnitFormatter_TestCase_calculateElementNameWithCucumberApiTestCase_(self, self->testCase_)];
}

NSString *CCBRJUnitFormatter_TestCase_calculateElementNameWithCucumberApiTestCase_(CCBRJUnitFormatter_TestCase *self, id<CucumberApiTestCase> testCase) {
  NSString *testCaseName = [((id<CucumberApiTestCase>) nil_chk(testCase)) getName];
  if ([((NSString *) nil_chk(testCaseName)) isEqual:CCBRJUnitFormatter_TestCase_previousTestCaseName]) {
    return CCBRUtils_getUniqueTestNameForScenarioExampleWithNSString_withInt_(testCaseName, ++CCBRJUnitFormatter_TestCase_exampleNumber);
  }
  else {
    JreStrongAssign(&CCBRJUnitFormatter_TestCase_previousTestCaseName, [testCase getName]);
    CCBRJUnitFormatter_TestCase_exampleNumber = 1;
    return testCaseName;
  }
}

NSString *CCBRJUnitFormatter_TestCase_calculateTotalDurationStringWithCucumberApiResult_(CCBRJUnitFormatter_TestCase *self, CucumberApiResult *result) {
  return [((JavaTextDecimalFormat *) nil_chk(CCBRJUnitFormatter_TestCase_NUMBER_FORMAT)) formatWithDouble:[((JavaLangLong *) nil_chk([((CucumberApiResult *) nil_chk(result)) getDuration])) doubleValue] / 1000000000];
}

void CCBRJUnitFormatter_TestCase_addStepAndResultListingWithJavaLangStringBuilder_(CCBRJUnitFormatter_TestCase *self, JavaLangStringBuilder *sb) {
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(self->steps_)) size]; i++) {
    jint length = [((JavaLangStringBuilder *) nil_chk(sb)) java_length];
    NSString *resultStatus = @"not executed";
    if (i < [((id<JavaUtilList>) nil_chk(self->results_)) size]) {
      resultStatus = [((CucumberApiResult_Type *) nil_chk([((CucumberApiResult *) nil_chk([self->results_ getWithInt:i])) getStatus])) lowerCaseName];
    }
    [sb appendWithNSString:JreStrcat("$$", CCBRJUnitFormatter_TestCase_getKeywordFromSourceWithInt_(self, [((id<CucumberApiPickleStepTestStep>) nil_chk([self->steps_ getWithInt:i])) getStepLine]), [((id<CucumberApiPickleStepTestStep>) nil_chk([self->steps_ getWithInt:i])) getStepText])];
    do {
      [sb appendWithNSString:@"."];
    }
    while ([sb java_length] - length < 76);
    [sb appendWithNSString:resultStatus];
    [sb appendWithNSString:@"\n"];
  }
}

NSString *CCBRJUnitFormatter_TestCase_getKeywordFromSourceWithInt_(CCBRJUnitFormatter_TestCase *self, jint stepLine) {
  return [((CCBRTestSourcesModel *) nil_chk(CCBRJUnitFormatter_TestCase_testSources)) getKeywordFromSourceWithNSString:CCBRJUnitFormatter_TestCase_currentFeatureFile withInt:stepLine];
}

void CCBRJUnitFormatter_TestCase_addStackTraceWithJavaLangStringBuilder_withCucumberApiResult_(CCBRJUnitFormatter_TestCase *self, JavaLangStringBuilder *sb, CucumberApiResult *failed) {
  [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"\nStackTrace:\n"];
  JavaIoStringWriter *sw = create_JavaIoStringWriter_init();
  [((JavaLangThrowable *) nil_chk([((CucumberApiResult *) nil_chk(failed)) getError])) printStackTraceWithJavaIoPrintWriter:create_JavaIoPrintWriter_initWithJavaIoWriter_(sw)];
  [sb appendWithNSString:[sw description]];
}

id<OrgW3cDomElement> CCBRJUnitFormatter_TestCase_createElementWithMessageWithOrgW3cDomDocument_withJavaLangStringBuilder_withNSString_withNSString_(CCBRJUnitFormatter_TestCase *self, id<OrgW3cDomDocument> doc, JavaLangStringBuilder *sb, NSString *elementType, NSString *message) {
  id<OrgW3cDomElement> child = CCBRJUnitFormatter_TestCase_createElementWithOrgW3cDomDocument_withJavaLangStringBuilder_withNSString_(self, doc, sb, elementType);
  [((id<OrgW3cDomElement>) nil_chk(child)) setAttributeWithNSString:@"message" withNSString:message];
  return child;
}

id<OrgW3cDomElement> CCBRJUnitFormatter_TestCase_createElementWithOrgW3cDomDocument_withJavaLangStringBuilder_withNSString_(CCBRJUnitFormatter_TestCase *self, id<OrgW3cDomDocument> doc, JavaLangStringBuilder *sb, NSString *elementType) {
  id<OrgW3cDomElement> child = [((id<OrgW3cDomDocument>) nil_chk(doc)) createElementWithNSString:elementType];
  NSString *systemLineSeperator = JavaLangSystem_getPropertyWithNSString_(@"line.separator");
  [((id<OrgW3cDomElement>) nil_chk(child)) appendChildWithOrgW3cDomNode:[doc createCDATASectionWithNSString:[((NSString *) nil_chk([((JavaLangStringBuilder *) nil_chk(sb)) description])) java_replace:systemLineSeperator withSequence:@"\n"]]];
  return child;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CCBRJUnitFormatter_TestCase)
