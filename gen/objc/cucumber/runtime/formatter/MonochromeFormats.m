//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/formatter/MonochromeFormats.java
//

#include "J2ObjC_source.h"
#include "cucumber/runtime/formatter/Format.h"
#include "cucumber/runtime/formatter/MonochromeFormats.h"

inline id<CCBRFormat> CCBRMonochromeFormats_get_FORMAT(void);
static id<CCBRFormat> CCBRMonochromeFormats_FORMAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CCBRMonochromeFormats, FORMAT, id<CCBRFormat>)

@interface CCBRMonochromeFormats_1 : NSObject < CCBRFormat >

- (instancetype __nonnull)init;

- (NSString *)textWithNSString:(NSString *)text;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBRMonochromeFormats_1)

__attribute__((unused)) static void CCBRMonochromeFormats_1_init(CCBRMonochromeFormats_1 *self);

__attribute__((unused)) static CCBRMonochromeFormats_1 *new_CCBRMonochromeFormats_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static CCBRMonochromeFormats_1 *create_CCBRMonochromeFormats_1_init(void);

J2OBJC_INITIALIZED_DEFN(CCBRMonochromeFormats)

@implementation CCBRMonochromeFormats

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CCBRMonochromeFormats_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<CCBRFormat>)getWithNSString:(NSString *)key {
  return CCBRMonochromeFormats_FORMAT;
}

- (NSString *)upWithInt:(jint)n {
  return @"";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCCBRFormat;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getWithNSString:);
  methods[2].selector = @selector(upWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FORMAT", "LCCBRFormat;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "get", "LNSString;", "up", "I", &CCBRMonochromeFormats_FORMAT };
  static const J2ObjcClassInfo _CCBRMonochromeFormats = { "MonochromeFormats", "cucumber.runtime.formatter", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, -1, -1 };
  return &_CCBRMonochromeFormats;
}

+ (void)initialize {
  if (self == [CCBRMonochromeFormats class]) {
    JreStrongAssignAndConsume(&CCBRMonochromeFormats_FORMAT, new_CCBRMonochromeFormats_1_init());
    J2OBJC_SET_INITIALIZED(CCBRMonochromeFormats)
  }
}

@end

void CCBRMonochromeFormats_init(CCBRMonochromeFormats *self) {
  NSObject_init(self);
}

CCBRMonochromeFormats *new_CCBRMonochromeFormats_init() {
  J2OBJC_NEW_IMPL(CCBRMonochromeFormats, init)
}

CCBRMonochromeFormats *create_CCBRMonochromeFormats_init() {
  J2OBJC_CREATE_IMPL(CCBRMonochromeFormats, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CCBRMonochromeFormats)

@implementation CCBRMonochromeFormats_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CCBRMonochromeFormats_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)textWithNSString:(NSString *)text {
  return text;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(textWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "text", "LNSString;", "LCCBRMonochromeFormats;" };
  static const J2ObjcClassInfo _CCBRMonochromeFormats_1 = { "", "cucumber.runtime.formatter", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, -1, -1, -1 };
  return &_CCBRMonochromeFormats_1;
}

@end

void CCBRMonochromeFormats_1_init(CCBRMonochromeFormats_1 *self) {
  NSObject_init(self);
}

CCBRMonochromeFormats_1 *new_CCBRMonochromeFormats_1_init() {
  J2OBJC_NEW_IMPL(CCBRMonochromeFormats_1, init)
}

CCBRMonochromeFormats_1 *create_CCBRMonochromeFormats_1_init() {
  J2OBJC_CREATE_IMPL(CCBRMonochromeFormats_1, init)
}
