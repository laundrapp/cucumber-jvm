//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/formatter/TestSourcesModel.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRuntimeFormatterTestSourcesModel")
#ifdef RESTRICT_CucumberRuntimeFormatterTestSourcesModel
#define INCLUDE_ALL_CucumberRuntimeFormatterTestSourcesModel 0
#else
#define INCLUDE_ALL_CucumberRuntimeFormatterTestSourcesModel 1
#endif
#undef RESTRICT_CucumberRuntimeFormatterTestSourcesModel

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBRTestSourcesModel_) && (INCLUDE_ALL_CucumberRuntimeFormatterTestSourcesModel || defined(INCLUDE_CCBRTestSourcesModel))
#define CCBRTestSourcesModel_

@class CCBRTestSourcesModel_AstNode;
@class CCBTestSourceRead;
@class GherkinAstBackground;
@class GherkinAstFeature;
@class GherkinAstScenarioDefinition;

@interface CCBRTestSourcesModel : NSObject

#pragma mark Package-Private

- (instancetype __nonnull)init;

- (void)addTestSourceReadEventWithNSString:(NSString *)path
                     withCCBTestSourceRead:(CCBTestSourceRead *)event;

+ (NSString *)calculateIdWithCCBRTestSourcesModel_AstNode:(CCBRTestSourcesModel_AstNode *)astNode;

+ (NSString *)convertToIdWithNSString:(NSString *)name;

- (CCBRTestSourcesModel_AstNode *)getAstNodeWithNSString:(NSString *)path
                                                 withInt:(jint)line;

+ (GherkinAstBackground *)getBackgroundForTestCaseWithCCBRTestSourcesModel_AstNode:(CCBRTestSourcesModel_AstNode *)astNode;

- (GherkinAstFeature *)getFeatureWithNSString:(NSString *)path;

+ (GherkinAstFeature *)getFeatureForTestCaseWithCCBRTestSourcesModel_AstNode:(CCBRTestSourcesModel_AstNode *)astNode;

- (NSString *)getFeatureNameWithNSString:(NSString *)uri;

- (NSString *)getKeywordFromSourceWithNSString:(NSString *)uri
                                       withInt:(jint)stepLine;

+ (GherkinAstScenarioDefinition *)getScenarioDefinitionWithCCBRTestSourcesModel_AstNode:(CCBRTestSourcesModel_AstNode *)astNode;

- (GherkinAstScenarioDefinition *)getScenarioDefinitionWithNSString:(NSString *)path
                                                            withInt:(jint)line;

- (jboolean)hasBackgroundWithNSString:(NSString *)path
                              withInt:(jint)line;

+ (jboolean)isBackgroundStepWithCCBRTestSourcesModel_AstNode:(CCBRTestSourcesModel_AstNode *)astNode;

+ (jboolean)isScenarioOutlineScenarioWithCCBRTestSourcesModel_AstNode:(CCBRTestSourcesModel_AstNode *)astNode;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBRTestSourcesModel)

FOUNDATION_EXPORT void CCBRTestSourcesModel_init(CCBRTestSourcesModel *self);

FOUNDATION_EXPORT CCBRTestSourcesModel *new_CCBRTestSourcesModel_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBRTestSourcesModel *create_CCBRTestSourcesModel_init(void);

FOUNDATION_EXPORT GherkinAstFeature *CCBRTestSourcesModel_getFeatureForTestCaseWithCCBRTestSourcesModel_AstNode_(CCBRTestSourcesModel_AstNode *astNode);

FOUNDATION_EXPORT GherkinAstBackground *CCBRTestSourcesModel_getBackgroundForTestCaseWithCCBRTestSourcesModel_AstNode_(CCBRTestSourcesModel_AstNode *astNode);

FOUNDATION_EXPORT GherkinAstScenarioDefinition *CCBRTestSourcesModel_getScenarioDefinitionWithCCBRTestSourcesModel_AstNode_(CCBRTestSourcesModel_AstNode *astNode);

FOUNDATION_EXPORT jboolean CCBRTestSourcesModel_isScenarioOutlineScenarioWithCCBRTestSourcesModel_AstNode_(CCBRTestSourcesModel_AstNode *astNode);

FOUNDATION_EXPORT jboolean CCBRTestSourcesModel_isBackgroundStepWithCCBRTestSourcesModel_AstNode_(CCBRTestSourcesModel_AstNode *astNode);

FOUNDATION_EXPORT NSString *CCBRTestSourcesModel_calculateIdWithCCBRTestSourcesModel_AstNode_(CCBRTestSourcesModel_AstNode *astNode);

FOUNDATION_EXPORT NSString *CCBRTestSourcesModel_convertToIdWithNSString_(NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(CCBRTestSourcesModel)

@compatibility_alias CucumberRuntimeFormatterTestSourcesModel CCBRTestSourcesModel;

#endif

#if !defined (CCBRTestSourcesModel_ExamplesRowWrapperNode_) && (INCLUDE_ALL_CucumberRuntimeFormatterTestSourcesModel || defined(INCLUDE_CCBRTestSourcesModel_ExamplesRowWrapperNode))
#define CCBRTestSourcesModel_ExamplesRowWrapperNode_

#define RESTRICT_GherkinAstNode 1
#define INCLUDE_GherkinAstNode 1
#include "gherkin/ast/Node.h"

@class CCBRTestSourcesModel;
@class GherkinAstLocation;

@interface CCBRTestSourcesModel_ExamplesRowWrapperNode : GherkinAstNode {
 @public
  jint bodyRowIndex_;
}

#pragma mark Package-Private

- (instancetype __nonnull)initWithCCBRTestSourcesModel:(CCBRTestSourcesModel *)outer$
                                    withGherkinAstNode:(GherkinAstNode *)examplesRow
                                               withInt:(jint)bodyRowIndex;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithGherkinAstLocation:(GherkinAstLocation *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBRTestSourcesModel_ExamplesRowWrapperNode)

FOUNDATION_EXPORT void CCBRTestSourcesModel_ExamplesRowWrapperNode_initWithCCBRTestSourcesModel_withGherkinAstNode_withInt_(CCBRTestSourcesModel_ExamplesRowWrapperNode *self, CCBRTestSourcesModel *outer$, GherkinAstNode *examplesRow, jint bodyRowIndex);

FOUNDATION_EXPORT CCBRTestSourcesModel_ExamplesRowWrapperNode *new_CCBRTestSourcesModel_ExamplesRowWrapperNode_initWithCCBRTestSourcesModel_withGherkinAstNode_withInt_(CCBRTestSourcesModel *outer$, GherkinAstNode *examplesRow, jint bodyRowIndex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBRTestSourcesModel_ExamplesRowWrapperNode *create_CCBRTestSourcesModel_ExamplesRowWrapperNode_initWithCCBRTestSourcesModel_withGherkinAstNode_withInt_(CCBRTestSourcesModel *outer$, GherkinAstNode *examplesRow, jint bodyRowIndex);

J2OBJC_TYPE_LITERAL_HEADER(CCBRTestSourcesModel_ExamplesRowWrapperNode)

#endif

#if !defined (CCBRTestSourcesModel_AstNode_) && (INCLUDE_ALL_CucumberRuntimeFormatterTestSourcesModel || defined(INCLUDE_CCBRTestSourcesModel_AstNode))
#define CCBRTestSourcesModel_AstNode_

@class CCBRTestSourcesModel;
@class GherkinAstNode;

@interface CCBRTestSourcesModel_AstNode : NSObject {
 @public
  GherkinAstNode *node_;
  CCBRTestSourcesModel_AstNode *parent_;
}

#pragma mark Package-Private

- (instancetype __nonnull)initWithCCBRTestSourcesModel:(CCBRTestSourcesModel *)outer$
                                    withGherkinAstNode:(GherkinAstNode *)node
                      withCCBRTestSourcesModel_AstNode:(CCBRTestSourcesModel_AstNode *)parent;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBRTestSourcesModel_AstNode)

J2OBJC_FIELD_SETTER(CCBRTestSourcesModel_AstNode, node_, GherkinAstNode *)
J2OBJC_FIELD_SETTER(CCBRTestSourcesModel_AstNode, parent_, CCBRTestSourcesModel_AstNode *)

FOUNDATION_EXPORT void CCBRTestSourcesModel_AstNode_initWithCCBRTestSourcesModel_withGherkinAstNode_withCCBRTestSourcesModel_AstNode_(CCBRTestSourcesModel_AstNode *self, CCBRTestSourcesModel *outer$, GherkinAstNode *node, CCBRTestSourcesModel_AstNode *parent);

FOUNDATION_EXPORT CCBRTestSourcesModel_AstNode *new_CCBRTestSourcesModel_AstNode_initWithCCBRTestSourcesModel_withGherkinAstNode_withCCBRTestSourcesModel_AstNode_(CCBRTestSourcesModel *outer$, GherkinAstNode *node, CCBRTestSourcesModel_AstNode *parent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBRTestSourcesModel_AstNode *create_CCBRTestSourcesModel_AstNode_initWithCCBRTestSourcesModel_withGherkinAstNode_withCCBRTestSourcesModel_AstNode_(CCBRTestSourcesModel *outer$, GherkinAstNode *node, CCBRTestSourcesModel_AstNode *parent);

J2OBJC_TYPE_LITERAL_HEADER(CCBRTestSourcesModel_AstNode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRuntimeFormatterTestSourcesModel")
