//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/runtime/formatter/JSONFormatter.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "cucumber/api/HookType.h"
#include "cucumber/api/Result.h"
#include "cucumber/api/TestCase.h"
#include "cucumber/api/TestStep.h"
#include "cucumber/api/event/EmbedEvent.h"
#include "cucumber/api/event/EventHandler.h"
#include "cucumber/api/event/EventPublisher.h"
#include "cucumber/api/event/TestCaseStarted.h"
#include "cucumber/api/event/TestRunFinished.h"
#include "cucumber/api/event/TestSourceRead.h"
#include "cucumber/api/event/TestStepFinished.h"
#include "cucumber/api/event/TestStepStarted.h"
#include "cucumber/api/event/WriteEvent.h"
#include "cucumber/api/formatter/NiceAppendable.h"
#include "cucumber/runtime/Argument.h"
#include "cucumber/runtime/formatter/JSONFormatter.h"
#include "cucumber/runtime/formatter/TestSourcesModel.h"
#include "gherkin/ast/Background.h"
#include "gherkin/ast/DocString.h"
#include "gherkin/ast/Feature.h"
#include "gherkin/ast/Location.h"
#include "gherkin/ast/Node.h"
#include "gherkin/ast/ScenarioDefinition.h"
#include "gherkin/ast/Step.h"
#include "gherkin/deps/com/google/gson/Gson.h"
#include "gherkin/deps/com/google/gson/GsonBuilder.h"
#include "gherkin/deps/net/iharder/Base64.h"
#include "gherkin/pickles/Argument.h"
#include "gherkin/pickles/PickleCell.h"
#include "gherkin/pickles/PickleLocation.h"
#include "gherkin/pickles/PickleRow.h"
#include "gherkin/pickles/PickleString.h"
#include "gherkin/pickles/PickleTable.h"
#include "gherkin/pickles/PickleTag.h"
#include "java/lang/Appendable.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@interface CucumberRuntimeFormatterJSONFormatter () {
 @public
  NSString *currentFeatureFile_;
  id<JavaUtilList> featureMaps_;
  id<JavaUtilList> currentElementsList_;
  id<JavaUtilMap> currentElementMap_;
  id<JavaUtilMap> currentTestCaseMap_;
  id<JavaUtilList> currentStepsList_;
  id<JavaUtilMap> currentStepOrHookMap_;
  GherkinDepsComGoogleGsonGson *gson_;
  CucumberApiFormatterNiceAppendable *out_;
  CucumberRuntimeFormatterTestSourcesModel *testSources_;
  id<CucumberApiEventEventHandler> testSourceReadHandler_;
  id<CucumberApiEventEventHandler> caseStartedHandler_;
  id<CucumberApiEventEventHandler> stepStartedHandler_;
  id<CucumberApiEventEventHandler> stepFinishedHandler_;
  id<CucumberApiEventEventHandler> runFinishedHandler_;
  id<CucumberApiEventEventHandler> writeEventhandler_;
  id<CucumberApiEventEventHandler> embedEventhandler_;
}

- (void)handleTestSourceReadWithCucumberApiEventTestSourceRead:(CucumberApiEventTestSourceRead *)event;

- (void)handleTestCaseStartedWithCucumberApiEventTestCaseStarted:(CucumberApiEventTestCaseStarted *)event;

- (void)handleTestStepStartedWithCucumberApiEventTestStepStarted:(CucumberApiEventTestStepStarted *)event;

- (void)handleWriteWithCucumberApiEventWriteEvent:(CucumberApiEventWriteEvent *)event;

- (void)handleEmbedWithCucumberApiEventEmbedEvent:(CucumberApiEventEmbedEvent *)event;

- (void)handleTestStepFinishedWithCucumberApiEventTestStepFinished:(CucumberApiEventTestStepFinished *)event;

- (void)finishReport;

- (id<JavaUtilMap>)createFeatureMapWithCucumberApiTestCase:(CucumberApiTestCase *)testCase;

- (id<JavaUtilMap>)createTestCaseWithCucumberApiTestCase:(CucumberApiTestCase *)testCase;

- (id<JavaUtilMap>)createBackgroundWithCucumberApiTestCase:(CucumberApiTestCase *)testCase;

- (jboolean)isFirstStepAfterBackgroundWithCucumberApiTestStep:(CucumberApiTestStep *)testStep;

- (id<JavaUtilMap>)createTestStepWithCucumberApiTestStep:(CucumberApiTestStep *)testStep;

- (id<JavaUtilMap>)createDocStringMapWithGherkinPicklesArgument:(id<GherkinPicklesArgument>)argument
           withCucumberRuntimeFormatterTestSourcesModel_AstNode:(CucumberRuntimeFormatterTestSourcesModel_AstNode *)astNode;

- (id<JavaUtilList>)createDataTableListWithGherkinPicklesArgument:(id<GherkinPicklesArgument>)argument;

- (id<JavaUtilList>)createCellListWithGherkinPicklesPickleRow:(GherkinPicklesPickleRow *)row;

- (id<JavaUtilMap>)createHookStepWithCucumberApiTestStep:(CucumberApiTestStep *)testStep;

- (void)addHookStepToTestCaseMapWithJavaUtilMap:(id<JavaUtilMap>)currentStepOrHookMap
                        withCucumberApiHookType:(CucumberApiHookType *)hookType;

- (void)addOutputToHookMapWithNSString:(NSString *)text;

- (void)addEmbeddingToHookMapWithByteArray:(IOSByteArray *)data
                              withNSString:(NSString *)mimeType;

- (id<JavaUtilMap>)createEmbeddingMapWithByteArray:(IOSByteArray *)data
                                      withNSString:(NSString *)mimeType;

- (id<JavaUtilMap>)createMatchMapWithCucumberApiTestStep:(CucumberApiTestStep *)testStep
                                   withCucumberApiResult:(CucumberApiResult *)result;

- (id<JavaUtilMap>)createResultMapWithCucumberApiResult:(CucumberApiResult *)result;

@end

J2OBJC_FIELD_SETTER(CucumberRuntimeFormatterJSONFormatter, currentFeatureFile_, NSString *)
J2OBJC_FIELD_SETTER(CucumberRuntimeFormatterJSONFormatter, featureMaps_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(CucumberRuntimeFormatterJSONFormatter, currentElementsList_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(CucumberRuntimeFormatterJSONFormatter, currentElementMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(CucumberRuntimeFormatterJSONFormatter, currentTestCaseMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(CucumberRuntimeFormatterJSONFormatter, currentStepsList_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(CucumberRuntimeFormatterJSONFormatter, currentStepOrHookMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(CucumberRuntimeFormatterJSONFormatter, gson_, GherkinDepsComGoogleGsonGson *)
J2OBJC_FIELD_SETTER(CucumberRuntimeFormatterJSONFormatter, out_, CucumberApiFormatterNiceAppendable *)
J2OBJC_FIELD_SETTER(CucumberRuntimeFormatterJSONFormatter, testSources_, CucumberRuntimeFormatterTestSourcesModel *)
J2OBJC_FIELD_SETTER(CucumberRuntimeFormatterJSONFormatter, testSourceReadHandler_, id<CucumberApiEventEventHandler>)
J2OBJC_FIELD_SETTER(CucumberRuntimeFormatterJSONFormatter, caseStartedHandler_, id<CucumberApiEventEventHandler>)
J2OBJC_FIELD_SETTER(CucumberRuntimeFormatterJSONFormatter, stepStartedHandler_, id<CucumberApiEventEventHandler>)
J2OBJC_FIELD_SETTER(CucumberRuntimeFormatterJSONFormatter, stepFinishedHandler_, id<CucumberApiEventEventHandler>)
J2OBJC_FIELD_SETTER(CucumberRuntimeFormatterJSONFormatter, runFinishedHandler_, id<CucumberApiEventEventHandler>)
J2OBJC_FIELD_SETTER(CucumberRuntimeFormatterJSONFormatter, writeEventhandler_, id<CucumberApiEventEventHandler>)
J2OBJC_FIELD_SETTER(CucumberRuntimeFormatterJSONFormatter, embedEventhandler_, id<CucumberApiEventEventHandler>)

__attribute__((unused)) static void CucumberRuntimeFormatterJSONFormatter_handleTestSourceReadWithCucumberApiEventTestSourceRead_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiEventTestSourceRead *event);

__attribute__((unused)) static void CucumberRuntimeFormatterJSONFormatter_handleTestCaseStartedWithCucumberApiEventTestCaseStarted_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiEventTestCaseStarted *event);

__attribute__((unused)) static void CucumberRuntimeFormatterJSONFormatter_handleTestStepStartedWithCucumberApiEventTestStepStarted_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiEventTestStepStarted *event);

__attribute__((unused)) static void CucumberRuntimeFormatterJSONFormatter_handleWriteWithCucumberApiEventWriteEvent_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiEventWriteEvent *event);

__attribute__((unused)) static void CucumberRuntimeFormatterJSONFormatter_handleEmbedWithCucumberApiEventEmbedEvent_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiEventEmbedEvent *event);

__attribute__((unused)) static void CucumberRuntimeFormatterJSONFormatter_handleTestStepFinishedWithCucumberApiEventTestStepFinished_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiEventTestStepFinished *event);

__attribute__((unused)) static void CucumberRuntimeFormatterJSONFormatter_finishReport(CucumberRuntimeFormatterJSONFormatter *self);

__attribute__((unused)) static id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createFeatureMapWithCucumberApiTestCase_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiTestCase *testCase);

__attribute__((unused)) static id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createTestCaseWithCucumberApiTestCase_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiTestCase *testCase);

__attribute__((unused)) static id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createBackgroundWithCucumberApiTestCase_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiTestCase *testCase);

__attribute__((unused)) static jboolean CucumberRuntimeFormatterJSONFormatter_isFirstStepAfterBackgroundWithCucumberApiTestStep_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiTestStep *testStep);

__attribute__((unused)) static id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createTestStepWithCucumberApiTestStep_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiTestStep *testStep);

__attribute__((unused)) static id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createDocStringMapWithGherkinPicklesArgument_withCucumberRuntimeFormatterTestSourcesModel_AstNode_(CucumberRuntimeFormatterJSONFormatter *self, id<GherkinPicklesArgument> argument, CucumberRuntimeFormatterTestSourcesModel_AstNode *astNode);

__attribute__((unused)) static id<JavaUtilList> CucumberRuntimeFormatterJSONFormatter_createDataTableListWithGherkinPicklesArgument_(CucumberRuntimeFormatterJSONFormatter *self, id<GherkinPicklesArgument> argument);

__attribute__((unused)) static id<JavaUtilList> CucumberRuntimeFormatterJSONFormatter_createCellListWithGherkinPicklesPickleRow_(CucumberRuntimeFormatterJSONFormatter *self, GherkinPicklesPickleRow *row);

__attribute__((unused)) static id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createHookStepWithCucumberApiTestStep_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiTestStep *testStep);

__attribute__((unused)) static void CucumberRuntimeFormatterJSONFormatter_addHookStepToTestCaseMapWithJavaUtilMap_withCucumberApiHookType_(CucumberRuntimeFormatterJSONFormatter *self, id<JavaUtilMap> currentStepOrHookMap, CucumberApiHookType *hookType);

__attribute__((unused)) static void CucumberRuntimeFormatterJSONFormatter_addOutputToHookMapWithNSString_(CucumberRuntimeFormatterJSONFormatter *self, NSString *text);

__attribute__((unused)) static void CucumberRuntimeFormatterJSONFormatter_addEmbeddingToHookMapWithByteArray_withNSString_(CucumberRuntimeFormatterJSONFormatter *self, IOSByteArray *data, NSString *mimeType);

__attribute__((unused)) static id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createEmbeddingMapWithByteArray_withNSString_(CucumberRuntimeFormatterJSONFormatter *self, IOSByteArray *data, NSString *mimeType);

__attribute__((unused)) static id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createMatchMapWithCucumberApiTestStep_withCucumberApiResult_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiTestStep *testStep, CucumberApiResult *result);

__attribute__((unused)) static id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createResultMapWithCucumberApiResult_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiResult *result);

@interface CucumberRuntimeFormatterJSONFormatter_1 : NSObject < CucumberApiEventEventHandler > {
 @public
  CucumberRuntimeFormatterJSONFormatter *this$0_;
}

- (instancetype)initWithCucumberRuntimeFormatterJSONFormatter:(CucumberRuntimeFormatterJSONFormatter *)outer$;

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestSourceRead *)event;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeFormatterJSONFormatter_1)

__attribute__((unused)) static void CucumberRuntimeFormatterJSONFormatter_1_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter_1 *self, CucumberRuntimeFormatterJSONFormatter *outer$);

__attribute__((unused)) static CucumberRuntimeFormatterJSONFormatter_1 *new_CucumberRuntimeFormatterJSONFormatter_1_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberRuntimeFormatterJSONFormatter_1 *create_CucumberRuntimeFormatterJSONFormatter_1_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$);

@interface CucumberRuntimeFormatterJSONFormatter_2 : NSObject < CucumberApiEventEventHandler > {
 @public
  CucumberRuntimeFormatterJSONFormatter *this$0_;
}

- (instancetype)initWithCucumberRuntimeFormatterJSONFormatter:(CucumberRuntimeFormatterJSONFormatter *)outer$;

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestCaseStarted *)event;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeFormatterJSONFormatter_2)

__attribute__((unused)) static void CucumberRuntimeFormatterJSONFormatter_2_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter_2 *self, CucumberRuntimeFormatterJSONFormatter *outer$);

__attribute__((unused)) static CucumberRuntimeFormatterJSONFormatter_2 *new_CucumberRuntimeFormatterJSONFormatter_2_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberRuntimeFormatterJSONFormatter_2 *create_CucumberRuntimeFormatterJSONFormatter_2_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$);

@interface CucumberRuntimeFormatterJSONFormatter_3 : NSObject < CucumberApiEventEventHandler > {
 @public
  CucumberRuntimeFormatterJSONFormatter *this$0_;
}

- (instancetype)initWithCucumberRuntimeFormatterJSONFormatter:(CucumberRuntimeFormatterJSONFormatter *)outer$;

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestStepStarted *)event;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeFormatterJSONFormatter_3)

__attribute__((unused)) static void CucumberRuntimeFormatterJSONFormatter_3_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter_3 *self, CucumberRuntimeFormatterJSONFormatter *outer$);

__attribute__((unused)) static CucumberRuntimeFormatterJSONFormatter_3 *new_CucumberRuntimeFormatterJSONFormatter_3_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberRuntimeFormatterJSONFormatter_3 *create_CucumberRuntimeFormatterJSONFormatter_3_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$);

@interface CucumberRuntimeFormatterJSONFormatter_4 : NSObject < CucumberApiEventEventHandler > {
 @public
  CucumberRuntimeFormatterJSONFormatter *this$0_;
}

- (instancetype)initWithCucumberRuntimeFormatterJSONFormatter:(CucumberRuntimeFormatterJSONFormatter *)outer$;

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestStepFinished *)event;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeFormatterJSONFormatter_4)

__attribute__((unused)) static void CucumberRuntimeFormatterJSONFormatter_4_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter_4 *self, CucumberRuntimeFormatterJSONFormatter *outer$);

__attribute__((unused)) static CucumberRuntimeFormatterJSONFormatter_4 *new_CucumberRuntimeFormatterJSONFormatter_4_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberRuntimeFormatterJSONFormatter_4 *create_CucumberRuntimeFormatterJSONFormatter_4_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$);

@interface CucumberRuntimeFormatterJSONFormatter_5 : NSObject < CucumberApiEventEventHandler > {
 @public
  CucumberRuntimeFormatterJSONFormatter *this$0_;
}

- (instancetype)initWithCucumberRuntimeFormatterJSONFormatter:(CucumberRuntimeFormatterJSONFormatter *)outer$;

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestRunFinished *)event;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeFormatterJSONFormatter_5)

__attribute__((unused)) static void CucumberRuntimeFormatterJSONFormatter_5_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter_5 *self, CucumberRuntimeFormatterJSONFormatter *outer$);

__attribute__((unused)) static CucumberRuntimeFormatterJSONFormatter_5 *new_CucumberRuntimeFormatterJSONFormatter_5_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberRuntimeFormatterJSONFormatter_5 *create_CucumberRuntimeFormatterJSONFormatter_5_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$);

@interface CucumberRuntimeFormatterJSONFormatter_6 : NSObject < CucumberApiEventEventHandler > {
 @public
  CucumberRuntimeFormatterJSONFormatter *this$0_;
}

- (instancetype)initWithCucumberRuntimeFormatterJSONFormatter:(CucumberRuntimeFormatterJSONFormatter *)outer$;

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventWriteEvent *)event;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeFormatterJSONFormatter_6)

__attribute__((unused)) static void CucumberRuntimeFormatterJSONFormatter_6_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter_6 *self, CucumberRuntimeFormatterJSONFormatter *outer$);

__attribute__((unused)) static CucumberRuntimeFormatterJSONFormatter_6 *new_CucumberRuntimeFormatterJSONFormatter_6_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberRuntimeFormatterJSONFormatter_6 *create_CucumberRuntimeFormatterJSONFormatter_6_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$);

@interface CucumberRuntimeFormatterJSONFormatter_7 : NSObject < CucumberApiEventEventHandler > {
 @public
  CucumberRuntimeFormatterJSONFormatter *this$0_;
}

- (instancetype)initWithCucumberRuntimeFormatterJSONFormatter:(CucumberRuntimeFormatterJSONFormatter *)outer$;

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventEmbedEvent *)event;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeFormatterJSONFormatter_7)

__attribute__((unused)) static void CucumberRuntimeFormatterJSONFormatter_7_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter_7 *self, CucumberRuntimeFormatterJSONFormatter *outer$);

__attribute__((unused)) static CucumberRuntimeFormatterJSONFormatter_7 *new_CucumberRuntimeFormatterJSONFormatter_7_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CucumberRuntimeFormatterJSONFormatter_7 *create_CucumberRuntimeFormatterJSONFormatter_7_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$);

@implementation CucumberRuntimeFormatterJSONFormatter

- (instancetype)initWithJavaLangAppendable:(id<JavaLangAppendable>)outArg {
  CucumberRuntimeFormatterJSONFormatter_initWithJavaLangAppendable_(self, outArg);
  return self;
}

- (void)setEventPublisherWithCucumberApiEventEventPublisher:(id<CucumberApiEventEventPublisher>)publisher {
  [((id<CucumberApiEventEventPublisher>) nil_chk(publisher)) registerHandlerForWithIOSClass:CucumberApiEventTestSourceRead_class_() withCucumberApiEventEventHandler:testSourceReadHandler_];
  [publisher registerHandlerForWithIOSClass:CucumberApiEventTestCaseStarted_class_() withCucumberApiEventEventHandler:caseStartedHandler_];
  [publisher registerHandlerForWithIOSClass:CucumberApiEventTestStepStarted_class_() withCucumberApiEventEventHandler:stepStartedHandler_];
  [publisher registerHandlerForWithIOSClass:CucumberApiEventTestStepFinished_class_() withCucumberApiEventEventHandler:stepFinishedHandler_];
  [publisher registerHandlerForWithIOSClass:CucumberApiEventWriteEvent_class_() withCucumberApiEventEventHandler:writeEventhandler_];
  [publisher registerHandlerForWithIOSClass:CucumberApiEventEmbedEvent_class_() withCucumberApiEventEventHandler:embedEventhandler_];
  [publisher registerHandlerForWithIOSClass:CucumberApiEventTestRunFinished_class_() withCucumberApiEventEventHandler:runFinishedHandler_];
}

- (void)handleTestSourceReadWithCucumberApiEventTestSourceRead:(CucumberApiEventTestSourceRead *)event {
  CucumberRuntimeFormatterJSONFormatter_handleTestSourceReadWithCucumberApiEventTestSourceRead_(self, event);
}

- (void)handleTestCaseStartedWithCucumberApiEventTestCaseStarted:(CucumberApiEventTestCaseStarted *)event {
  CucumberRuntimeFormatterJSONFormatter_handleTestCaseStartedWithCucumberApiEventTestCaseStarted_(self, event);
}

- (void)handleTestStepStartedWithCucumberApiEventTestStepStarted:(CucumberApiEventTestStepStarted *)event {
  CucumberRuntimeFormatterJSONFormatter_handleTestStepStartedWithCucumberApiEventTestStepStarted_(self, event);
}

- (void)handleWriteWithCucumberApiEventWriteEvent:(CucumberApiEventWriteEvent *)event {
  CucumberRuntimeFormatterJSONFormatter_handleWriteWithCucumberApiEventWriteEvent_(self, event);
}

- (void)handleEmbedWithCucumberApiEventEmbedEvent:(CucumberApiEventEmbedEvent *)event {
  CucumberRuntimeFormatterJSONFormatter_handleEmbedWithCucumberApiEventEmbedEvent_(self, event);
}

- (void)handleTestStepFinishedWithCucumberApiEventTestStepFinished:(CucumberApiEventTestStepFinished *)event {
  CucumberRuntimeFormatterJSONFormatter_handleTestStepFinishedWithCucumberApiEventTestStepFinished_(self, event);
}

- (void)finishReport {
  CucumberRuntimeFormatterJSONFormatter_finishReport(self);
}

- (id<JavaUtilMap>)createFeatureMapWithCucumberApiTestCase:(CucumberApiTestCase *)testCase {
  return CucumberRuntimeFormatterJSONFormatter_createFeatureMapWithCucumberApiTestCase_(self, testCase);
}

- (id<JavaUtilMap>)createTestCaseWithCucumberApiTestCase:(CucumberApiTestCase *)testCase {
  return CucumberRuntimeFormatterJSONFormatter_createTestCaseWithCucumberApiTestCase_(self, testCase);
}

- (id<JavaUtilMap>)createBackgroundWithCucumberApiTestCase:(CucumberApiTestCase *)testCase {
  return CucumberRuntimeFormatterJSONFormatter_createBackgroundWithCucumberApiTestCase_(self, testCase);
}

- (jboolean)isFirstStepAfterBackgroundWithCucumberApiTestStep:(CucumberApiTestStep *)testStep {
  return CucumberRuntimeFormatterJSONFormatter_isFirstStepAfterBackgroundWithCucumberApiTestStep_(self, testStep);
}

- (id<JavaUtilMap>)createTestStepWithCucumberApiTestStep:(CucumberApiTestStep *)testStep {
  return CucumberRuntimeFormatterJSONFormatter_createTestStepWithCucumberApiTestStep_(self, testStep);
}

- (id<JavaUtilMap>)createDocStringMapWithGherkinPicklesArgument:(id<GherkinPicklesArgument>)argument
           withCucumberRuntimeFormatterTestSourcesModel_AstNode:(CucumberRuntimeFormatterTestSourcesModel_AstNode *)astNode {
  return CucumberRuntimeFormatterJSONFormatter_createDocStringMapWithGherkinPicklesArgument_withCucumberRuntimeFormatterTestSourcesModel_AstNode_(self, argument, astNode);
}

- (id<JavaUtilList>)createDataTableListWithGherkinPicklesArgument:(id<GherkinPicklesArgument>)argument {
  return CucumberRuntimeFormatterJSONFormatter_createDataTableListWithGherkinPicklesArgument_(self, argument);
}

- (id<JavaUtilList>)createCellListWithGherkinPicklesPickleRow:(GherkinPicklesPickleRow *)row {
  return CucumberRuntimeFormatterJSONFormatter_createCellListWithGherkinPicklesPickleRow_(self, row);
}

- (id<JavaUtilMap>)createHookStepWithCucumberApiTestStep:(CucumberApiTestStep *)testStep {
  return CucumberRuntimeFormatterJSONFormatter_createHookStepWithCucumberApiTestStep_(self, testStep);
}

- (void)addHookStepToTestCaseMapWithJavaUtilMap:(id<JavaUtilMap>)currentStepOrHookMap
                        withCucumberApiHookType:(CucumberApiHookType *)hookType {
  CucumberRuntimeFormatterJSONFormatter_addHookStepToTestCaseMapWithJavaUtilMap_withCucumberApiHookType_(self, currentStepOrHookMap, hookType);
}

- (void)addOutputToHookMapWithNSString:(NSString *)text {
  CucumberRuntimeFormatterJSONFormatter_addOutputToHookMapWithNSString_(self, text);
}

- (void)addEmbeddingToHookMapWithByteArray:(IOSByteArray *)data
                              withNSString:(NSString *)mimeType {
  CucumberRuntimeFormatterJSONFormatter_addEmbeddingToHookMapWithByteArray_withNSString_(self, data, mimeType);
}

- (id<JavaUtilMap>)createEmbeddingMapWithByteArray:(IOSByteArray *)data
                                      withNSString:(NSString *)mimeType {
  return CucumberRuntimeFormatterJSONFormatter_createEmbeddingMapWithByteArray_withNSString_(self, data, mimeType);
}

- (id<JavaUtilMap>)createMatchMapWithCucumberApiTestStep:(CucumberApiTestStep *)testStep
                                   withCucumberApiResult:(CucumberApiResult *)result {
  return CucumberRuntimeFormatterJSONFormatter_createMatchMapWithCucumberApiTestStep_withCucumberApiResult_(self, testStep, result);
}

- (id<JavaUtilMap>)createResultMapWithCucumberApiResult:(CucumberApiResult *)result {
  return CucumberRuntimeFormatterJSONFormatter_createResultMapWithCucumberApiResult_(self, result);
}

- (void)dealloc {
  RELEASE_(currentFeatureFile_);
  RELEASE_(featureMaps_);
  RELEASE_(currentElementsList_);
  RELEASE_(currentElementMap_);
  RELEASE_(currentTestCaseMap_);
  RELEASE_(currentStepsList_);
  RELEASE_(currentStepOrHookMap_);
  RELEASE_(gson_);
  RELEASE_(out_);
  RELEASE_(testSources_);
  RELEASE_(testSourceReadHandler_);
  RELEASE_(caseStartedHandler_);
  RELEASE_(stepStartedHandler_);
  RELEASE_(stepFinishedHandler_);
  RELEASE_(runFinishedHandler_);
  RELEASE_(writeEventhandler_);
  RELEASE_(embedEventhandler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x2, 15, 16, -1, 17, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x2, 18, 16, -1, 17, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x2, 19, 16, -1, 17, -1, -1 },
    { NULL, "Z", 0x2, 20, 21, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x2, 22, 21, -1, 23, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x2, 24, 25, -1, 26, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, 27, 28, -1, 29, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, 30, 31, -1, 32, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x2, 33, 21, -1, 23, -1, -1 },
    { NULL, "V", 0x2, 34, 35, -1, 36, -1, -1 },
    { NULL, "V", 0x2, 37, 38, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 39, 40, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x2, 41, 40, -1, 42, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x2, 43, 44, -1, 45, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x2, 46, 47, -1, 48, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangAppendable:);
  methods[1].selector = @selector(setEventPublisherWithCucumberApiEventEventPublisher:);
  methods[2].selector = @selector(handleTestSourceReadWithCucumberApiEventTestSourceRead:);
  methods[3].selector = @selector(handleTestCaseStartedWithCucumberApiEventTestCaseStarted:);
  methods[4].selector = @selector(handleTestStepStartedWithCucumberApiEventTestStepStarted:);
  methods[5].selector = @selector(handleWriteWithCucumberApiEventWriteEvent:);
  methods[6].selector = @selector(handleEmbedWithCucumberApiEventEmbedEvent:);
  methods[7].selector = @selector(handleTestStepFinishedWithCucumberApiEventTestStepFinished:);
  methods[8].selector = @selector(finishReport);
  methods[9].selector = @selector(createFeatureMapWithCucumberApiTestCase:);
  methods[10].selector = @selector(createTestCaseWithCucumberApiTestCase:);
  methods[11].selector = @selector(createBackgroundWithCucumberApiTestCase:);
  methods[12].selector = @selector(isFirstStepAfterBackgroundWithCucumberApiTestStep:);
  methods[13].selector = @selector(createTestStepWithCucumberApiTestStep:);
  methods[14].selector = @selector(createDocStringMapWithGherkinPicklesArgument:withCucumberRuntimeFormatterTestSourcesModel_AstNode:);
  methods[15].selector = @selector(createDataTableListWithGherkinPicklesArgument:);
  methods[16].selector = @selector(createCellListWithGherkinPicklesPickleRow:);
  methods[17].selector = @selector(createHookStepWithCucumberApiTestStep:);
  methods[18].selector = @selector(addHookStepToTestCaseMapWithJavaUtilMap:withCucumberApiHookType:);
  methods[19].selector = @selector(addOutputToHookMapWithNSString:);
  methods[20].selector = @selector(addEmbeddingToHookMapWithByteArray:withNSString:);
  methods[21].selector = @selector(createEmbeddingMapWithByteArray:withNSString:);
  methods[22].selector = @selector(createMatchMapWithCucumberApiTestStep:withCucumberApiResult:);
  methods[23].selector = @selector(createResultMapWithCucumberApiResult:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "currentFeatureFile_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "featureMaps_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 49, -1 },
    { "currentElementsList_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 49, -1 },
    { "currentElementMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 50, -1 },
    { "currentTestCaseMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 50, -1 },
    { "currentStepsList_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 49, -1 },
    { "currentStepOrHookMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 50, -1 },
    { "gson_", "LGherkinDepsComGoogleGsonGson;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "out_", "LCucumberApiFormatterNiceAppendable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "testSources_", "LCucumberRuntimeFormatterTestSourcesModel;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "testSourceReadHandler_", "LCucumberApiEventEventHandler;", .constantValue.asLong = 0, 0x2, -1, -1, 51, -1 },
    { "caseStartedHandler_", "LCucumberApiEventEventHandler;", .constantValue.asLong = 0, 0x2, -1, -1, 52, -1 },
    { "stepStartedHandler_", "LCucumberApiEventEventHandler;", .constantValue.asLong = 0, 0x2, -1, -1, 53, -1 },
    { "stepFinishedHandler_", "LCucumberApiEventEventHandler;", .constantValue.asLong = 0, 0x2, -1, -1, 54, -1 },
    { "runFinishedHandler_", "LCucumberApiEventEventHandler;", .constantValue.asLong = 0, 0x2, -1, -1, 55, -1 },
    { "writeEventhandler_", "LCucumberApiEventEventHandler;", .constantValue.asLong = 0, 0x2, -1, -1, 56, -1 },
    { "embedEventhandler_", "LCucumberApiEventEventHandler;", .constantValue.asLong = 0, 0x2, -1, -1, 57, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangAppendable;", "setEventPublisher", "LCucumberApiEventEventPublisher;", "handleTestSourceRead", "LCucumberApiEventTestSourceRead;", "handleTestCaseStarted", "LCucumberApiEventTestCaseStarted;", "handleTestStepStarted", "LCucumberApiEventTestStepStarted;", "handleWrite", "LCucumberApiEventWriteEvent;", "handleEmbed", "LCucumberApiEventEmbedEvent;", "handleTestStepFinished", "LCucumberApiEventTestStepFinished;", "createFeatureMap", "LCucumberApiTestCase;", "(Lcucumber/api/TestCase;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "createTestCase", "createBackground", "isFirstStepAfterBackground", "LCucumberApiTestStep;", "createTestStep", "(Lcucumber/api/TestStep;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "createDocStringMap", "LGherkinPicklesArgument;LCucumberRuntimeFormatterTestSourcesModel_AstNode;", "(Lgherkin/pickles/Argument;Lcucumber/runtime/formatter/TestSourcesModel$AstNode;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "createDataTableList", "LGherkinPicklesArgument;", "(Lgherkin/pickles/Argument;)Ljava/util/List<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;>;", "createCellList", "LGherkinPicklesPickleRow;", "(Lgherkin/pickles/PickleRow;)Ljava/util/List<Ljava/lang/String;>;", "createHookStep", "addHookStepToTestCaseMap", "LJavaUtilMap;LCucumberApiHookType;", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;Lcucumber/api/HookType;)V", "addOutputToHookMap", "LNSString;", "addEmbeddingToHookMap", "[BLNSString;", "createEmbeddingMap", "([BLjava/lang/String;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "createMatchMap", "LCucumberApiTestStep;LCucumberApiResult;", "(Lcucumber/api/TestStep;Lcucumber/api/Result;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "createResultMap", "LCucumberApiResult;", "(Lcucumber/api/Result;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "Ljava/util/List<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;>;", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestSourceRead;>;", "Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestCaseStarted;>;", "Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestStepStarted;>;", "Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestStepFinished;>;", "Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestRunFinished;>;", "Lcucumber/api/event/EventHandler<Lcucumber/api/event/WriteEvent;>;", "Lcucumber/api/event/EventHandler<Lcucumber/api/event/EmbedEvent;>;" };
  static const J2ObjcClassInfo _CucumberRuntimeFormatterJSONFormatter = { "JSONFormatter", "cucumber.runtime.formatter", ptrTable, methods, fields, 7, 0x10, 24, 17, -1, -1, -1, -1, -1 };
  return &_CucumberRuntimeFormatterJSONFormatter;
}

@end

void CucumberRuntimeFormatterJSONFormatter_initWithJavaLangAppendable_(CucumberRuntimeFormatterJSONFormatter *self, id<JavaLangAppendable> outArg) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->featureMaps_, new_JavaUtilArrayList_init());
  JreStrongAssign(&self->gson_, [((GherkinDepsComGoogleGsonGsonBuilder *) nil_chk([create_GherkinDepsComGoogleGsonGsonBuilder_init() setPrettyPrinting])) create]);
  JreStrongAssignAndConsume(&self->testSources_, new_CucumberRuntimeFormatterTestSourcesModel_init());
  JreStrongAssignAndConsume(&self->testSourceReadHandler_, new_CucumberRuntimeFormatterJSONFormatter_1_initWithCucumberRuntimeFormatterJSONFormatter_(self));
  JreStrongAssignAndConsume(&self->caseStartedHandler_, new_CucumberRuntimeFormatterJSONFormatter_2_initWithCucumberRuntimeFormatterJSONFormatter_(self));
  JreStrongAssignAndConsume(&self->stepStartedHandler_, new_CucumberRuntimeFormatterJSONFormatter_3_initWithCucumberRuntimeFormatterJSONFormatter_(self));
  JreStrongAssignAndConsume(&self->stepFinishedHandler_, new_CucumberRuntimeFormatterJSONFormatter_4_initWithCucumberRuntimeFormatterJSONFormatter_(self));
  JreStrongAssignAndConsume(&self->runFinishedHandler_, new_CucumberRuntimeFormatterJSONFormatter_5_initWithCucumberRuntimeFormatterJSONFormatter_(self));
  JreStrongAssignAndConsume(&self->writeEventhandler_, new_CucumberRuntimeFormatterJSONFormatter_6_initWithCucumberRuntimeFormatterJSONFormatter_(self));
  JreStrongAssignAndConsume(&self->embedEventhandler_, new_CucumberRuntimeFormatterJSONFormatter_7_initWithCucumberRuntimeFormatterJSONFormatter_(self));
  JreStrongAssignAndConsume(&self->out_, new_CucumberApiFormatterNiceAppendable_initWithJavaLangAppendable_(outArg));
}

CucumberRuntimeFormatterJSONFormatter *new_CucumberRuntimeFormatterJSONFormatter_initWithJavaLangAppendable_(id<JavaLangAppendable> outArg) {
  J2OBJC_NEW_IMPL(CucumberRuntimeFormatterJSONFormatter, initWithJavaLangAppendable_, outArg)
}

CucumberRuntimeFormatterJSONFormatter *create_CucumberRuntimeFormatterJSONFormatter_initWithJavaLangAppendable_(id<JavaLangAppendable> outArg) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeFormatterJSONFormatter, initWithJavaLangAppendable_, outArg)
}

void CucumberRuntimeFormatterJSONFormatter_handleTestSourceReadWithCucumberApiEventTestSourceRead_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiEventTestSourceRead *event) {
  [((CucumberRuntimeFormatterTestSourcesModel *) nil_chk(self->testSources_)) addTestSourceReadEventWithNSString:((CucumberApiEventTestSourceRead *) nil_chk(event))->uri_ withCucumberApiEventTestSourceRead:event];
}

void CucumberRuntimeFormatterJSONFormatter_handleTestCaseStartedWithCucumberApiEventTestCaseStarted_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiEventTestCaseStarted *event) {
  if (self->currentFeatureFile_ == nil || ![self->currentFeatureFile_ isEqual:[((CucumberApiTestCase *) nil_chk(((CucumberApiEventTestCaseStarted *) nil_chk(event))->testCase_)) getUri]]) {
    JreStrongAssign(&self->currentFeatureFile_, [((CucumberApiTestCase *) nil_chk(((CucumberApiEventTestCaseStarted *) nil_chk(event))->testCase_)) getUri]);
    id<JavaUtilMap> currentFeatureMap = CucumberRuntimeFormatterJSONFormatter_createFeatureMapWithCucumberApiTestCase_(self, event->testCase_);
    [((id<JavaUtilList>) nil_chk(self->featureMaps_)) addWithId:currentFeatureMap];
    JreStrongAssign(&self->currentElementsList_, (id<JavaUtilList>) cast_check([((id<JavaUtilMap>) nil_chk(currentFeatureMap)) getWithId:@"elements"], JavaUtilList_class_()));
  }
  JreStrongAssign(&self->currentTestCaseMap_, CucumberRuntimeFormatterJSONFormatter_createTestCaseWithCucumberApiTestCase_(self, ((CucumberApiEventTestCaseStarted *) nil_chk(event))->testCase_));
  if ([((CucumberRuntimeFormatterTestSourcesModel *) nil_chk(self->testSources_)) hasBackgroundWithNSString:self->currentFeatureFile_ withInt:[((CucumberApiTestCase *) nil_chk(event->testCase_)) getLine]]) {
    JreStrongAssign(&self->currentElementMap_, CucumberRuntimeFormatterJSONFormatter_createBackgroundWithCucumberApiTestCase_(self, event->testCase_));
    [((id<JavaUtilList>) nil_chk(self->currentElementsList_)) addWithId:self->currentElementMap_];
  }
  else {
    JreStrongAssign(&self->currentElementMap_, self->currentTestCaseMap_);
  }
  [((id<JavaUtilList>) nil_chk(self->currentElementsList_)) addWithId:self->currentTestCaseMap_];
  JreStrongAssign(&self->currentStepsList_, (id<JavaUtilList>) cast_check([((id<JavaUtilMap>) nil_chk(self->currentElementMap_)) getWithId:@"steps"], JavaUtilList_class_()));
}

void CucumberRuntimeFormatterJSONFormatter_handleTestStepStartedWithCucumberApiEventTestStepStarted_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiEventTestStepStarted *event) {
  if (![((CucumberApiTestStep *) nil_chk(((CucumberApiEventTestStepStarted *) nil_chk(event))->testStep_)) isHook]) {
    if (CucumberRuntimeFormatterJSONFormatter_isFirstStepAfterBackgroundWithCucumberApiTestStep_(self, event->testStep_)) {
      JreStrongAssign(&self->currentElementMap_, self->currentTestCaseMap_);
      JreStrongAssign(&self->currentStepsList_, (id<JavaUtilList>) cast_check([((id<JavaUtilMap>) nil_chk(self->currentElementMap_)) getWithId:@"steps"], JavaUtilList_class_()));
    }
    JreStrongAssign(&self->currentStepOrHookMap_, CucumberRuntimeFormatterJSONFormatter_createTestStepWithCucumberApiTestStep_(self, event->testStep_));
    [((id<JavaUtilList>) nil_chk(self->currentStepsList_)) addWithId:self->currentStepOrHookMap_];
  }
  else {
    JreStrongAssign(&self->currentStepOrHookMap_, CucumberRuntimeFormatterJSONFormatter_createHookStepWithCucumberApiTestStep_(self, event->testStep_));
    CucumberRuntimeFormatterJSONFormatter_addHookStepToTestCaseMapWithJavaUtilMap_withCucumberApiHookType_(self, self->currentStepOrHookMap_, [event->testStep_ getHookType]);
  }
}

void CucumberRuntimeFormatterJSONFormatter_handleWriteWithCucumberApiEventWriteEvent_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiEventWriteEvent *event) {
  CucumberRuntimeFormatterJSONFormatter_addOutputToHookMapWithNSString_(self, ((CucumberApiEventWriteEvent *) nil_chk(event))->text_);
}

void CucumberRuntimeFormatterJSONFormatter_handleEmbedWithCucumberApiEventEmbedEvent_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiEventEmbedEvent *event) {
  CucumberRuntimeFormatterJSONFormatter_addEmbeddingToHookMapWithByteArray_withNSString_(self, ((CucumberApiEventEmbedEvent *) nil_chk(event))->data_, event->mimeType_);
}

void CucumberRuntimeFormatterJSONFormatter_handleTestStepFinishedWithCucumberApiEventTestStepFinished_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiEventTestStepFinished *event) {
  [((id<JavaUtilMap>) nil_chk(self->currentStepOrHookMap_)) putWithId:@"match" withId:CucumberRuntimeFormatterJSONFormatter_createMatchMapWithCucumberApiTestStep_withCucumberApiResult_(self, ((CucumberApiEventTestStepFinished *) nil_chk(event))->testStep_, event->result_)];
  [((id<JavaUtilMap>) nil_chk(self->currentStepOrHookMap_)) putWithId:@"result" withId:CucumberRuntimeFormatterJSONFormatter_createResultMapWithCucumberApiResult_(self, event->result_)];
}

void CucumberRuntimeFormatterJSONFormatter_finishReport(CucumberRuntimeFormatterJSONFormatter *self) {
  [((CucumberApiFormatterNiceAppendable *) nil_chk(self->out_)) appendWithJavaLangCharSequence:[((GherkinDepsComGoogleGsonGson *) nil_chk(self->gson_)) toJsonWithId:self->featureMaps_]];
  [self->out_ close];
}

id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createFeatureMapWithCucumberApiTestCase_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiTestCase *testCase) {
  id<JavaUtilMap> featureMap = create_JavaUtilHashMap_init();
  [featureMap putWithId:@"uri" withId:[((CucumberApiTestCase *) nil_chk(testCase)) getUri]];
  [featureMap putWithId:@"elements" withId:create_JavaUtilArrayList_init()];
  GherkinAstFeature *feature = [((CucumberRuntimeFormatterTestSourcesModel *) nil_chk(self->testSources_)) getFeatureWithNSString:[testCase getUri]];
  if (feature != nil) {
    [featureMap putWithId:@"keyword" withId:[feature getKeyword]];
    [featureMap putWithId:@"name" withId:[feature getName]];
    [featureMap putWithId:@"description" withId:[feature getDescription] != nil ? [feature getDescription] : @""];
    [featureMap putWithId:@"line" withId:JavaLangInteger_valueOfWithInt_([((GherkinAstLocation *) nil_chk([feature getLocation])) getLine])];
    [featureMap putWithId:@"id" withId:CucumberRuntimeFormatterTestSourcesModel_convertToIdWithNSString_([feature getName])];
    [featureMap putWithId:@"tags" withId:[feature getTags]];
  }
  return featureMap;
}

id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createTestCaseWithCucumberApiTestCase_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiTestCase *testCase) {
  id<JavaUtilMap> testCaseMap = create_JavaUtilHashMap_init();
  [testCaseMap putWithId:@"name" withId:[((CucumberApiTestCase *) nil_chk(testCase)) getName]];
  [testCaseMap putWithId:@"line" withId:JavaLangInteger_valueOfWithInt_([testCase getLine])];
  [testCaseMap putWithId:@"type" withId:@"scenario"];
  CucumberRuntimeFormatterTestSourcesModel_AstNode *astNode = [((CucumberRuntimeFormatterTestSourcesModel *) nil_chk(self->testSources_)) getAstNodeWithNSString:self->currentFeatureFile_ withInt:[testCase getLine]];
  if (astNode != nil) {
    [testCaseMap putWithId:@"id" withId:CucumberRuntimeFormatterTestSourcesModel_calculateIdWithCucumberRuntimeFormatterTestSourcesModel_AstNode_(astNode)];
    GherkinAstScenarioDefinition *scenarioDefinition = CucumberRuntimeFormatterTestSourcesModel_getScenarioDefinitionWithCucumberRuntimeFormatterTestSourcesModel_AstNode_(astNode);
    [testCaseMap putWithId:@"keyword" withId:[((GherkinAstScenarioDefinition *) nil_chk(scenarioDefinition)) getKeyword]];
    [testCaseMap putWithId:@"description" withId:[scenarioDefinition getDescription] != nil ? [scenarioDefinition getDescription] : @""];
  }
  [testCaseMap putWithId:@"steps" withId:create_JavaUtilArrayList_init()];
  if (![((id<JavaUtilList>) nil_chk([testCase getTags])) isEmpty]) {
    id<JavaUtilList> tagList = create_JavaUtilArrayList_init();
    for (GherkinPicklesPickleTag * __strong tag in nil_chk([testCase getTags])) {
      id<JavaUtilMap> tagMap = create_JavaUtilHashMap_init();
      [tagMap putWithId:@"name" withId:[((GherkinPicklesPickleTag *) nil_chk(tag)) getName]];
      [tagList addWithId:tagMap];
    }
    [testCaseMap putWithId:@"tags" withId:tagList];
  }
  return testCaseMap;
}

id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createBackgroundWithCucumberApiTestCase_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiTestCase *testCase) {
  CucumberRuntimeFormatterTestSourcesModel_AstNode *astNode = [((CucumberRuntimeFormatterTestSourcesModel *) nil_chk(self->testSources_)) getAstNodeWithNSString:self->currentFeatureFile_ withInt:[((CucumberApiTestCase *) nil_chk(testCase)) getLine]];
  if (astNode != nil) {
    GherkinAstBackground *background = CucumberRuntimeFormatterTestSourcesModel_getBackgroundForTestCaseWithCucumberRuntimeFormatterTestSourcesModel_AstNode_(astNode);
    id<JavaUtilMap> testCaseMap = create_JavaUtilHashMap_init();
    [testCaseMap putWithId:@"name" withId:[((GherkinAstBackground *) nil_chk(background)) getName]];
    [testCaseMap putWithId:@"line" withId:JavaLangInteger_valueOfWithInt_([((GherkinAstLocation *) nil_chk([background getLocation])) getLine])];
    [testCaseMap putWithId:@"type" withId:@"background"];
    [testCaseMap putWithId:@"keyword" withId:[background getKeyword]];
    [testCaseMap putWithId:@"description" withId:[background getDescription] != nil ? [background getDescription] : @""];
    [testCaseMap putWithId:@"steps" withId:create_JavaUtilArrayList_init()];
    return testCaseMap;
  }
  return nil;
}

jboolean CucumberRuntimeFormatterJSONFormatter_isFirstStepAfterBackgroundWithCucumberApiTestStep_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiTestStep *testStep) {
  CucumberRuntimeFormatterTestSourcesModel_AstNode *astNode = [((CucumberRuntimeFormatterTestSourcesModel *) nil_chk(self->testSources_)) getAstNodeWithNSString:self->currentFeatureFile_ withInt:[((CucumberApiTestStep *) nil_chk(testStep)) getStepLine]];
  if (astNode != nil) {
    if (self->currentElementMap_ != self->currentTestCaseMap_ && !CucumberRuntimeFormatterTestSourcesModel_isBackgroundStepWithCucumberRuntimeFormatterTestSourcesModel_AstNode_(astNode)) {
      return true;
    }
  }
  return false;
}

id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createTestStepWithCucumberApiTestStep_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiTestStep *testStep) {
  id<JavaUtilMap> stepMap = create_JavaUtilHashMap_init();
  [stepMap putWithId:@"name" withId:[((CucumberApiTestStep *) nil_chk(testStep)) getStepText]];
  [stepMap putWithId:@"line" withId:JavaLangInteger_valueOfWithInt_([testStep getStepLine])];
  CucumberRuntimeFormatterTestSourcesModel_AstNode *astNode = [((CucumberRuntimeFormatterTestSourcesModel *) nil_chk(self->testSources_)) getAstNodeWithNSString:self->currentFeatureFile_ withInt:[testStep getStepLine]];
  if (![((id<JavaUtilList>) nil_chk([testStep getStepArgument])) isEmpty]) {
    id<GherkinPicklesArgument> argument = [((id<JavaUtilList>) nil_chk([testStep getStepArgument])) getWithInt:0];
    if ([argument isKindOfClass:[GherkinPicklesPickleString class]]) {
      [stepMap putWithId:@"doc_string" withId:CucumberRuntimeFormatterJSONFormatter_createDocStringMapWithGherkinPicklesArgument_withCucumberRuntimeFormatterTestSourcesModel_AstNode_(self, argument, astNode)];
    }
    else if ([argument isKindOfClass:[GherkinPicklesPickleTable class]]) {
      [stepMap putWithId:@"rows" withId:CucumberRuntimeFormatterJSONFormatter_createDataTableListWithGherkinPicklesArgument_(self, argument)];
    }
  }
  if (astNode != nil) {
    GherkinAstStep *step = (GherkinAstStep *) cast_chk(astNode->node_, [GherkinAstStep class]);
    [stepMap putWithId:@"keyword" withId:[((GherkinAstStep *) nil_chk(step)) getKeyword]];
  }
  return stepMap;
}

id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createDocStringMapWithGherkinPicklesArgument_withCucumberRuntimeFormatterTestSourcesModel_AstNode_(CucumberRuntimeFormatterJSONFormatter *self, id<GherkinPicklesArgument> argument, CucumberRuntimeFormatterTestSourcesModel_AstNode *astNode) {
  id<JavaUtilMap> docStringMap = create_JavaUtilHashMap_init();
  GherkinPicklesPickleString *docString = ((GherkinPicklesPickleString *) cast_chk(argument, [GherkinPicklesPickleString class]));
  [docStringMap putWithId:@"value" withId:[((GherkinPicklesPickleString *) nil_chk(docString)) getContent]];
  [docStringMap putWithId:@"line" withId:JavaLangInteger_valueOfWithInt_([((GherkinPicklesPickleLocation *) nil_chk([docString getLocation])) getLine])];
  if (astNode != nil) {
    [docStringMap putWithId:@"content_type" withId:[((GherkinAstDocString *) nil_chk(((GherkinAstDocString *) cast_chk([((GherkinAstStep *) nil_chk(((GherkinAstStep *) cast_chk(astNode->node_, [GherkinAstStep class])))) getArgument], [GherkinAstDocString class])))) getContentType]];
  }
  return docStringMap;
}

id<JavaUtilList> CucumberRuntimeFormatterJSONFormatter_createDataTableListWithGherkinPicklesArgument_(CucumberRuntimeFormatterJSONFormatter *self, id<GherkinPicklesArgument> argument) {
  id<JavaUtilList> rowList = create_JavaUtilArrayList_init();
  for (GherkinPicklesPickleRow * __strong row in nil_chk([((GherkinPicklesPickleTable *) nil_chk(((GherkinPicklesPickleTable *) cast_chk(argument, [GherkinPicklesPickleTable class])))) getRows])) {
    id<JavaUtilMap> rowMap = create_JavaUtilHashMap_init();
    [rowMap putWithId:@"cells" withId:CucumberRuntimeFormatterJSONFormatter_createCellListWithGherkinPicklesPickleRow_(self, row)];
    [rowList addWithId:rowMap];
  }
  return rowList;
}

id<JavaUtilList> CucumberRuntimeFormatterJSONFormatter_createCellListWithGherkinPicklesPickleRow_(CucumberRuntimeFormatterJSONFormatter *self, GherkinPicklesPickleRow *row) {
  id<JavaUtilList> cells = create_JavaUtilArrayList_init();
  for (GherkinPicklesPickleCell * __strong cell in nil_chk([((GherkinPicklesPickleRow *) nil_chk(row)) getCells])) {
    [cells addWithId:[((GherkinPicklesPickleCell *) nil_chk(cell)) getValue]];
  }
  return cells;
}

id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createHookStepWithCucumberApiTestStep_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiTestStep *testStep) {
  return create_JavaUtilHashMap_init();
}

void CucumberRuntimeFormatterJSONFormatter_addHookStepToTestCaseMapWithJavaUtilMap_withCucumberApiHookType_(CucumberRuntimeFormatterJSONFormatter *self, id<JavaUtilMap> currentStepOrHookMap, CucumberApiHookType *hookType) {
  if (![((id<JavaUtilMap>) nil_chk(self->currentTestCaseMap_)) containsKeyWithId:[((CucumberApiHookType *) nil_chk(hookType)) description]]) {
    [((id<JavaUtilMap>) nil_chk(self->currentTestCaseMap_)) putWithId:[hookType description] withId:create_JavaUtilArrayList_init()];
  }
  [((id<JavaUtilList>) nil_chk(((id<JavaUtilList>) cast_check([((id<JavaUtilMap>) nil_chk(self->currentTestCaseMap_)) getWithId:[hookType description]], JavaUtilList_class_())))) addWithId:currentStepOrHookMap];
}

void CucumberRuntimeFormatterJSONFormatter_addOutputToHookMapWithNSString_(CucumberRuntimeFormatterJSONFormatter *self, NSString *text) {
  if (![((id<JavaUtilMap>) nil_chk(self->currentStepOrHookMap_)) containsKeyWithId:@"output"]) {
    [((id<JavaUtilMap>) nil_chk(self->currentStepOrHookMap_)) putWithId:@"output" withId:create_JavaUtilArrayList_init()];
  }
  [((id<JavaUtilList>) nil_chk(((id<JavaUtilList>) cast_check([((id<JavaUtilMap>) nil_chk(self->currentStepOrHookMap_)) getWithId:@"output"], JavaUtilList_class_())))) addWithId:text];
}

void CucumberRuntimeFormatterJSONFormatter_addEmbeddingToHookMapWithByteArray_withNSString_(CucumberRuntimeFormatterJSONFormatter *self, IOSByteArray *data, NSString *mimeType) {
  if (![((id<JavaUtilMap>) nil_chk(self->currentStepOrHookMap_)) containsKeyWithId:@"embeddings"]) {
    [((id<JavaUtilMap>) nil_chk(self->currentStepOrHookMap_)) putWithId:@"embeddings" withId:create_JavaUtilArrayList_init()];
  }
  id<JavaUtilMap> embedMap = CucumberRuntimeFormatterJSONFormatter_createEmbeddingMapWithByteArray_withNSString_(self, data, mimeType);
  [((id<JavaUtilList>) nil_chk(((id<JavaUtilList>) cast_check([((id<JavaUtilMap>) nil_chk(self->currentStepOrHookMap_)) getWithId:@"embeddings"], JavaUtilList_class_())))) addWithId:embedMap];
}

id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createEmbeddingMapWithByteArray_withNSString_(CucumberRuntimeFormatterJSONFormatter *self, IOSByteArray *data, NSString *mimeType) {
  id<JavaUtilMap> embedMap = create_JavaUtilHashMap_init();
  [embedMap putWithId:@"mime_type" withId:mimeType];
  [embedMap putWithId:@"data" withId:GherkinDepsNetIharderBase64_encodeBytesWithByteArray_(data)];
  return embedMap;
}

id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createMatchMapWithCucumberApiTestStep_withCucumberApiResult_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiTestStep *testStep, CucumberApiResult *result) {
  id<JavaUtilMap> matchMap = create_JavaUtilHashMap_init();
  if (![((id<JavaUtilList>) nil_chk([((CucumberApiTestStep *) nil_chk(testStep)) getDefinitionArgument])) isEmpty]) {
    id<JavaUtilList> argumentList = create_JavaUtilArrayList_init();
    for (CucumberRuntimeArgument * __strong argument in nil_chk([testStep getDefinitionArgument])) {
      id<JavaUtilMap> argumentMap = create_JavaUtilHashMap_init();
      [argumentMap putWithId:@"val" withId:[((CucumberRuntimeArgument *) nil_chk(argument)) getVal]];
      [argumentMap putWithId:@"offset" withId:[argument getOffset]];
      [argumentList addWithId:argumentMap];
    }
    [matchMap putWithId:@"arguments" withId:argumentList];
  }
  if (![((CucumberApiResult *) nil_chk(result)) isWithCucumberApiResult_Type:JreLoadEnum(CucumberApiResult_Type, UNDEFINED)]) {
    [matchMap putWithId:@"location" withId:[testStep getCodeLocation]];
  }
  return matchMap;
}

id<JavaUtilMap> CucumberRuntimeFormatterJSONFormatter_createResultMapWithCucumberApiResult_(CucumberRuntimeFormatterJSONFormatter *self, CucumberApiResult *result) {
  id<JavaUtilMap> resultMap = create_JavaUtilHashMap_init();
  [resultMap putWithId:@"status" withId:[((CucumberApiResult_Type *) nil_chk([((CucumberApiResult *) nil_chk(result)) getStatus])) lowerCaseName]];
  if ([result getErrorMessage] != nil) {
    [resultMap putWithId:@"error_message" withId:[result getErrorMessage]];
  }
  if ([result getDuration] != nil && [((JavaLangLong *) nil_chk([result getDuration])) longLongValue] != 0) {
    [resultMap putWithId:@"duration" withId:[result getDuration]];
  }
  return resultMap;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeFormatterJSONFormatter)

@implementation CucumberRuntimeFormatterJSONFormatter_1

- (instancetype)initWithCucumberRuntimeFormatterJSONFormatter:(CucumberRuntimeFormatterJSONFormatter *)outer$ {
  CucumberRuntimeFormatterJSONFormatter_1_initWithCucumberRuntimeFormatterJSONFormatter_(self, outer$);
  return self;
}

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestSourceRead *)event {
  CucumberRuntimeFormatterJSONFormatter_handleTestSourceReadWithCucumberApiEventTestSourceRead_(this$0_, event);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCucumberRuntimeFormatterJSONFormatter:);
  methods[1].selector = @selector(receiveWithCucumberApiEventEvent:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberRuntimeFormatterJSONFormatter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "receive", "LCucumberApiEventTestSourceRead;", "LCucumberRuntimeFormatterJSONFormatter;", "Ljava/lang/Object;Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestSourceRead;>;" };
  static const J2ObjcClassInfo _CucumberRuntimeFormatterJSONFormatter_1 = { "", "cucumber.runtime.formatter", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, -1, 3, -1 };
  return &_CucumberRuntimeFormatterJSONFormatter_1;
}

@end

void CucumberRuntimeFormatterJSONFormatter_1_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter_1 *self, CucumberRuntimeFormatterJSONFormatter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

CucumberRuntimeFormatterJSONFormatter_1 *new_CucumberRuntimeFormatterJSONFormatter_1_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) {
  J2OBJC_NEW_IMPL(CucumberRuntimeFormatterJSONFormatter_1, initWithCucumberRuntimeFormatterJSONFormatter_, outer$)
}

CucumberRuntimeFormatterJSONFormatter_1 *create_CucumberRuntimeFormatterJSONFormatter_1_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeFormatterJSONFormatter_1, initWithCucumberRuntimeFormatterJSONFormatter_, outer$)
}

@implementation CucumberRuntimeFormatterJSONFormatter_2

- (instancetype)initWithCucumberRuntimeFormatterJSONFormatter:(CucumberRuntimeFormatterJSONFormatter *)outer$ {
  CucumberRuntimeFormatterJSONFormatter_2_initWithCucumberRuntimeFormatterJSONFormatter_(self, outer$);
  return self;
}

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestCaseStarted *)event {
  CucumberRuntimeFormatterJSONFormatter_handleTestCaseStartedWithCucumberApiEventTestCaseStarted_(this$0_, event);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCucumberRuntimeFormatterJSONFormatter:);
  methods[1].selector = @selector(receiveWithCucumberApiEventEvent:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberRuntimeFormatterJSONFormatter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "receive", "LCucumberApiEventTestCaseStarted;", "LCucumberRuntimeFormatterJSONFormatter;", "Ljava/lang/Object;Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestCaseStarted;>;" };
  static const J2ObjcClassInfo _CucumberRuntimeFormatterJSONFormatter_2 = { "", "cucumber.runtime.formatter", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, -1, 3, -1 };
  return &_CucumberRuntimeFormatterJSONFormatter_2;
}

@end

void CucumberRuntimeFormatterJSONFormatter_2_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter_2 *self, CucumberRuntimeFormatterJSONFormatter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

CucumberRuntimeFormatterJSONFormatter_2 *new_CucumberRuntimeFormatterJSONFormatter_2_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) {
  J2OBJC_NEW_IMPL(CucumberRuntimeFormatterJSONFormatter_2, initWithCucumberRuntimeFormatterJSONFormatter_, outer$)
}

CucumberRuntimeFormatterJSONFormatter_2 *create_CucumberRuntimeFormatterJSONFormatter_2_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeFormatterJSONFormatter_2, initWithCucumberRuntimeFormatterJSONFormatter_, outer$)
}

@implementation CucumberRuntimeFormatterJSONFormatter_3

- (instancetype)initWithCucumberRuntimeFormatterJSONFormatter:(CucumberRuntimeFormatterJSONFormatter *)outer$ {
  CucumberRuntimeFormatterJSONFormatter_3_initWithCucumberRuntimeFormatterJSONFormatter_(self, outer$);
  return self;
}

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestStepStarted *)event {
  CucumberRuntimeFormatterJSONFormatter_handleTestStepStartedWithCucumberApiEventTestStepStarted_(this$0_, event);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCucumberRuntimeFormatterJSONFormatter:);
  methods[1].selector = @selector(receiveWithCucumberApiEventEvent:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberRuntimeFormatterJSONFormatter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "receive", "LCucumberApiEventTestStepStarted;", "LCucumberRuntimeFormatterJSONFormatter;", "Ljava/lang/Object;Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestStepStarted;>;" };
  static const J2ObjcClassInfo _CucumberRuntimeFormatterJSONFormatter_3 = { "", "cucumber.runtime.formatter", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, -1, 3, -1 };
  return &_CucumberRuntimeFormatterJSONFormatter_3;
}

@end

void CucumberRuntimeFormatterJSONFormatter_3_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter_3 *self, CucumberRuntimeFormatterJSONFormatter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

CucumberRuntimeFormatterJSONFormatter_3 *new_CucumberRuntimeFormatterJSONFormatter_3_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) {
  J2OBJC_NEW_IMPL(CucumberRuntimeFormatterJSONFormatter_3, initWithCucumberRuntimeFormatterJSONFormatter_, outer$)
}

CucumberRuntimeFormatterJSONFormatter_3 *create_CucumberRuntimeFormatterJSONFormatter_3_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeFormatterJSONFormatter_3, initWithCucumberRuntimeFormatterJSONFormatter_, outer$)
}

@implementation CucumberRuntimeFormatterJSONFormatter_4

- (instancetype)initWithCucumberRuntimeFormatterJSONFormatter:(CucumberRuntimeFormatterJSONFormatter *)outer$ {
  CucumberRuntimeFormatterJSONFormatter_4_initWithCucumberRuntimeFormatterJSONFormatter_(self, outer$);
  return self;
}

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestStepFinished *)event {
  CucumberRuntimeFormatterJSONFormatter_handleTestStepFinishedWithCucumberApiEventTestStepFinished_(this$0_, event);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCucumberRuntimeFormatterJSONFormatter:);
  methods[1].selector = @selector(receiveWithCucumberApiEventEvent:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberRuntimeFormatterJSONFormatter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "receive", "LCucumberApiEventTestStepFinished;", "LCucumberRuntimeFormatterJSONFormatter;", "Ljava/lang/Object;Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestStepFinished;>;" };
  static const J2ObjcClassInfo _CucumberRuntimeFormatterJSONFormatter_4 = { "", "cucumber.runtime.formatter", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, -1, 3, -1 };
  return &_CucumberRuntimeFormatterJSONFormatter_4;
}

@end

void CucumberRuntimeFormatterJSONFormatter_4_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter_4 *self, CucumberRuntimeFormatterJSONFormatter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

CucumberRuntimeFormatterJSONFormatter_4 *new_CucumberRuntimeFormatterJSONFormatter_4_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) {
  J2OBJC_NEW_IMPL(CucumberRuntimeFormatterJSONFormatter_4, initWithCucumberRuntimeFormatterJSONFormatter_, outer$)
}

CucumberRuntimeFormatterJSONFormatter_4 *create_CucumberRuntimeFormatterJSONFormatter_4_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeFormatterJSONFormatter_4, initWithCucumberRuntimeFormatterJSONFormatter_, outer$)
}

@implementation CucumberRuntimeFormatterJSONFormatter_5

- (instancetype)initWithCucumberRuntimeFormatterJSONFormatter:(CucumberRuntimeFormatterJSONFormatter *)outer$ {
  CucumberRuntimeFormatterJSONFormatter_5_initWithCucumberRuntimeFormatterJSONFormatter_(self, outer$);
  return self;
}

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventTestRunFinished *)event {
  CucumberRuntimeFormatterJSONFormatter_finishReport(this$0_);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCucumberRuntimeFormatterJSONFormatter:);
  methods[1].selector = @selector(receiveWithCucumberApiEventEvent:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberRuntimeFormatterJSONFormatter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "receive", "LCucumberApiEventTestRunFinished;", "LCucumberRuntimeFormatterJSONFormatter;", "Ljava/lang/Object;Lcucumber/api/event/EventHandler<Lcucumber/api/event/TestRunFinished;>;" };
  static const J2ObjcClassInfo _CucumberRuntimeFormatterJSONFormatter_5 = { "", "cucumber.runtime.formatter", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, -1, 3, -1 };
  return &_CucumberRuntimeFormatterJSONFormatter_5;
}

@end

void CucumberRuntimeFormatterJSONFormatter_5_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter_5 *self, CucumberRuntimeFormatterJSONFormatter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

CucumberRuntimeFormatterJSONFormatter_5 *new_CucumberRuntimeFormatterJSONFormatter_5_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) {
  J2OBJC_NEW_IMPL(CucumberRuntimeFormatterJSONFormatter_5, initWithCucumberRuntimeFormatterJSONFormatter_, outer$)
}

CucumberRuntimeFormatterJSONFormatter_5 *create_CucumberRuntimeFormatterJSONFormatter_5_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeFormatterJSONFormatter_5, initWithCucumberRuntimeFormatterJSONFormatter_, outer$)
}

@implementation CucumberRuntimeFormatterJSONFormatter_6

- (instancetype)initWithCucumberRuntimeFormatterJSONFormatter:(CucumberRuntimeFormatterJSONFormatter *)outer$ {
  CucumberRuntimeFormatterJSONFormatter_6_initWithCucumberRuntimeFormatterJSONFormatter_(self, outer$);
  return self;
}

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventWriteEvent *)event {
  CucumberRuntimeFormatterJSONFormatter_handleWriteWithCucumberApiEventWriteEvent_(this$0_, event);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCucumberRuntimeFormatterJSONFormatter:);
  methods[1].selector = @selector(receiveWithCucumberApiEventEvent:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberRuntimeFormatterJSONFormatter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "receive", "LCucumberApiEventWriteEvent;", "LCucumberRuntimeFormatterJSONFormatter;", "Ljava/lang/Object;Lcucumber/api/event/EventHandler<Lcucumber/api/event/WriteEvent;>;" };
  static const J2ObjcClassInfo _CucumberRuntimeFormatterJSONFormatter_6 = { "", "cucumber.runtime.formatter", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, -1, 3, -1 };
  return &_CucumberRuntimeFormatterJSONFormatter_6;
}

@end

void CucumberRuntimeFormatterJSONFormatter_6_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter_6 *self, CucumberRuntimeFormatterJSONFormatter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

CucumberRuntimeFormatterJSONFormatter_6 *new_CucumberRuntimeFormatterJSONFormatter_6_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) {
  J2OBJC_NEW_IMPL(CucumberRuntimeFormatterJSONFormatter_6, initWithCucumberRuntimeFormatterJSONFormatter_, outer$)
}

CucumberRuntimeFormatterJSONFormatter_6 *create_CucumberRuntimeFormatterJSONFormatter_6_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeFormatterJSONFormatter_6, initWithCucumberRuntimeFormatterJSONFormatter_, outer$)
}

@implementation CucumberRuntimeFormatterJSONFormatter_7

- (instancetype)initWithCucumberRuntimeFormatterJSONFormatter:(CucumberRuntimeFormatterJSONFormatter *)outer$ {
  CucumberRuntimeFormatterJSONFormatter_7_initWithCucumberRuntimeFormatterJSONFormatter_(self, outer$);
  return self;
}

- (void)receiveWithCucumberApiEventEvent:(CucumberApiEventEmbedEvent *)event {
  CucumberRuntimeFormatterJSONFormatter_handleEmbedWithCucumberApiEventEmbedEvent_(this$0_, event);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithCucumberRuntimeFormatterJSONFormatter:);
  methods[1].selector = @selector(receiveWithCucumberApiEventEvent:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LCucumberRuntimeFormatterJSONFormatter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "receive", "LCucumberApiEventEmbedEvent;", "LCucumberRuntimeFormatterJSONFormatter;", "Ljava/lang/Object;Lcucumber/api/event/EventHandler<Lcucumber/api/event/EmbedEvent;>;" };
  static const J2ObjcClassInfo _CucumberRuntimeFormatterJSONFormatter_7 = { "", "cucumber.runtime.formatter", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, -1, 3, -1 };
  return &_CucumberRuntimeFormatterJSONFormatter_7;
}

@end

void CucumberRuntimeFormatterJSONFormatter_7_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter_7 *self, CucumberRuntimeFormatterJSONFormatter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

CucumberRuntimeFormatterJSONFormatter_7 *new_CucumberRuntimeFormatterJSONFormatter_7_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) {
  J2OBJC_NEW_IMPL(CucumberRuntimeFormatterJSONFormatter_7, initWithCucumberRuntimeFormatterJSONFormatter_, outer$)
}

CucumberRuntimeFormatterJSONFormatter_7 *create_CucumberRuntimeFormatterJSONFormatter_7_initWithCucumberRuntimeFormatterJSONFormatter_(CucumberRuntimeFormatterJSONFormatter *outer$) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeFormatterJSONFormatter_7, initWithCucumberRuntimeFormatterJSONFormatter_, outer$)
}
