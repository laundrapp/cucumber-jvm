//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/DefaultSummaryPrinter.java
//

#include "J2ObjC_source.h"
#include "cucumber/runtime/DefaultSummaryPrinter.h"
#include "cucumber/runtime/Runtime.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/util/List.h"

@interface CCBRDefaultSummaryPrinter () {
 @public
  JavaIoPrintStream *out_;
}

- (void)printStatsWithCCBRRuntime:(CCBRRuntime *)runtime;

- (void)printErrorsWithCCBRRuntime:(CCBRRuntime *)runtime;

- (void)printSnippetsWithCCBRRuntime:(CCBRRuntime *)runtime;

@end

J2OBJC_FIELD_SETTER(CCBRDefaultSummaryPrinter, out_, JavaIoPrintStream *)

__attribute__((unused)) static void CCBRDefaultSummaryPrinter_printStatsWithCCBRRuntime_(CCBRDefaultSummaryPrinter *self, CCBRRuntime *runtime);

__attribute__((unused)) static void CCBRDefaultSummaryPrinter_printErrorsWithCCBRRuntime_(CCBRDefaultSummaryPrinter *self, CCBRRuntime *runtime);

__attribute__((unused)) static void CCBRDefaultSummaryPrinter_printSnippetsWithCCBRRuntime_(CCBRDefaultSummaryPrinter *self, CCBRRuntime *runtime);

@implementation CCBRDefaultSummaryPrinter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CCBRDefaultSummaryPrinter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)printWithCCBRRuntime:(CCBRRuntime *)runtime {
  [((JavaIoPrintStream *) nil_chk(out_)) println];
  CCBRDefaultSummaryPrinter_printStatsWithCCBRRuntime_(self, runtime);
  [out_ println];
  CCBRDefaultSummaryPrinter_printErrorsWithCCBRRuntime_(self, runtime);
  CCBRDefaultSummaryPrinter_printSnippetsWithCCBRRuntime_(self, runtime);
}

- (void)printStatsWithCCBRRuntime:(CCBRRuntime *)runtime {
  CCBRDefaultSummaryPrinter_printStatsWithCCBRRuntime_(self, runtime);
}

- (void)printErrorsWithCCBRRuntime:(CCBRRuntime *)runtime {
  CCBRDefaultSummaryPrinter_printErrorsWithCCBRRuntime_(self, runtime);
}

- (void)printSnippetsWithCCBRRuntime:(CCBRRuntime *)runtime {
  CCBRDefaultSummaryPrinter_printSnippetsWithCCBRRuntime_(self, runtime);
}

- (void)dealloc {
  RELEASE_(out_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(printWithCCBRRuntime:);
  methods[2].selector = @selector(printStatsWithCCBRRuntime:);
  methods[3].selector = @selector(printErrorsWithCCBRRuntime:);
  methods[4].selector = @selector(printSnippetsWithCCBRRuntime:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "out_", "LJavaIoPrintStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "print", "LCCBRRuntime;", "printStats", "printErrors", "printSnippets" };
  static const J2ObjcClassInfo _CCBRDefaultSummaryPrinter = { "DefaultSummaryPrinter", "cucumber.runtime", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, -1 };
  return &_CCBRDefaultSummaryPrinter;
}

@end

void CCBRDefaultSummaryPrinter_init(CCBRDefaultSummaryPrinter *self) {
  NSObject_init(self);
  JreStrongAssign(&self->out_, JreLoadStatic(JavaLangSystem, out));
}

CCBRDefaultSummaryPrinter *new_CCBRDefaultSummaryPrinter_init() {
  J2OBJC_NEW_IMPL(CCBRDefaultSummaryPrinter, init)
}

CCBRDefaultSummaryPrinter *create_CCBRDefaultSummaryPrinter_init() {
  J2OBJC_CREATE_IMPL(CCBRDefaultSummaryPrinter, init)
}

void CCBRDefaultSummaryPrinter_printStatsWithCCBRRuntime_(CCBRDefaultSummaryPrinter *self, CCBRRuntime *runtime) {
  [((CCBRRuntime *) nil_chk(runtime)) printStatsWithJavaIoPrintStream:self->out_];
}

void CCBRDefaultSummaryPrinter_printErrorsWithCCBRRuntime_(CCBRDefaultSummaryPrinter *self, CCBRRuntime *runtime) {
  for (JavaLangThrowable * __strong error in nil_chk([((CCBRRuntime *) nil_chk(runtime)) getErrors])) {
    [((JavaLangThrowable *) nil_chk(error)) printStackTraceWithJavaIoPrintStream:self->out_];
    [((JavaIoPrintStream *) nil_chk(self->out_)) println];
  }
}

void CCBRDefaultSummaryPrinter_printSnippetsWithCCBRRuntime_(CCBRDefaultSummaryPrinter *self, CCBRRuntime *runtime) {
  id<JavaUtilList> snippets = [((CCBRRuntime *) nil_chk(runtime)) getSnippets];
  if (![((id<JavaUtilList>) nil_chk(snippets)) isEmpty]) {
    [((JavaIoPrintStream *) nil_chk(self->out_)) appendWithJavaLangCharSequence:@"\n"];
    [self->out_ printlnWithNSString:@"You can implement missing steps with the snippets below:"];
    [self->out_ println];
    for (NSString * __strong snippet in snippets) {
      [self->out_ printlnWithNSString:snippet];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CCBRDefaultSummaryPrinter)
