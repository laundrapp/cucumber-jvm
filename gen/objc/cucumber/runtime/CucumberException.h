//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/CucumberException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRuntimeCucumberException")
#ifdef RESTRICT_CucumberRuntimeCucumberException
#define INCLUDE_ALL_CucumberRuntimeCucumberException 0
#else
#define INCLUDE_ALL_CucumberRuntimeCucumberException 1
#endif
#undef RESTRICT_CucumberRuntimeCucumberException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBRCucumberException_) && (INCLUDE_ALL_CucumberRuntimeCucumberException || defined(INCLUDE_CCBRCucumberException))
#define CCBRCucumberException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class JavaLangThrowable;

@interface CCBRCucumberException : JavaLangRuntimeException

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)message;

- (instancetype __nonnull)initWithNSString:(NSString *)message
                     withJavaLangThrowable:(JavaLangThrowable *)e;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)e;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBRCucumberException)

FOUNDATION_EXPORT void CCBRCucumberException_initWithNSString_(CCBRCucumberException *self, NSString *message);

FOUNDATION_EXPORT CCBRCucumberException *new_CCBRCucumberException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBRCucumberException *create_CCBRCucumberException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void CCBRCucumberException_initWithNSString_withJavaLangThrowable_(CCBRCucumberException *self, NSString *message, JavaLangThrowable *e);

FOUNDATION_EXPORT CCBRCucumberException *new_CCBRCucumberException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *e) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBRCucumberException *create_CCBRCucumberException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *e);

FOUNDATION_EXPORT void CCBRCucumberException_initWithJavaLangThrowable_(CCBRCucumberException *self, JavaLangThrowable *e);

FOUNDATION_EXPORT CCBRCucumberException *new_CCBRCucumberException_initWithJavaLangThrowable_(JavaLangThrowable *e) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBRCucumberException *create_CCBRCucumberException_initWithJavaLangThrowable_(JavaLangThrowable *e);

J2OBJC_TYPE_LITERAL_HEADER(CCBRCucumberException)

@compatibility_alias CucumberRuntimeCucumberException CCBRCucumberException;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRuntimeCucumberException")
