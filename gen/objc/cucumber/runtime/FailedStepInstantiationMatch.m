//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/runtime/FailedStepInstantiationMatch.java
//

#include "J2ObjC_source.h"
#include "cucumber/api/Scenario.h"
#include "cucumber/runtime/FailedStepInstantiationMatch.h"
#include "cucumber/runtime/Match.h"
#include "cucumber/runtime/NoStepDefinition.h"
#include "cucumber/runtime/StepDefinitionMatch.h"
#include "gherkin/pickles/PickleStep.h"
#include "java/lang/StackTraceElement.h"
#include "java/lang/Throwable.h"
#include "java/util/Collections.h"
#include "java/util/List.h"

@interface CucumberRuntimeFailedStepInstantiationMatch () {
 @public
  JavaLangThrowable *throwable_;
}

@end

J2OBJC_FIELD_SETTER(CucumberRuntimeFailedStepInstantiationMatch, throwable_, JavaLangThrowable *)

@implementation CucumberRuntimeFailedStepInstantiationMatch

- (instancetype __nonnull)initWithNSString:(NSString *)uri
              withGherkinPicklesPickleStep:(GherkinPicklesPickleStep *)step
                     withJavaLangThrowable:(JavaLangThrowable *)throwable {
  CucumberRuntimeFailedStepInstantiationMatch_initWithNSString_withGherkinPicklesPickleStep_withJavaLangThrowable_(self, uri, step, throwable);
  return self;
}

- (void)runStepWithNSString:(NSString *)language
    withCucumberApiScenario:(id<CucumberApiScenario>)scenario {
  @throw nil_chk(throwable_);
}

- (void)dryRunStepWithNSString:(NSString *)language
       withCucumberApiScenario:(id<CucumberApiScenario>)scenario {
  [self runStepWithNSString:language withCucumberApiScenario:scenario];
}

- (CucumberRuntimeMatch *)getMatch {
  return JreLoadStatic(CucumberRuntimeMatch, UNDEFINED);
}

- (void)dealloc {
  RELEASE_(throwable_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 2, 3, -1, -1, -1 },
    { NULL, "LCucumberRuntimeMatch;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withGherkinPicklesPickleStep:withJavaLangThrowable:);
  methods[1].selector = @selector(runStepWithNSString:withCucumberApiScenario:);
  methods[2].selector = @selector(dryRunStepWithNSString:withCucumberApiScenario:);
  methods[3].selector = @selector(getMatch);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "throwable_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LGherkinPicklesPickleStep;LJavaLangThrowable;", "runStep", "LNSString;LCucumberApiScenario;", "LJavaLangThrowable;", "dryRunStep" };
  static const J2ObjcClassInfo _CucumberRuntimeFailedStepInstantiationMatch = { "FailedStepInstantiationMatch", "cucumber.runtime", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_CucumberRuntimeFailedStepInstantiationMatch;
}

@end

void CucumberRuntimeFailedStepInstantiationMatch_initWithNSString_withGherkinPicklesPickleStep_withJavaLangThrowable_(CucumberRuntimeFailedStepInstantiationMatch *self, NSString *uri, GherkinPicklesPickleStep *step, JavaLangThrowable *throwable) {
  CucumberRuntimeStepDefinitionMatch_initWithJavaUtilList_withCucumberRuntimeStepDefinition_withNSString_withGherkinPicklesPickleStep_withCucumberRuntimeXstreamLocalizedXStreams_(self, JavaUtilCollections_emptyList(), create_CucumberRuntimeNoStepDefinition_init(), uri, step, nil);
  JreStrongAssign(&self->throwable_, [self removeFrameworkFramesAndAppendStepLocationWithJavaLangThrowable:throwable withJavaLangStackTraceElement:[self getStepLocation]]);
}

CucumberRuntimeFailedStepInstantiationMatch *new_CucumberRuntimeFailedStepInstantiationMatch_initWithNSString_withGherkinPicklesPickleStep_withJavaLangThrowable_(NSString *uri, GherkinPicklesPickleStep *step, JavaLangThrowable *throwable) {
  J2OBJC_NEW_IMPL(CucumberRuntimeFailedStepInstantiationMatch, initWithNSString_withGherkinPicklesPickleStep_withJavaLangThrowable_, uri, step, throwable)
}

CucumberRuntimeFailedStepInstantiationMatch *create_CucumberRuntimeFailedStepInstantiationMatch_initWithNSString_withGherkinPicklesPickleStep_withJavaLangThrowable_(NSString *uri, GherkinPicklesPickleStep *step, JavaLangThrowable *throwable) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeFailedStepInstantiationMatch, initWithNSString_withGherkinPicklesPickleStep_withJavaLangThrowable_, uri, step, throwable)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeFailedStepInstantiationMatch)
