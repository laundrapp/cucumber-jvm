//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/table/TableDiffException.java
//

#include "J2ObjC_source.h"
#include "cucumber/api/DataTable.h"
#include "cucumber/runtime/table/TableDiffException.h"
#include "java/lang/RuntimeException.h"

@interface CCBRTableDiffException () {
 @public
  CCBDataTable *from_;
  CCBDataTable *to_;
  CCBDataTable *diff_;
}

@end

J2OBJC_FIELD_SETTER(CCBRTableDiffException, from_, CCBDataTable *)
J2OBJC_FIELD_SETTER(CCBRTableDiffException, to_, CCBDataTable *)
J2OBJC_FIELD_SETTER(CCBRTableDiffException, diff_, CCBDataTable *)

@implementation CCBRTableDiffException

- (instancetype __nonnull)initWithCCBDataTable:(CCBDataTable *)from
                              withCCBDataTable:(CCBDataTable *)to
                              withCCBDataTable:(CCBDataTable *)diff {
  CCBRTableDiffException_initWithCCBDataTable_withCCBDataTable_withCCBDataTable_(self, from, to, diff);
  return self;
}

- (CCBDataTable *)getFrom {
  return from_;
}

- (CCBDataTable *)getTo {
  return to_;
}

- (CCBDataTable *)getDiff {
  return diff_;
}

- (void)dealloc {
  RELEASE_(from_);
  RELEASE_(to_);
  RELEASE_(diff_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LCCBDataTable;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCCBDataTable;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCCBDataTable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCCBDataTable:withCCBDataTable:withCCBDataTable:);
  methods[1].selector = @selector(getFrom);
  methods[2].selector = @selector(getTo);
  methods[3].selector = @selector(getDiff);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "from_", "LCCBDataTable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "to_", "LCCBDataTable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "diff_", "LCCBDataTable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCCBDataTable;LCCBDataTable;LCCBDataTable;" };
  static const J2ObjcClassInfo _CCBRTableDiffException = { "TableDiffException", "cucumber.runtime.table", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, -1, -1, -1, -1 };
  return &_CCBRTableDiffException;
}

@end

void CCBRTableDiffException_initWithCCBDataTable_withCCBDataTable_withCCBDataTable_(CCBRTableDiffException *self, CCBDataTable *from, CCBDataTable *to, CCBDataTable *diff) {
  JavaLangRuntimeException_initWithNSString_(self, JreStrcat("$$", @"Tables were not identical:\n", [((CCBDataTable *) nil_chk(diff)) description]));
  JreStrongAssign(&self->from_, from);
  JreStrongAssign(&self->to_, to);
  JreStrongAssign(&self->diff_, diff);
}

CCBRTableDiffException *new_CCBRTableDiffException_initWithCCBDataTable_withCCBDataTable_withCCBDataTable_(CCBDataTable *from, CCBDataTable *to, CCBDataTable *diff) {
  J2OBJC_NEW_IMPL(CCBRTableDiffException, initWithCCBDataTable_withCCBDataTable_withCCBDataTable_, from, to, diff)
}

CCBRTableDiffException *create_CCBRTableDiffException_initWithCCBDataTable_withCCBDataTable_withCCBDataTable_(CCBDataTable *from, CCBDataTable *to, CCBDataTable *diff) {
  J2OBJC_CREATE_IMPL(CCBRTableDiffException, initWithCCBDataTable_withCCBDataTable_withCCBDataTable_, from, to, diff)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CCBRTableDiffException)
