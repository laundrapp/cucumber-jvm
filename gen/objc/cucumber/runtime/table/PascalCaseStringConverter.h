//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/table/PascalCaseStringConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRuntimeTablePascalCaseStringConverter")
#ifdef RESTRICT_CucumberRuntimeTablePascalCaseStringConverter
#define INCLUDE_ALL_CucumberRuntimeTablePascalCaseStringConverter 0
#else
#define INCLUDE_ALL_CucumberRuntimeTablePascalCaseStringConverter 1
#endif
#undef RESTRICT_CucumberRuntimeTablePascalCaseStringConverter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBRPascalCaseStringConverter_) && (INCLUDE_ALL_CucumberRuntimeTablePascalCaseStringConverter || defined(INCLUDE_CCBRPascalCaseStringConverter))
#define CCBRPascalCaseStringConverter_

#define RESTRICT_CucumberRuntimeTableStringConverter 1
#define INCLUDE_CCBRStringConverter 1
#include "cucumber/runtime/table/StringConverter.h"

@interface CCBRPascalCaseStringConverter : NSObject < CCBRStringConverter >

#pragma mark Public

- (instancetype __nonnull)init;

- (NSString *)mapWithNSString:(NSString *)string;

@end

J2OBJC_STATIC_INIT(CCBRPascalCaseStringConverter)

FOUNDATION_EXPORT void CCBRPascalCaseStringConverter_init(CCBRPascalCaseStringConverter *self);

FOUNDATION_EXPORT CCBRPascalCaseStringConverter *new_CCBRPascalCaseStringConverter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBRPascalCaseStringConverter *create_CCBRPascalCaseStringConverter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(CCBRPascalCaseStringConverter)

@compatibility_alias CucumberRuntimeTablePascalCaseStringConverter CCBRPascalCaseStringConverter;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRuntimeTablePascalCaseStringConverter")
