//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/runtime/table/TableDiffer.java
//

#include "J2ObjC_source.h"
#include "cucumber/api/DataTable.h"
#include "cucumber/api/TableConverter.h"
#include "cucumber/deps/difflib/Chunk.h"
#include "cucumber/deps/difflib/Delta.h"
#include "cucumber/deps/difflib/DiffUtils.h"
#include "cucumber/deps/difflib/Patch.h"
#include "cucumber/runtime/table/DataTableDiff.h"
#include "cucumber/runtime/table/DiffableRow.h"
#include "cucumber/runtime/table/TableDiffException.h"
#include "cucumber/runtime/table/TableDiffer.h"
#include "gherkin/pickles/PickleCell.h"
#include "gherkin/pickles/PickleRow.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/util/AbstractMap.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@interface CucumberRuntimeTableTableDiffer () {
 @public
  CucumberApiDataTable *from_;
  CucumberApiDataTable *to_;
}

- (void)checkColumnsWithCucumberApiDataTable:(CucumberApiDataTable *)a
                    withCucumberApiDataTable:(CucumberApiDataTable *)b;

- (id<JavaUtilList>)convertToPickleCellsWithJavaUtilList:(id<JavaUtilList>)e;

- (id<JavaUtilList>)getCellValuesWithGherkinPicklesPickleRow:(GherkinPicklesPickleRow *)r;

- (id<JavaUtilMap>)createDeltasByLineWithJavaUtilList:(id<JavaUtilList>)deltas;

- (CucumberApiDataTable *)createTableDiffWithJavaUtilMap:(id<JavaUtilMap>)deltasByLine;

- (void)addRowsToTableDiffWithJavaUtilList:(id<JavaUtilList>)diffTableRows
              withCucumberDepsDifflibDelta:(CucumberDepsDifflibDelta *)delta;

- (void)markChangedAndDeletedRowsInOriginalAsMissingWithJavaUtilList:(id<JavaUtilList>)diffTableRows
                                        withCucumberDepsDifflibDelta:(CucumberDepsDifflibDelta *)delta;

- (void)markChangedAndInsertedRowsInRevisedAsNewWithJavaUtilList:(id<JavaUtilList>)diffTableRows
                                    withCucumberDepsDifflibDelta:(CucumberDepsDifflibDelta *)delta;

@end

J2OBJC_FIELD_SETTER(CucumberRuntimeTableTableDiffer, from_, CucumberApiDataTable *)
J2OBJC_FIELD_SETTER(CucumberRuntimeTableTableDiffer, to_, CucumberApiDataTable *)

__attribute__((unused)) static void CucumberRuntimeTableTableDiffer_checkColumnsWithCucumberApiDataTable_withCucumberApiDataTable_(CucumberRuntimeTableTableDiffer *self, CucumberApiDataTable *a, CucumberApiDataTable *b);

__attribute__((unused)) static id<JavaUtilList> CucumberRuntimeTableTableDiffer_convertToPickleCellsWithJavaUtilList_(CucumberRuntimeTableTableDiffer *self, id<JavaUtilList> e);

__attribute__((unused)) static id<JavaUtilList> CucumberRuntimeTableTableDiffer_getCellValuesWithGherkinPicklesPickleRow_(CucumberRuntimeTableTableDiffer *self, GherkinPicklesPickleRow *r);

__attribute__((unused)) static id<JavaUtilMap> CucumberRuntimeTableTableDiffer_createDeltasByLineWithJavaUtilList_(CucumberRuntimeTableTableDiffer *self, id<JavaUtilList> deltas);

__attribute__((unused)) static CucumberApiDataTable *CucumberRuntimeTableTableDiffer_createTableDiffWithJavaUtilMap_(CucumberRuntimeTableTableDiffer *self, id<JavaUtilMap> deltasByLine);

__attribute__((unused)) static void CucumberRuntimeTableTableDiffer_addRowsToTableDiffWithJavaUtilList_withCucumberDepsDifflibDelta_(CucumberRuntimeTableTableDiffer *self, id<JavaUtilList> diffTableRows, CucumberDepsDifflibDelta *delta);

__attribute__((unused)) static void CucumberRuntimeTableTableDiffer_markChangedAndDeletedRowsInOriginalAsMissingWithJavaUtilList_withCucumberDepsDifflibDelta_(CucumberRuntimeTableTableDiffer *self, id<JavaUtilList> diffTableRows, CucumberDepsDifflibDelta *delta);

__attribute__((unused)) static void CucumberRuntimeTableTableDiffer_markChangedAndInsertedRowsInRevisedAsNewWithJavaUtilList_withCucumberDepsDifflibDelta_(CucumberRuntimeTableTableDiffer *self, id<JavaUtilList> diffTableRows, CucumberDepsDifflibDelta *delta);

@implementation CucumberRuntimeTableTableDiffer

- (instancetype __nonnull)initWithCucumberApiDataTable:(CucumberApiDataTable *)fromTable
                              withCucumberApiDataTable:(CucumberApiDataTable *)toTable {
  CucumberRuntimeTableTableDiffer_initWithCucumberApiDataTable_withCucumberApiDataTable_(self, fromTable, toTable);
  return self;
}

- (void)checkColumnsWithCucumberApiDataTable:(CucumberApiDataTable *)a
                    withCucumberApiDataTable:(CucumberApiDataTable *)b {
  CucumberRuntimeTableTableDiffer_checkColumnsWithCucumberApiDataTable_withCucumberApiDataTable_(self, a, b);
}

- (void)calculateDiffs {
  CucumberDepsDifflibPatch *patch = CucumberDepsDifflibDiffUtils_diffWithJavaUtilList_withJavaUtilList_([((CucumberApiDataTable *) nil_chk(from_)) diffableRows], [((CucumberApiDataTable *) nil_chk(to_)) diffableRows]);
  id<JavaUtilList> deltas = [((CucumberDepsDifflibPatch *) nil_chk(patch)) getDeltas];
  if (![((id<JavaUtilList>) nil_chk(deltas)) isEmpty]) {
    id<JavaUtilMap> deltasByLine = CucumberRuntimeTableTableDiffer_createDeltasByLineWithJavaUtilList_(self, deltas);
    @throw create_CucumberRuntimeTableTableDiffException_initWithCucumberApiDataTable_withCucumberApiDataTable_withCucumberApiDataTable_(from_, to_, CucumberRuntimeTableTableDiffer_createTableDiffWithJavaUtilMap_(self, deltasByLine));
  }
}

- (void)calculateUnorderedDiffs {
  jboolean isDifferent = false;
  id<JavaUtilList> diffTableRows = create_JavaUtilArrayList_init();
  id<JavaUtilList> missingRow = create_JavaUtilArrayList_init();
  JavaUtilArrayList *extraRows = create_JavaUtilArrayList_init();
  [extraRows addAllWithJavaUtilCollection:[((CucumberApiDataTable *) nil_chk(to_)) raw]];
  for (GherkinPicklesPickleRow * __strong r in nil_chk([((CucumberApiDataTable *) nil_chk(from_)) getPickleRows])) {
    if (![((id<JavaUtilList>) nil_chk([to_ raw])) containsWithId:CucumberRuntimeTableTableDiffer_getCellValuesWithGherkinPicklesPickleRow_(self, r)]) {
      [missingRow addWithId:CucumberRuntimeTableTableDiffer_getCellValuesWithGherkinPicklesPickleRow_(self, r)];
      [diffTableRows addWithId:create_JavaUtilAbstractMap_SimpleEntry_initWithId_withId_(create_GherkinPicklesPickleRow_initWithJavaUtilList_([((GherkinPicklesPickleRow *) nil_chk(r)) getCells]), JreLoadEnum(CucumberRuntimeTableDataTableDiff_DiffType, DELETE))];
      isDifferent = true;
    }
    else {
      [diffTableRows addWithId:create_JavaUtilAbstractMap_SimpleEntry_initWithId_withId_(create_GherkinPicklesPickleRow_initWithJavaUtilList_([((GherkinPicklesPickleRow *) nil_chk(r)) getCells]), JreLoadEnum(CucumberRuntimeTableDataTableDiff_DiffType, NONE))];
      [extraRows removeWithId:CucumberRuntimeTableTableDiffer_getCellValuesWithGherkinPicklesPickleRow_(self, r)];
    }
  }
  for (id<JavaUtilList> __strong e in extraRows) {
    [diffTableRows addWithId:create_JavaUtilAbstractMap_SimpleEntry_initWithId_withId_(create_GherkinPicklesPickleRow_initWithJavaUtilList_(CucumberRuntimeTableTableDiffer_convertToPickleCellsWithJavaUtilList_(self, e)), JreLoadEnum(CucumberRuntimeTableDataTableDiff_DiffType, INSERT))];
    isDifferent = true;
  }
  if (isDifferent) {
    @throw create_CucumberRuntimeTableTableDiffException_initWithCucumberApiDataTable_withCucumberApiDataTable_withCucumberApiDataTable_(from_, to_, CucumberRuntimeTableDataTableDiff_createWithJavaUtilList_withCucumberApiTableConverter_(diffTableRows, [from_ getTableConverter]));
  }
}

- (id<JavaUtilList>)convertToPickleCellsWithJavaUtilList:(id<JavaUtilList>)e {
  return CucumberRuntimeTableTableDiffer_convertToPickleCellsWithJavaUtilList_(self, e);
}

- (id<JavaUtilList>)getCellValuesWithGherkinPicklesPickleRow:(GherkinPicklesPickleRow *)r {
  return CucumberRuntimeTableTableDiffer_getCellValuesWithGherkinPicklesPickleRow_(self, r);
}

- (id<JavaUtilMap>)createDeltasByLineWithJavaUtilList:(id<JavaUtilList>)deltas {
  return CucumberRuntimeTableTableDiffer_createDeltasByLineWithJavaUtilList_(self, deltas);
}

- (CucumberApiDataTable *)createTableDiffWithJavaUtilMap:(id<JavaUtilMap>)deltasByLine {
  return CucumberRuntimeTableTableDiffer_createTableDiffWithJavaUtilMap_(self, deltasByLine);
}

- (void)addRowsToTableDiffWithJavaUtilList:(id<JavaUtilList>)diffTableRows
              withCucumberDepsDifflibDelta:(CucumberDepsDifflibDelta *)delta {
  CucumberRuntimeTableTableDiffer_addRowsToTableDiffWithJavaUtilList_withCucumberDepsDifflibDelta_(self, diffTableRows, delta);
}

- (void)markChangedAndDeletedRowsInOriginalAsMissingWithJavaUtilList:(id<JavaUtilList>)diffTableRows
                                        withCucumberDepsDifflibDelta:(CucumberDepsDifflibDelta *)delta {
  CucumberRuntimeTableTableDiffer_markChangedAndDeletedRowsInOriginalAsMissingWithJavaUtilList_withCucumberDepsDifflibDelta_(self, diffTableRows, delta);
}

- (void)markChangedAndInsertedRowsInRevisedAsNewWithJavaUtilList:(id<JavaUtilList>)diffTableRows
                                    withCucumberDepsDifflibDelta:(CucumberDepsDifflibDelta *)delta {
  CucumberRuntimeTableTableDiffer_markChangedAndInsertedRowsInRevisedAsNewWithJavaUtilList_withCucumberDepsDifflibDelta_(self, diffTableRows, delta);
}

- (void)dealloc {
  RELEASE_(from_);
  RELEASE_(to_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, 3, 4, -1, 5, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, 6, 7, -1, 8, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x2, 9, 4, -1, 10, -1, -1 },
    { NULL, "LCucumberApiDataTable;", 0x2, 11, 12, -1, 13, -1, -1 },
    { NULL, "V", 0x2, 14, 15, -1, 16, -1, -1 },
    { NULL, "V", 0x2, 17, 15, -1, 16, -1, -1 },
    { NULL, "V", 0x2, 18, 15, -1, 16, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberApiDataTable:withCucumberApiDataTable:);
  methods[1].selector = @selector(checkColumnsWithCucumberApiDataTable:withCucumberApiDataTable:);
  methods[2].selector = @selector(calculateDiffs);
  methods[3].selector = @selector(calculateUnorderedDiffs);
  methods[4].selector = @selector(convertToPickleCellsWithJavaUtilList:);
  methods[5].selector = @selector(getCellValuesWithGherkinPicklesPickleRow:);
  methods[6].selector = @selector(createDeltasByLineWithJavaUtilList:);
  methods[7].selector = @selector(createTableDiffWithJavaUtilMap:);
  methods[8].selector = @selector(addRowsToTableDiffWithJavaUtilList:withCucumberDepsDifflibDelta:);
  methods[9].selector = @selector(markChangedAndDeletedRowsInOriginalAsMissingWithJavaUtilList:withCucumberDepsDifflibDelta:);
  methods[10].selector = @selector(markChangedAndInsertedRowsInRevisedAsNewWithJavaUtilList:withCucumberDepsDifflibDelta:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "from_", "LCucumberApiDataTable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "to_", "LCucumberApiDataTable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberApiDataTable;LCucumberApiDataTable;", "checkColumns", "LCucumberRuntimeTableTableDiffException;", "convertToPickleCells", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Lgherkin/pickles/PickleCell;>;", "getCellValues", "LGherkinPicklesPickleRow;", "(Lgherkin/pickles/PickleRow;)Ljava/util/List<Ljava/lang/String;>;", "createDeltasByLine", "(Ljava/util/List<Lcucumber/deps/difflib/Delta;>;)Ljava/util/Map<Ljava/lang/Integer;Lcucumber/deps/difflib/Delta;>;", "createTableDiff", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/Integer;Lcucumber/deps/difflib/Delta;>;)Lcucumber/api/DataTable;", "addRowsToTableDiff", "LJavaUtilList;LCucumberDepsDifflibDelta;", "(Ljava/util/List<Ljava/util/AbstractMap$SimpleEntry<Lgherkin/pickles/PickleRow;Lcucumber/runtime/table/DataTableDiff$DiffType;>;>;Lcucumber/deps/difflib/Delta;)V", "markChangedAndDeletedRowsInOriginalAsMissing", "markChangedAndInsertedRowsInRevisedAsNew" };
  static const J2ObjcClassInfo _CucumberRuntimeTableTableDiffer = { "TableDiffer", "cucumber.runtime.table", ptrTable, methods, fields, 7, 0x1, 11, 2, -1, -1, -1, -1, -1 };
  return &_CucumberRuntimeTableTableDiffer;
}

@end

void CucumberRuntimeTableTableDiffer_initWithCucumberApiDataTable_withCucumberApiDataTable_(CucumberRuntimeTableTableDiffer *self, CucumberApiDataTable *fromTable, CucumberApiDataTable *toTable) {
  NSObject_init(self);
  CucumberRuntimeTableTableDiffer_checkColumnsWithCucumberApiDataTable_withCucumberApiDataTable_(self, fromTable, toTable);
  JreStrongAssign(&self->from_, fromTable);
  JreStrongAssign(&self->to_, toTable);
}

CucumberRuntimeTableTableDiffer *new_CucumberRuntimeTableTableDiffer_initWithCucumberApiDataTable_withCucumberApiDataTable_(CucumberApiDataTable *fromTable, CucumberApiDataTable *toTable) {
  J2OBJC_NEW_IMPL(CucumberRuntimeTableTableDiffer, initWithCucumberApiDataTable_withCucumberApiDataTable_, fromTable, toTable)
}

CucumberRuntimeTableTableDiffer *create_CucumberRuntimeTableTableDiffer_initWithCucumberApiDataTable_withCucumberApiDataTable_(CucumberApiDataTable *fromTable, CucumberApiDataTable *toTable) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeTableTableDiffer, initWithCucumberApiDataTable_withCucumberApiDataTable_, fromTable, toTable)
}

void CucumberRuntimeTableTableDiffer_checkColumnsWithCucumberApiDataTable_withCucumberApiDataTable_(CucumberRuntimeTableTableDiffer *self, CucumberApiDataTable *a, CucumberApiDataTable *b) {
  if ([((id<JavaUtilList>) nil_chk([((CucumberApiDataTable *) nil_chk(a)) topCells])) size] != [((id<JavaUtilList>) nil_chk([((CucumberApiDataTable *) nil_chk(b)) topCells])) size] && ![((id<JavaUtilList>) nil_chk([b topCells])) isEmpty]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@C@", @"Tables must have equal number of columns:\n", a, 0x000a, b));
  }
}

id<JavaUtilList> CucumberRuntimeTableTableDiffer_convertToPickleCellsWithJavaUtilList_(CucumberRuntimeTableTableDiffer *self, id<JavaUtilList> e) {
  id<JavaUtilList> cells = create_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(e)) size]);
  for (NSString * __strong value in e) {
    [cells addWithId:create_GherkinPicklesPickleCell_initWithGherkinPicklesPickleLocation_withNSString_(nil, value)];
  }
  return cells;
}

id<JavaUtilList> CucumberRuntimeTableTableDiffer_getCellValuesWithGherkinPicklesPickleRow_(CucumberRuntimeTableTableDiffer *self, GherkinPicklesPickleRow *r) {
  id<JavaUtilList> values = create_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk([((GherkinPicklesPickleRow *) nil_chk(r)) getCells])) size]);
  for (GherkinPicklesPickleCell * __strong cell in nil_chk([r getCells])) {
    [values addWithId:[((GherkinPicklesPickleCell *) nil_chk(cell)) getValue]];
  }
  return values;
}

id<JavaUtilMap> CucumberRuntimeTableTableDiffer_createDeltasByLineWithJavaUtilList_(CucumberRuntimeTableTableDiffer *self, id<JavaUtilList> deltas) {
  id<JavaUtilMap> deltasByLine = create_JavaUtilHashMap_init();
  for (CucumberDepsDifflibDelta * __strong delta in nil_chk(deltas)) {
    [deltasByLine putWithId:JavaLangInteger_valueOfWithInt_([((CucumberDepsDifflibChunk *) nil_chk([((CucumberDepsDifflibDelta *) nil_chk(delta)) getOriginal])) getPosition]) withId:delta];
  }
  return deltasByLine;
}

CucumberApiDataTable *CucumberRuntimeTableTableDiffer_createTableDiffWithJavaUtilMap_(CucumberRuntimeTableTableDiffer *self, id<JavaUtilMap> deltasByLine) {
  id<JavaUtilList> diffTableRows = create_JavaUtilArrayList_init();
  id<JavaUtilList> rows = [((CucumberApiDataTable *) nil_chk(self->from_)) raw];
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(rows)) size]; i++) {
    CucumberDepsDifflibDelta *delta = [((id<JavaUtilMap>) nil_chk(deltasByLine)) getWithId:JavaLangInteger_valueOfWithInt_(i)];
    if (delta == nil) {
      [diffTableRows addWithId:create_JavaUtilAbstractMap_SimpleEntry_initWithId_withId_([((id<JavaUtilList>) nil_chk([self->from_ getPickleRows])) getWithInt:i], JreLoadEnum(CucumberRuntimeTableDataTableDiff_DiffType, NONE))];
    }
    else {
      CucumberRuntimeTableTableDiffer_addRowsToTableDiffWithJavaUtilList_withCucumberDepsDifflibDelta_(self, diffTableRows, delta);
      if ([delta getType] == JreLoadEnum(CucumberDepsDifflibDelta_TYPE, CHANGE) || [delta getType] == JreLoadEnum(CucumberDepsDifflibDelta_TYPE, DELETE)) {
        i += [((id<JavaUtilList>) nil_chk([((CucumberDepsDifflibChunk *) nil_chk([delta getOriginal])) getLines])) size] - 1;
      }
      else {
        [diffTableRows addWithId:create_JavaUtilAbstractMap_SimpleEntry_initWithId_withId_([((id<JavaUtilList>) nil_chk([self->from_ getPickleRows])) getWithInt:i], JreLoadEnum(CucumberRuntimeTableDataTableDiff_DiffType, NONE))];
      }
    }
  }
  CucumberDepsDifflibDelta *remainingDelta = [((id<JavaUtilMap>) nil_chk(deltasByLine)) getWithId:JavaLangInteger_valueOfWithInt_([rows size])];
  if (remainingDelta != nil) {
    CucumberRuntimeTableTableDiffer_addRowsToTableDiffWithJavaUtilList_withCucumberDepsDifflibDelta_(self, diffTableRows, remainingDelta);
  }
  return CucumberRuntimeTableDataTableDiff_createWithJavaUtilList_withCucumberApiTableConverter_(diffTableRows, [self->from_ getTableConverter]);
}

void CucumberRuntimeTableTableDiffer_addRowsToTableDiffWithJavaUtilList_withCucumberDepsDifflibDelta_(CucumberRuntimeTableTableDiffer *self, id<JavaUtilList> diffTableRows, CucumberDepsDifflibDelta *delta) {
  CucumberRuntimeTableTableDiffer_markChangedAndDeletedRowsInOriginalAsMissingWithJavaUtilList_withCucumberDepsDifflibDelta_(self, diffTableRows, delta);
  CucumberRuntimeTableTableDiffer_markChangedAndInsertedRowsInRevisedAsNewWithJavaUtilList_withCucumberDepsDifflibDelta_(self, diffTableRows, delta);
}

void CucumberRuntimeTableTableDiffer_markChangedAndDeletedRowsInOriginalAsMissingWithJavaUtilList_withCucumberDepsDifflibDelta_(CucumberRuntimeTableTableDiffer *self, id<JavaUtilList> diffTableRows, CucumberDepsDifflibDelta *delta) {
  id<JavaUtilList> deletedLines = [((CucumberDepsDifflibChunk *) nil_chk([((CucumberDepsDifflibDelta *) nil_chk(delta)) getOriginal])) getLines];
  for (CucumberRuntimeTableDiffableRow * __strong row in nil_chk(deletedLines)) {
    [((id<JavaUtilList>) nil_chk(diffTableRows)) addWithId:create_JavaUtilAbstractMap_SimpleEntry_initWithId_withId_(create_GherkinPicklesPickleRow_initWithJavaUtilList_([((GherkinPicklesPickleRow *) nil_chk(((CucumberRuntimeTableDiffableRow *) nil_chk(row))->row_)) getCells]), JreLoadEnum(CucumberRuntimeTableDataTableDiff_DiffType, DELETE))];
  }
}

void CucumberRuntimeTableTableDiffer_markChangedAndInsertedRowsInRevisedAsNewWithJavaUtilList_withCucumberDepsDifflibDelta_(CucumberRuntimeTableTableDiffer *self, id<JavaUtilList> diffTableRows, CucumberDepsDifflibDelta *delta) {
  id<JavaUtilList> insertedLines = [((CucumberDepsDifflibChunk *) nil_chk([((CucumberDepsDifflibDelta *) nil_chk(delta)) getRevised])) getLines];
  for (CucumberRuntimeTableDiffableRow * __strong row in nil_chk(insertedLines)) {
    [((id<JavaUtilList>) nil_chk(diffTableRows)) addWithId:create_JavaUtilAbstractMap_SimpleEntry_initWithId_withId_(create_GherkinPicklesPickleRow_initWithJavaUtilList_([((GherkinPicklesPickleRow *) nil_chk(((CucumberRuntimeTableDiffableRow *) nil_chk(row))->row_)) getCells]), JreLoadEnum(CucumberRuntimeTableDataTableDiff_DiffType, INSERT))];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeTableTableDiffer)
