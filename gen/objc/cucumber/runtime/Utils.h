//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/runtime/Utils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRuntimeUtils")
#ifdef RESTRICT_CucumberRuntimeUtils
#define INCLUDE_ALL_CucumberRuntimeUtils 0
#else
#define INCLUDE_ALL_CucumberRuntimeUtils 1
#endif
#undef RESTRICT_CucumberRuntimeUtils

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberRuntimeUtils_) && (INCLUDE_ALL_CucumberRuntimeUtils || defined(INCLUDE_CucumberRuntimeUtils))
#define CucumberRuntimeUtils_

@class IOSClass;
@class IOSObjectArray;
@class JavaLangReflectMethod;
@class JavaNetURL;
@protocol JavaLangReflectType;

@interface CucumberRuntimeUtils : NSObject

#pragma mark Public

+ (NSString *)getUniqueTestNameForScenarioExampleWithNSString:(NSString *)testCaseName
                                                      withInt:(jint)exampleNumber;

+ (NSString *)htmlEscapeWithNSString:(NSString *)s;

+ (id)invokeWithId:(id)target
withJavaLangReflectMethod:(JavaLangReflectMethod *)method
          withLong:(jlong)timeoutMillis
 withNSObjectArray:(IOSObjectArray *)args;

+ (jboolean)isInstantiableWithIOSClass:(IOSClass *)clazz;

+ (id<JavaLangReflectType>)listItemTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type;

+ (id<JavaLangReflectType>)mapKeyTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type;

+ (id<JavaLangReflectType>)mapValueTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type;

+ (JavaNetURL *)toURLWithNSString:(NSString *)pathOrUrl;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeUtils)

FOUNDATION_EXPORT jboolean CucumberRuntimeUtils_isInstantiableWithIOSClass_(IOSClass *clazz);

FOUNDATION_EXPORT id CucumberRuntimeUtils_invokeWithId_withJavaLangReflectMethod_withLong_withNSObjectArray_(id target, JavaLangReflectMethod *method, jlong timeoutMillis, IOSObjectArray *args);

FOUNDATION_EXPORT id<JavaLangReflectType> CucumberRuntimeUtils_listItemTypeWithJavaLangReflectType_(id<JavaLangReflectType> type);

FOUNDATION_EXPORT id<JavaLangReflectType> CucumberRuntimeUtils_mapKeyTypeWithJavaLangReflectType_(id<JavaLangReflectType> type);

FOUNDATION_EXPORT id<JavaLangReflectType> CucumberRuntimeUtils_mapValueTypeWithJavaLangReflectType_(id<JavaLangReflectType> type);

FOUNDATION_EXPORT JavaNetURL *CucumberRuntimeUtils_toURLWithNSString_(NSString *pathOrUrl);

FOUNDATION_EXPORT NSString *CucumberRuntimeUtils_htmlEscapeWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *CucumberRuntimeUtils_getUniqueTestNameForScenarioExampleWithNSString_withInt_(NSString *testCaseName, jint exampleNumber);

J2OBJC_TYPE_LITERAL_HEADER(CucumberRuntimeUtils)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRuntimeUtils")
