//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/RuntimeGlue.java
//

#include "J2ObjC_source.h"
#include "cucumber/api/StepDefinitionReporter.h"
#include "cucumber/runtime/AmbiguousStepDefinitionsException.h"
#include "cucumber/runtime/DuplicateStepDefinitionException.h"
#include "cucumber/runtime/HookComparator.h"
#include "cucumber/runtime/HookDefinition.h"
#include "cucumber/runtime/PickleStepDefinitionMatch.h"
#include "cucumber/runtime/RuntimeGlue.h"
#include "cucumber/runtime/StepDefinition.h"
#include "gherkin/pickles/PickleStep.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/TreeMap.h"

@interface CCBRRuntimeGlue ()

- (id<JavaUtilList>)stepDefinitionMatchesWithNSString:(NSString *)featurePath
                                    withGHKPickleStep:(GHKPickleStep *)step;

- (void)removeScenarioScopedHooksWithJavaUtilList:(id<JavaUtilList>)beforeHooks1;

- (void)removeScenarioScopedStepdefs;

@end

__attribute__((unused)) static id<JavaUtilList> CCBRRuntimeGlue_stepDefinitionMatchesWithNSString_withGHKPickleStep_(CCBRRuntimeGlue *self, NSString *featurePath, GHKPickleStep *step);

__attribute__((unused)) static void CCBRRuntimeGlue_removeScenarioScopedHooksWithJavaUtilList_(CCBRRuntimeGlue *self, id<JavaUtilList> beforeHooks1);

__attribute__((unused)) static void CCBRRuntimeGlue_removeScenarioScopedStepdefs(CCBRRuntimeGlue *self);

@interface CCBRRuntimeGlue_CacheEntry ()

- (instancetype __nonnull)initWithCCBRStepDefinition:(id<CCBRStepDefinition>)stepDefinition;

@end

__attribute__((unused)) static void CCBRRuntimeGlue_CacheEntry_initWithCCBRStepDefinition_(CCBRRuntimeGlue_CacheEntry *self, id<CCBRStepDefinition> stepDefinition);

__attribute__((unused)) static CCBRRuntimeGlue_CacheEntry *new_CCBRRuntimeGlue_CacheEntry_initWithCCBRStepDefinition_(id<CCBRStepDefinition> stepDefinition) NS_RETURNS_RETAINED;

__attribute__((unused)) static CCBRRuntimeGlue_CacheEntry *create_CCBRRuntimeGlue_CacheEntry_initWithCCBRStepDefinition_(id<CCBRStepDefinition> stepDefinition);

@implementation CCBRRuntimeGlue

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CCBRRuntimeGlue_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)addStepDefinitionWithCCBRStepDefinition:(id<CCBRStepDefinition>)stepDefinition {
  id<CCBRStepDefinition> previous = [((id<JavaUtilMap>) nil_chk(stepDefinitionsByPattern_)) getWithId:[((id<CCBRStepDefinition>) nil_chk(stepDefinition)) getPattern]];
  if (previous != nil) {
    @throw create_CCBRDuplicateStepDefinitionException_initWithCCBRStepDefinition_withCCBRStepDefinition_(previous, stepDefinition);
  }
  [stepDefinitionsByPattern_ putWithId:[stepDefinition getPattern] withId:stepDefinition];
}

- (void)addBeforeHookWithCCBRHookDefinition:(id<CCBRHookDefinition>)hookDefinition {
  [((id<JavaUtilList>) nil_chk(beforeHooks_)) addWithId:hookDefinition];
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(beforeHooks_, create_CCBRHookComparator_initWithBoolean_(true));
}

- (void)addBeforeStepHookWithCCBRHookDefinition:(id<CCBRHookDefinition>)hookDefinition {
  [((id<JavaUtilList>) nil_chk(beforeStepHooks_)) addWithId:hookDefinition];
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(beforeStepHooks_, create_CCBRHookComparator_initWithBoolean_(true));
}

- (void)addAfterHookWithCCBRHookDefinition:(id<CCBRHookDefinition>)hookDefinition {
  [((id<JavaUtilList>) nil_chk(afterHooks_)) addWithId:hookDefinition];
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(afterHooks_, create_CCBRHookComparator_initWithBoolean_(false));
}

- (void)addAfterStepHookWithCCBRHookDefinition:(id<CCBRHookDefinition>)hookDefinition {
  [((id<JavaUtilList>) nil_chk(afterStepHooks_)) addWithId:hookDefinition];
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(afterStepHooks_, create_CCBRHookComparator_initWithBoolean_(false));
}

- (id<JavaUtilList>)getBeforeHooks {
  return beforeHooks_;
}

- (id<JavaUtilList>)getBeforeStepHooks {
  return beforeStepHooks_;
}

- (id<JavaUtilList>)getAfterHooks {
  return afterHooks_;
}

- (id<JavaUtilList>)getAfterStepHooks {
  return afterStepHooks_;
}

- (CCBRPickleStepDefinitionMatch *)stepDefinitionMatchWithNSString:(NSString *)featurePath
                                                 withGHKPickleStep:(GHKPickleStep *)step {
  NSString *stepText = [((GHKPickleStep *) nil_chk(step)) getText];
  CCBRRuntimeGlue_CacheEntry *cacheEntry = [((id<JavaUtilMap>) nil_chk(matchedStepDefinitionsCache_)) getWithId:stepText];
  if (cacheEntry != nil) {
    return create_CCBRPickleStepDefinitionMatch_initWithJavaUtilList_withCCBRStepDefinition_withNSString_withGHKPickleStep_(JavaUtilCollections_emptyList(), cacheEntry->stepDefinition_, featurePath, step);
  }
  id<JavaUtilList> matches = CCBRRuntimeGlue_stepDefinitionMatchesWithNSString_withGHKPickleStep_(self, featurePath, step);
  if ([((id<JavaUtilList>) nil_chk(matches)) isEmpty]) {
    return nil;
  }
  if ([matches size] > 1) {
    @throw create_CCBRAmbiguousStepDefinitionsException_initWithGHKPickleStep_withJavaUtilList_(step, matches);
  }
  CCBRPickleStepDefinitionMatch *match = [matches getWithInt:0];
  if ([((id<JavaUtilList>) nil_chk([((CCBRPickleStepDefinitionMatch *) nil_chk(match)) getArguments])) isEmpty]) {
    [matchedStepDefinitionsCache_ putWithId:stepText withId:create_CCBRRuntimeGlue_CacheEntry_initWithCCBRStepDefinition_([match getStepDefinition])];
  }
  return match;
}

- (id<JavaUtilList>)stepDefinitionMatchesWithNSString:(NSString *)featurePath
                                    withGHKPickleStep:(GHKPickleStep *)step {
  return CCBRRuntimeGlue_stepDefinitionMatchesWithNSString_withGHKPickleStep_(self, featurePath, step);
}

- (void)reportStepDefinitionsWithCucumberApiStepDefinitionReporter:(id<CucumberApiStepDefinitionReporter>)stepDefinitionReporter {
  for (id<CCBRStepDefinition> __strong stepDefinition in nil_chk([((id<JavaUtilMap>) nil_chk(stepDefinitionsByPattern_)) values])) {
    [((id<CucumberApiStepDefinitionReporter>) nil_chk(stepDefinitionReporter)) stepDefinitionWithCCBRStepDefinition:stepDefinition];
  }
}

- (void)removeScenarioScopedGlue {
  CCBRRuntimeGlue_removeScenarioScopedHooksWithJavaUtilList_(self, beforeHooks_);
  CCBRRuntimeGlue_removeScenarioScopedHooksWithJavaUtilList_(self, beforeStepHooks_);
  CCBRRuntimeGlue_removeScenarioScopedHooksWithJavaUtilList_(self, afterHooks_);
  CCBRRuntimeGlue_removeScenarioScopedHooksWithJavaUtilList_(self, afterStepHooks_);
  CCBRRuntimeGlue_removeScenarioScopedStepdefs(self);
}

- (void)removeScenarioScopedHooksWithJavaUtilList:(id<JavaUtilList>)beforeHooks1 {
  CCBRRuntimeGlue_removeScenarioScopedHooksWithJavaUtilList_(self, beforeHooks1);
}

- (void)removeScenarioScopedStepdefs {
  CCBRRuntimeGlue_removeScenarioScopedStepdefs(self);
}

- (void)dealloc {
  RELEASE_(stepDefinitionsByPattern_);
  RELEASE_(beforeHooks_);
  RELEASE_(beforeStepHooks_);
  RELEASE_(afterHooks_);
  RELEASE_(afterStepHooks_);
  RELEASE_(matchedStepDefinitionsCache_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 3, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 7, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 7, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 7, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 7, -1, -1 },
    { NULL, "LCCBRPickleStepDefinitionMatch;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, 10, 9, -1, 11, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 14, 15, -1, 16, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addStepDefinitionWithCCBRStepDefinition:);
  methods[2].selector = @selector(addBeforeHookWithCCBRHookDefinition:);
  methods[3].selector = @selector(addBeforeStepHookWithCCBRHookDefinition:);
  methods[4].selector = @selector(addAfterHookWithCCBRHookDefinition:);
  methods[5].selector = @selector(addAfterStepHookWithCCBRHookDefinition:);
  methods[6].selector = @selector(getBeforeHooks);
  methods[7].selector = @selector(getBeforeStepHooks);
  methods[8].selector = @selector(getAfterHooks);
  methods[9].selector = @selector(getAfterStepHooks);
  methods[10].selector = @selector(stepDefinitionMatchWithNSString:withGHKPickleStep:);
  methods[11].selector = @selector(stepDefinitionMatchesWithNSString:withGHKPickleStep:);
  methods[12].selector = @selector(reportStepDefinitionsWithCucumberApiStepDefinitionReporter:);
  methods[13].selector = @selector(removeScenarioScopedGlue);
  methods[14].selector = @selector(removeScenarioScopedHooksWithJavaUtilList:);
  methods[15].selector = @selector(removeScenarioScopedStepdefs);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "stepDefinitionsByPattern_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x10, -1, -1, 17, -1 },
    { "beforeHooks_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 18, -1 },
    { "beforeStepHooks_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 18, -1 },
    { "afterHooks_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 18, -1 },
    { "afterStepHooks_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 18, -1 },
    { "matchedStepDefinitionsCache_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x10, -1, -1, 19, -1 },
  };
  static const void *ptrTable[] = { "addStepDefinition", "LCCBRStepDefinition;", "addBeforeHook", "LCCBRHookDefinition;", "addBeforeStepHook", "addAfterHook", "addAfterStepHook", "()Ljava/util/List<Lcucumber/runtime/HookDefinition;>;", "stepDefinitionMatch", "LNSString;LGHKPickleStep;", "stepDefinitionMatches", "(Ljava/lang/String;Lgherkin/pickles/PickleStep;)Ljava/util/List<Lcucumber/runtime/PickleStepDefinitionMatch;>;", "reportStepDefinitions", "LCucumberApiStepDefinitionReporter;", "removeScenarioScopedHooks", "LJavaUtilList;", "(Ljava/util/List<Lcucumber/runtime/HookDefinition;>;)V", "Ljava/util/Map<Ljava/lang/String;Lcucumber/runtime/StepDefinition;>;", "Ljava/util/List<Lcucumber/runtime/HookDefinition;>;", "Ljava/util/Map<Ljava/lang/String;Lcucumber/runtime/RuntimeGlue$CacheEntry;>;", "LCCBRRuntimeGlue_CacheEntry;" };
  static const J2ObjcClassInfo _CCBRRuntimeGlue = { "RuntimeGlue", "cucumber.runtime", ptrTable, methods, fields, 7, 0x1, 16, 6, -1, 20, -1, -1, -1 };
  return &_CCBRRuntimeGlue;
}

@end

void CCBRRuntimeGlue_init(CCBRRuntimeGlue *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->stepDefinitionsByPattern_, new_JavaUtilTreeMap_init());
  JreStrongAssignAndConsume(&self->beforeHooks_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->beforeStepHooks_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->afterHooks_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->afterStepHooks_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->matchedStepDefinitionsCache_, new_JavaUtilHashMap_init());
}

CCBRRuntimeGlue *new_CCBRRuntimeGlue_init() {
  J2OBJC_NEW_IMPL(CCBRRuntimeGlue, init)
}

CCBRRuntimeGlue *create_CCBRRuntimeGlue_init() {
  J2OBJC_CREATE_IMPL(CCBRRuntimeGlue, init)
}

id<JavaUtilList> CCBRRuntimeGlue_stepDefinitionMatchesWithNSString_withGHKPickleStep_(CCBRRuntimeGlue *self, NSString *featurePath, GHKPickleStep *step) {
  id<JavaUtilList> result = create_JavaUtilArrayList_init();
  for (id<CCBRStepDefinition> __strong stepDefinition in nil_chk([((id<JavaUtilMap>) nil_chk(self->stepDefinitionsByPattern_)) values])) {
    id<JavaUtilList> arguments = [((id<CCBRStepDefinition>) nil_chk(stepDefinition)) matchedArgumentsWithGHKPickleStep:step];
    if (arguments != nil) {
      [result addWithId:create_CCBRPickleStepDefinitionMatch_initWithJavaUtilList_withCCBRStepDefinition_withNSString_withGHKPickleStep_(arguments, stepDefinition, featurePath, step)];
    }
  }
  return result;
}

void CCBRRuntimeGlue_removeScenarioScopedHooksWithJavaUtilList_(CCBRRuntimeGlue *self, id<JavaUtilList> beforeHooks1) {
  id<JavaUtilIterator> hookIterator = [((id<JavaUtilList>) nil_chk(beforeHooks1)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(hookIterator)) hasNext]) {
    id<CCBRHookDefinition> hook = [hookIterator next];
    if ([((id<CCBRHookDefinition>) nil_chk(hook)) isScenarioScoped]) {
      [hookIterator remove];
    }
  }
}

void CCBRRuntimeGlue_removeScenarioScopedStepdefs(CCBRRuntimeGlue *self) {
  id<JavaUtilIterator> stepdefs = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(self->stepDefinitionsByPattern_)) entrySet])) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(stepdefs)) hasNext]) {
    id<CCBRStepDefinition> stepDefinition = [((id<JavaUtilMap_Entry>) nil_chk([stepdefs next])) getValue];
    if ([((id<CCBRStepDefinition>) nil_chk(stepDefinition)) isScenarioScoped]) {
      [stepdefs remove];
    }
  }
  id<JavaUtilIterator> cachedStepDefs = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(self->matchedStepDefinitionsCache_)) entrySet])) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(cachedStepDefs)) hasNext]) {
    id<CCBRStepDefinition> stepDefinition = ((CCBRRuntimeGlue_CacheEntry *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk([cachedStepDefs next])) getValue]))->stepDefinition_;
    if ([((id<CCBRStepDefinition>) nil_chk(stepDefinition)) isScenarioScoped]) {
      [cachedStepDefs remove];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CCBRRuntimeGlue)

@implementation CCBRRuntimeGlue_CacheEntry

- (instancetype __nonnull)initWithCCBRStepDefinition:(id<CCBRStepDefinition>)stepDefinition {
  CCBRRuntimeGlue_CacheEntry_initWithCCBRStepDefinition_(self, stepDefinition);
  return self;
}

- (void)dealloc {
  RELEASE_(stepDefinition_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCCBRStepDefinition:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "stepDefinition_", "LCCBRStepDefinition;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCCBRStepDefinition;", "LCCBRRuntimeGlue;" };
  static const J2ObjcClassInfo _CCBRRuntimeGlue_CacheEntry = { "CacheEntry", "cucumber.runtime", ptrTable, methods, fields, 7, 0x18, 1, 1, 1, -1, -1, -1, -1 };
  return &_CCBRRuntimeGlue_CacheEntry;
}

@end

void CCBRRuntimeGlue_CacheEntry_initWithCCBRStepDefinition_(CCBRRuntimeGlue_CacheEntry *self, id<CCBRStepDefinition> stepDefinition) {
  NSObject_init(self);
  JreStrongAssign(&self->stepDefinition_, stepDefinition);
}

CCBRRuntimeGlue_CacheEntry *new_CCBRRuntimeGlue_CacheEntry_initWithCCBRStepDefinition_(id<CCBRStepDefinition> stepDefinition) {
  J2OBJC_NEW_IMPL(CCBRRuntimeGlue_CacheEntry, initWithCCBRStepDefinition_, stepDefinition)
}

CCBRRuntimeGlue_CacheEntry *create_CCBRRuntimeGlue_CacheEntry_initWithCCBRStepDefinition_(id<CCBRStepDefinition> stepDefinition) {
  J2OBJC_CREATE_IMPL(CCBRRuntimeGlue_CacheEntry, initWithCCBRStepDefinition_, stepDefinition)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CCBRRuntimeGlue_CacheEntry)
