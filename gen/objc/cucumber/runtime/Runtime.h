//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/Runtime.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRuntimeRuntime")
#ifdef RESTRICT_CucumberRuntimeRuntime
#define INCLUDE_ALL_CucumberRuntimeRuntime 0
#else
#define INCLUDE_ALL_CucumberRuntimeRuntime 1
#endif
#undef RESTRICT_CucumberRuntimeRuntime

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberRuntimeRuntime_) && (INCLUDE_ALL_CucumberRuntimeRuntime || defined(INCLUDE_CucumberRuntimeRuntime))
#define CucumberRuntimeRuntime_

@class CucumberRunnerEventBus;
@class CucumberRunnerRunner;
@class CucumberRuntimeModelCucumberFeature;
@class CucumberRuntimeRuntimeOptions;
@class CucumberRuntimeStats;
@class GherkinEventsPickleEvent;
@class JavaIoPrintStream;
@class JavaLangClassLoader;
@protocol CucumberApiStepDefinitionReporter;
@protocol CucumberRunnerTimeService;
@protocol CucumberRuntimeClassFinder;
@protocol CucumberRuntimeGlue;
@protocol CucumberRuntimeIoResourceLoader;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

/*!
 @brief This is the main entry point for running Cucumber features.
 */
@interface CucumberRuntimeRuntime : NSObject {
 @public
  CucumberRuntimeStats *stats_;
}

#pragma mark Public

- (instancetype __nonnull)initWithCucumberRuntimeIoResourceLoader:(id<CucumberRuntimeIoResourceLoader>)resourceLoader
                                   withCucumberRuntimeClassFinder:(id<CucumberRuntimeClassFinder>)classFinder
                                          withJavaLangClassLoader:(JavaLangClassLoader *)classLoader
                                withCucumberRuntimeRuntimeOptions:(CucumberRuntimeRuntimeOptions *)runtimeOptions;

- (instancetype __nonnull)initWithCucumberRuntimeIoResourceLoader:(id<CucumberRuntimeIoResourceLoader>)resourceLoader
                                          withJavaLangClassLoader:(JavaLangClassLoader *)classLoader
                                           withJavaUtilCollection:(id<JavaUtilCollection>)backends
                                withCucumberRuntimeRuntimeOptions:(CucumberRuntimeRuntimeOptions *)runtimeOptions;

- (instancetype __nonnull)initWithCucumberRuntimeIoResourceLoader:(id<CucumberRuntimeIoResourceLoader>)resourceLoader
                                          withJavaLangClassLoader:(JavaLangClassLoader *)classLoader
                                           withJavaUtilCollection:(id<JavaUtilCollection>)backends
                                withCucumberRuntimeRuntimeOptions:(CucumberRuntimeRuntimeOptions *)runtimeOptions
                                          withCucumberRuntimeGlue:(id<CucumberRuntimeGlue>)optionalGlue;

- (instancetype __nonnull)initWithCucumberRuntimeIoResourceLoader:(id<CucumberRuntimeIoResourceLoader>)resourceLoader
                                          withJavaLangClassLoader:(JavaLangClassLoader *)classLoader
                                           withJavaUtilCollection:(id<JavaUtilCollection>)backends
                                withCucumberRuntimeRuntimeOptions:(CucumberRuntimeRuntimeOptions *)runtimeOptions
                                    withCucumberRunnerTimeService:(id<CucumberRunnerTimeService>)stopWatch
                                          withCucumberRuntimeGlue:(id<CucumberRuntimeGlue>)optionalGlue;

- (id<JavaUtilList>)compileFeatureWithCucumberRuntimeModelCucumberFeature:(CucumberRuntimeModelCucumberFeature *)feature;

- (jbyte)exitStatus;

- (id<JavaUtilList>)getErrors;

- (CucumberRunnerEventBus *)getEventBus;

- (id<CucumberRuntimeGlue>)getGlue;

- (CucumberRunnerRunner *)getRunner;

- (id<JavaUtilList>)getSnippets;

- (jboolean)matchesFiltersWithGherkinEventsPickleEvent:(GherkinEventsPickleEvent *)pickleEvent;

- (void)printSummary;

- (void)reportStepDefinitionsWithCucumberApiStepDefinitionReporter:(id<CucumberApiStepDefinitionReporter>)stepDefinitionReporter;

/*!
 @brief This is the main entry point.Used from CLI, but not from JUnit.
 */
- (void)run;

- (void)runFeatureWithCucumberRuntimeModelCucumberFeature:(CucumberRuntimeModelCucumberFeature *)feature;

#pragma mark Package-Private

- (void)printStatsWithJavaIoPrintStream:(JavaIoPrintStream *)outArg;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeRuntime)

J2OBJC_FIELD_SETTER(CucumberRuntimeRuntime, stats_, CucumberRuntimeStats *)

FOUNDATION_EXPORT void CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withCucumberRuntimeClassFinder_withJavaLangClassLoader_withCucumberRuntimeRuntimeOptions_(CucumberRuntimeRuntime *self, id<CucumberRuntimeIoResourceLoader> resourceLoader, id<CucumberRuntimeClassFinder> classFinder, JavaLangClassLoader *classLoader, CucumberRuntimeRuntimeOptions *runtimeOptions);

FOUNDATION_EXPORT CucumberRuntimeRuntime *new_CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withCucumberRuntimeClassFinder_withJavaLangClassLoader_withCucumberRuntimeRuntimeOptions_(id<CucumberRuntimeIoResourceLoader> resourceLoader, id<CucumberRuntimeClassFinder> classFinder, JavaLangClassLoader *classLoader, CucumberRuntimeRuntimeOptions *runtimeOptions) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberRuntimeRuntime *create_CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withCucumberRuntimeClassFinder_withJavaLangClassLoader_withCucumberRuntimeRuntimeOptions_(id<CucumberRuntimeIoResourceLoader> resourceLoader, id<CucumberRuntimeClassFinder> classFinder, JavaLangClassLoader *classLoader, CucumberRuntimeRuntimeOptions *runtimeOptions);

FOUNDATION_EXPORT void CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_(CucumberRuntimeRuntime *self, id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions);

FOUNDATION_EXPORT CucumberRuntimeRuntime *new_CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_(id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberRuntimeRuntime *create_CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_(id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions);

FOUNDATION_EXPORT void CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRuntimeGlue_(CucumberRuntimeRuntime *self, id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions, id<CucumberRuntimeGlue> optionalGlue);

FOUNDATION_EXPORT CucumberRuntimeRuntime *new_CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRuntimeGlue_(id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions, id<CucumberRuntimeGlue> optionalGlue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberRuntimeRuntime *create_CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRuntimeGlue_(id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions, id<CucumberRuntimeGlue> optionalGlue);

FOUNDATION_EXPORT void CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRunnerTimeService_withCucumberRuntimeGlue_(CucumberRuntimeRuntime *self, id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions, id<CucumberRunnerTimeService> stopWatch, id<CucumberRuntimeGlue> optionalGlue);

FOUNDATION_EXPORT CucumberRuntimeRuntime *new_CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRunnerTimeService_withCucumberRuntimeGlue_(id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions, id<CucumberRunnerTimeService> stopWatch, id<CucumberRuntimeGlue> optionalGlue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberRuntimeRuntime *create_CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRunnerTimeService_withCucumberRuntimeGlue_(id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions, id<CucumberRunnerTimeService> stopWatch, id<CucumberRuntimeGlue> optionalGlue);

J2OBJC_TYPE_LITERAL_HEADER(CucumberRuntimeRuntime)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRuntimeRuntime")
