//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/PickleStepDefinitionMatch.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRuntimePickleStepDefinitionMatch")
#ifdef RESTRICT_CucumberRuntimePickleStepDefinitionMatch
#define INCLUDE_ALL_CucumberRuntimePickleStepDefinitionMatch 0
#else
#define INCLUDE_ALL_CucumberRuntimePickleStepDefinitionMatch 1
#endif
#undef RESTRICT_CucumberRuntimePickleStepDefinitionMatch

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBRPickleStepDefinitionMatch_) && (INCLUDE_ALL_CucumberRuntimePickleStepDefinitionMatch || defined(INCLUDE_CCBRPickleStepDefinitionMatch))
#define CCBRPickleStepDefinitionMatch_

#define RESTRICT_CucumberRuntimeMatch 1
#define INCLUDE_CCBRMatch 1
#include "cucumber/runtime/Match.h"

#define RESTRICT_CucumberRuntimeStepDefinitionMatch 1
#define INCLUDE_CCBRStepDefinitionMatch 1
#include "cucumber/runtime/StepDefinitionMatch.h"

@class GHKPickleStep;
@class JavaLangStackTraceElement;
@class JavaLangThrowable;
@protocol CCBRStepDefinition;
@protocol CucumberApiScenario;
@protocol JavaUtilList;

@interface CCBRPickleStepDefinitionMatch : CCBRMatch < CCBRStepDefinitionMatch >

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)arguments
                        withCCBRStepDefinition:(id<CCBRStepDefinition>)stepDefinition
                                  withNSString:(NSString *)featurePath
                             withGHKPickleStep:(GHKPickleStep *)step;

- (void)dryRunStepWithNSString:(NSString *)language
       withCucumberApiScenario:(id<CucumberApiScenario>)scenario;

- (NSString *)getCodeLocation;

- (CCBRMatch *)getMatch;

- (NSString *)getPattern;

+ (jint)getStepLineWithGHKPickleStep:(GHKPickleStep *)step;

- (JavaLangStackTraceElement *)getStepLocation;

- (void)runStepWithNSString:(NSString *)language
    withCucumberApiScenario:(id<CucumberApiScenario>)scenario;

#pragma mark Protected

- (JavaLangThrowable *)removeFrameworkFramesAndAppendStepLocationWithJavaLangThrowable:(JavaLangThrowable *)error
                                                         withJavaLangStackTraceElement:(JavaLangStackTraceElement *)stepLocation;

#pragma mark Package-Private

- (id<CCBRStepDefinition>)getStepDefinition;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)arg0
                                  withNSString:(NSString *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBRPickleStepDefinitionMatch)

FOUNDATION_EXPORT void CCBRPickleStepDefinitionMatch_initWithJavaUtilList_withCCBRStepDefinition_withNSString_withGHKPickleStep_(CCBRPickleStepDefinitionMatch *self, id<JavaUtilList> arguments, id<CCBRStepDefinition> stepDefinition, NSString *featurePath, GHKPickleStep *step);

FOUNDATION_EXPORT CCBRPickleStepDefinitionMatch *new_CCBRPickleStepDefinitionMatch_initWithJavaUtilList_withCCBRStepDefinition_withNSString_withGHKPickleStep_(id<JavaUtilList> arguments, id<CCBRStepDefinition> stepDefinition, NSString *featurePath, GHKPickleStep *step) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBRPickleStepDefinitionMatch *create_CCBRPickleStepDefinitionMatch_initWithJavaUtilList_withCCBRStepDefinition_withNSString_withGHKPickleStep_(id<JavaUtilList> arguments, id<CCBRStepDefinition> stepDefinition, NSString *featurePath, GHKPickleStep *step);

FOUNDATION_EXPORT jint CCBRPickleStepDefinitionMatch_getStepLineWithGHKPickleStep_(GHKPickleStep *step);

J2OBJC_TYPE_LITERAL_HEADER(CCBRPickleStepDefinitionMatch)

@compatibility_alias CucumberRuntimePickleStepDefinitionMatch CCBRPickleStepDefinitionMatch;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRuntimePickleStepDefinitionMatch")
