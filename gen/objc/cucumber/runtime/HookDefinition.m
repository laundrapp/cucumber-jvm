//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/HookDefinition.java
//

#include "J2ObjC_source.h"
#include "cucumber/runtime/HookDefinition.h"

@interface CucumberRuntimeHookDefinition : NSObject

@end

@implementation CucumberRuntimeHookDefinition

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 3, 4, -1, -1, -1 },
    { NULL, "Z", 0x401, 5, 6, -1, 7, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getLocationWithBoolean:);
  methods[1].selector = @selector(executeWithCucumberApiScenario:);
  methods[2].selector = @selector(matchesWithJavaUtilCollection:);
  methods[3].selector = @selector(getOrder);
  methods[4].selector = @selector(isScenarioScoped);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getLocation", "Z", "execute", "LCucumberApiScenario;", "LJavaLangThrowable;", "matches", "LJavaUtilCollection;", "(Ljava/util/Collection<Lgherkin/pickles/PickleTag;>;)Z" };
  static const J2ObjcClassInfo _CucumberRuntimeHookDefinition = { "HookDefinition", "cucumber.runtime", ptrTable, methods, NULL, 7, 0x609, 5, 0, -1, -1, -1, -1, -1 };
  return &_CucumberRuntimeHookDefinition;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(CucumberRuntimeHookDefinition)
