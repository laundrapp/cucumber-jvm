//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/model/CucumberFeature.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRuntimeModelCucumberFeature")
#ifdef RESTRICT_CucumberRuntimeModelCucumberFeature
#define INCLUDE_ALL_CucumberRuntimeModelCucumberFeature 0
#else
#define INCLUDE_ALL_CucumberRuntimeModelCucumberFeature 1
#endif
#undef RESTRICT_CucumberRuntimeModelCucumberFeature

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBRCucumberFeature_) && (INCLUDE_ALL_CucumberRuntimeModelCucumberFeature || defined(INCLUDE_CCBRCucumberFeature))
#define CCBRCucumberFeature_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class CucumberRunnerEventBus;
@class GherkinAstGherkinDocument;
@class JavaIoPrintStream;
@class JavaUtilRegexPattern;
@protocol CCBRResourceLoader;
@protocol JavaUtilList;

@interface CCBRCucumberFeature : NSObject < JavaIoSerializable >

#pragma mark Public

- (instancetype __nonnull)initWithGherkinAstGherkinDocument:(GherkinAstGherkinDocument *)gherkinDocument
                                               withNSString:(NSString *)uri
                                               withNSString:(NSString *)gherkinSource;

- (GherkinAstGherkinDocument *)getGherkinFeature;

- (NSString *)getUri;

+ (id<JavaUtilList>)load__WithCCBRResourceLoader:(id<CCBRResourceLoader>)resourceLoader
                                withJavaUtilList:(id<JavaUtilList>)featurePaths;

+ (id<JavaUtilList>)load__WithCCBRResourceLoader:(id<CCBRResourceLoader>)resourceLoader
                                withJavaUtilList:(id<JavaUtilList>)featurePaths
                           withJavaIoPrintStream:(JavaIoPrintStream *)outArg;

+ (id<JavaUtilList>)loadRerunFileWithCCBRResourceLoader:(id<CCBRResourceLoader>)resourceLoader
                                           withNSString:(NSString *)rerunPath;

- (void)sendTestSourceReadWithCucumberRunnerEventBus:(CucumberRunnerEventBus *)bus;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(CCBRCucumberFeature)

inline JavaUtilRegexPattern *CCBRCucumberFeature_get_RERUN_PATH_SPECIFICATION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilRegexPattern *CCBRCucumberFeature_RERUN_PATH_SPECIFICATION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CCBRCucumberFeature, RERUN_PATH_SPECIFICATION, JavaUtilRegexPattern *)

FOUNDATION_EXPORT id<JavaUtilList> CCBRCucumberFeature_load__WithCCBRResourceLoader_withJavaUtilList_withJavaIoPrintStream_(id<CCBRResourceLoader> resourceLoader, id<JavaUtilList> featurePaths, JavaIoPrintStream *outArg);

FOUNDATION_EXPORT id<JavaUtilList> CCBRCucumberFeature_load__WithCCBRResourceLoader_withJavaUtilList_(id<CCBRResourceLoader> resourceLoader, id<JavaUtilList> featurePaths);

FOUNDATION_EXPORT id<JavaUtilList> CCBRCucumberFeature_loadRerunFileWithCCBRResourceLoader_withNSString_(id<CCBRResourceLoader> resourceLoader, NSString *rerunPath);

FOUNDATION_EXPORT void CCBRCucumberFeature_initWithGherkinAstGherkinDocument_withNSString_withNSString_(CCBRCucumberFeature *self, GherkinAstGherkinDocument *gherkinDocument, NSString *uri, NSString *gherkinSource);

FOUNDATION_EXPORT CCBRCucumberFeature *new_CCBRCucumberFeature_initWithGherkinAstGherkinDocument_withNSString_withNSString_(GherkinAstGherkinDocument *gherkinDocument, NSString *uri, NSString *gherkinSource) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBRCucumberFeature *create_CCBRCucumberFeature_initWithGherkinAstGherkinDocument_withNSString_withNSString_(GherkinAstGherkinDocument *gherkinDocument, NSString *uri, NSString *gherkinSource);

J2OBJC_TYPE_LITERAL_HEADER(CCBRCucumberFeature)

@compatibility_alias CucumberRuntimeModelCucumberFeature CCBRCucumberFeature;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRuntimeModelCucumberFeature")
