//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/Backend.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRuntimeBackend")
#ifdef RESTRICT_CucumberRuntimeBackend
#define INCLUDE_ALL_CucumberRuntimeBackend 0
#else
#define INCLUDE_ALL_CucumberRuntimeBackend 1
#endif
#undef RESTRICT_CucumberRuntimeBackend

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBRBackend_) && (INCLUDE_ALL_CucumberRuntimeBackend || defined(INCLUDE_CCBRBackend))
#define CCBRBackend_

@class CCBRFunctionNameGenerator;
@class GHKPickleStep;
@protocol CCBRGlue;
@protocol CCBRUnreportedStepExecutor;
@protocol JavaUtilList;

@protocol CCBRBackend < JavaObject >

/*!
 @brief Invoked once before all features.This is where stepdefs and hooks should be loaded.
 */
- (void)loadGlueWithCCBRGlue:(id<CCBRGlue>)glue
            withJavaUtilList:(id<JavaUtilList>)gluePaths;

/*!
 @brief Invoked once, handing the backend a reference to a step executor
  in case the backend needs to call steps defined within other steps
 */
- (void)setUnreportedStepExecutorWithCCBRUnreportedStepExecutor:(id<CCBRUnreportedStepExecutor>)executor;

/*!
 @brief Invoked before a new scenario starts.Implementations should do any necessary
  setup of new, isolated state here.
 */
- (void)buildWorld;

/*!
 @brief Invoked at the end of a scenario, after hooks
 */
- (void)disposeWorld;

- (NSString *)getSnippetWithGHKPickleStep:(GHKPickleStep *)step
                             withNSString:(NSString *)keyword
            withCCBRFunctionNameGenerator:(CCBRFunctionNameGenerator *)functionNameGenerator;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBRBackend)

J2OBJC_TYPE_LITERAL_HEADER(CCBRBackend)

#define CucumberRuntimeBackend CCBRBackend

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRuntimeBackend")
