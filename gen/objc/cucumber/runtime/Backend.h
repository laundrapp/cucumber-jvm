//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/runtime/Backend.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRuntimeBackend")
#ifdef RESTRICT_CucumberRuntimeBackend
#define INCLUDE_ALL_CucumberRuntimeBackend 0
#else
#define INCLUDE_ALL_CucumberRuntimeBackend 1
#endif
#undef RESTRICT_CucumberRuntimeBackend

#if !defined (CucumberRuntimeBackend_) && (INCLUDE_ALL_CucumberRuntimeBackend || defined(INCLUDE_CucumberRuntimeBackend))
#define CucumberRuntimeBackend_

@class CucumberRuntimeSnippetsFunctionNameGenerator;
@class GherkinPicklesPickleStep;
@protocol CucumberRuntimeGlue;
@protocol CucumberRuntimeUnreportedStepExecutor;
@protocol JavaUtilList;

@protocol CucumberRuntimeBackend < JavaObject >

/*!
 @brief Invoked once before all features.This is where stepdefs and hooks should be loaded.
 */
- (void)loadGlueWithCucumberRuntimeGlue:(id<CucumberRuntimeGlue>)glue
                       withJavaUtilList:(id<JavaUtilList>)gluePaths;

/*!
 @brief Invoked once, handing the backend a reference to a step executor
  in case the backend needs to call steps defined within other steps
 */
- (void)setUnreportedStepExecutorWithCucumberRuntimeUnreportedStepExecutor:(id<CucumberRuntimeUnreportedStepExecutor>)executor;

/*!
 @brief Invoked before a new scenario starts.Implementations should do any necessary
  setup of new, isolated state here.
 */
- (void)buildWorld;

/*!
 @brief Invoked at the end of a scenario, after hooks
 */
- (void)disposeWorld;

- (NSString *)getSnippetWithGherkinPicklesPickleStep:(GherkinPicklesPickleStep *)step
                                        withNSString:(NSString *)keyword
    withCucumberRuntimeSnippetsFunctionNameGenerator:(CucumberRuntimeSnippetsFunctionNameGenerator *)functionNameGenerator;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeBackend)

J2OBJC_TYPE_LITERAL_HEADER(CucumberRuntimeBackend)

#endif

#pragma pop_macro("INCLUDE_ALL_CucumberRuntimeBackend")
