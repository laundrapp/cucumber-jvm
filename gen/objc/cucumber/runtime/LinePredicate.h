//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/LinePredicate.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRuntimeLinePredicate")
#ifdef RESTRICT_CucumberRuntimeLinePredicate
#define INCLUDE_ALL_CucumberRuntimeLinePredicate 0
#else
#define INCLUDE_ALL_CucumberRuntimeLinePredicate 1
#endif
#undef RESTRICT_CucumberRuntimeLinePredicate

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBRLinePredicate_) && (INCLUDE_ALL_CucumberRuntimeLinePredicate || defined(INCLUDE_CCBRLinePredicate))
#define CCBRLinePredicate_

#define RESTRICT_CucumberRuntimePicklePredicate 1
#define INCLUDE_CCBRPicklePredicate 1
#include "cucumber/runtime/PicklePredicate.h"

@class GherkinEventsPickleEvent;
@protocol JavaUtilMap;

@interface CCBRLinePredicate : NSObject < CCBRPicklePredicate >

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)lineFilters;

- (jboolean)applyWithGherkinEventsPickleEvent:(GherkinEventsPickleEvent *)pickleEvent;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBRLinePredicate)

FOUNDATION_EXPORT void CCBRLinePredicate_initWithJavaUtilMap_(CCBRLinePredicate *self, id<JavaUtilMap> lineFilters);

FOUNDATION_EXPORT CCBRLinePredicate *new_CCBRLinePredicate_initWithJavaUtilMap_(id<JavaUtilMap> lineFilters) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBRLinePredicate *create_CCBRLinePredicate_initWithJavaUtilMap_(id<JavaUtilMap> lineFilters);

J2OBJC_TYPE_LITERAL_HEADER(CCBRLinePredicate)

@compatibility_alias CucumberRuntimeLinePredicate CCBRLinePredicate;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRuntimeLinePredicate")
