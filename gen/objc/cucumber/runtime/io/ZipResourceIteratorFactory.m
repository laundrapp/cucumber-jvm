//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/cucumber-jvm/core/src/main/java/cucumber/runtime/io/ZipResourceIteratorFactory.java
//

#include "J2ObjC_source.h"
#include "cucumber/runtime/CucumberException.h"
#include "cucumber/runtime/io/Helpers.h"
#include "cucumber/runtime/io/ZipResourceIterator.h"
#include "cucumber/runtime/io/ZipResourceIteratorFactory.h"
#include "java/io/IOException.h"
#include "java/net/URL.h"
#include "java/util/Iterator.h"

@implementation CucumberRuntimeIoZipResourceIteratorFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CucumberRuntimeIoZipResourceIteratorFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)isFactoryForWithJavaNetURL:(JavaNetURL *)url {
  return [((NSString *) nil_chk([((JavaNetURL *) nil_chk(url)) getFile])) java_contains:@"!/"];
}

- (id<JavaUtilIterator>)createIteratorWithJavaNetURL:(JavaNetURL *)url
                                        withNSString:(NSString *)path
                                        withNSString:(NSString *)suffix {
  @try {
    NSString *jarPath = CucumberRuntimeIoHelpers_jarFilePathWithJavaNetURL_(url);
    return create_CucumberRuntimeIoZipResourceIterator_initWithNSString_withNSString_withNSString_(jarPath, path, suffix);
  }
  @catch (JavaIoIOException *e) {
    @throw create_CucumberRuntimeCucumberException_initWithJavaLangThrowable_(e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isFactoryForWithJavaNetURL:);
  methods[2].selector = @selector(createIteratorWithJavaNetURL:withNSString:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "isFactoryFor", "LJavaNetURL;", "createIterator", "LJavaNetURL;LNSString;LNSString;", "(Ljava/net/URL;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Iterator<Lcucumber/runtime/io/Resource;>;" };
  static const J2ObjcClassInfo _CucumberRuntimeIoZipResourceIteratorFactory = { "ZipResourceIteratorFactory", "cucumber.runtime.io", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_CucumberRuntimeIoZipResourceIteratorFactory;
}

@end

void CucumberRuntimeIoZipResourceIteratorFactory_init(CucumberRuntimeIoZipResourceIteratorFactory *self) {
  NSObject_init(self);
}

CucumberRuntimeIoZipResourceIteratorFactory *new_CucumberRuntimeIoZipResourceIteratorFactory_init() {
  J2OBJC_NEW_IMPL(CucumberRuntimeIoZipResourceIteratorFactory, init)
}

CucumberRuntimeIoZipResourceIteratorFactory *create_CucumberRuntimeIoZipResourceIteratorFactory_init() {
  J2OBJC_CREATE_IMPL(CucumberRuntimeIoZipResourceIteratorFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeIoZipResourceIteratorFactory)
