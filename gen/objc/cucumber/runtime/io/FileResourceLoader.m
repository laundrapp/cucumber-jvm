//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/io/FileResourceLoader.java
//

#include "J2ObjC_source.h"
#include "cucumber/runtime/io/FileResourceIterable.h"
#include "cucumber/runtime/io/FileResourceLoader.h"
#include "java/io/File.h"
#include "java/lang/Iterable.h"

@implementation CucumberRuntimeIoFileResourceLoader

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  CucumberRuntimeIoFileResourceLoader_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaLangIterable>)resourcesWithNSString:(NSString *)path
                                 withNSString:(NSString *)suffix {
  JavaIoFile *root = create_JavaIoFile_initWithNSString_(path);
  return create_CucumberRuntimeIoFileResourceIterable_initWithJavaIoFile_withJavaIoFile_withNSString_(root, root, suffix);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangIterable;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(resourcesWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "resources", "LNSString;LNSString;", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Iterable<Lcucumber/runtime/io/Resource;>;" };
  static const J2ObjcClassInfo _CucumberRuntimeIoFileResourceLoader = { "FileResourceLoader", "cucumber.runtime.io", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_CucumberRuntimeIoFileResourceLoader;
}

@end

void CucumberRuntimeIoFileResourceLoader_init(CucumberRuntimeIoFileResourceLoader *self) {
  NSObject_init(self);
}

CucumberRuntimeIoFileResourceLoader *new_CucumberRuntimeIoFileResourceLoader_init() {
  J2OBJC_NEW_IMPL(CucumberRuntimeIoFileResourceLoader, init)
}

CucumberRuntimeIoFileResourceLoader *create_CucumberRuntimeIoFileResourceLoader_init() {
  J2OBJC_CREATE_IMPL(CucumberRuntimeIoFileResourceLoader, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeIoFileResourceLoader)
