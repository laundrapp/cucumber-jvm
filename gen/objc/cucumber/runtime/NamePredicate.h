//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/NamePredicate.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRuntimeNamePredicate")
#ifdef RESTRICT_CucumberRuntimeNamePredicate
#define INCLUDE_ALL_CucumberRuntimeNamePredicate 0
#else
#define INCLUDE_ALL_CucumberRuntimeNamePredicate 1
#endif
#undef RESTRICT_CucumberRuntimeNamePredicate

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBRNamePredicate_) && (INCLUDE_ALL_CucumberRuntimeNamePredicate || defined(INCLUDE_CCBRNamePredicate))
#define CCBRNamePredicate_

#define RESTRICT_CucumberRuntimePicklePredicate 1
#define INCLUDE_CCBRPicklePredicate 1
#include "cucumber/runtime/PicklePredicate.h"

@class GHKPickleEvent;
@protocol JavaUtilList;

@interface CCBRNamePredicate : NSObject < CCBRPicklePredicate >

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)patterns;

- (jboolean)applyWithGHKPickleEvent:(GHKPickleEvent *)pickleEvent;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBRNamePredicate)

FOUNDATION_EXPORT void CCBRNamePredicate_initWithJavaUtilList_(CCBRNamePredicate *self, id<JavaUtilList> patterns);

FOUNDATION_EXPORT CCBRNamePredicate *new_CCBRNamePredicate_initWithJavaUtilList_(id<JavaUtilList> patterns) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBRNamePredicate *create_CCBRNamePredicate_initWithJavaUtilList_(id<JavaUtilList> patterns);

J2OBJC_TYPE_LITERAL_HEADER(CCBRNamePredicate)

@compatibility_alias CucumberRuntimeNamePredicate CCBRNamePredicate;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRuntimeNamePredicate")
