//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/ParameterInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberRuntimeParameterInfo")
#ifdef RESTRICT_CucumberRuntimeParameterInfo
#define INCLUDE_ALL_CucumberRuntimeParameterInfo 0
#else
#define INCLUDE_ALL_CucumberRuntimeParameterInfo 1
#endif
#undef RESTRICT_CucumberRuntimeParameterInfo

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CucumberRuntimeParameterInfo_) && (INCLUDE_ALL_CucumberRuntimeParameterInfo || defined(INCLUDE_CucumberRuntimeParameterInfo))
#define CucumberRuntimeParameterInfo_

@class CucumberApiTransformer;
@class CucumberRuntimeXstreamLocalizedXStreams_LocalizedXStream;
@class IOSClass;
@class IOSObjectArray;
@class JavaLangReflectMethod;
@protocol JavaLangReflectType;
@protocol JavaUtilList;

/*!
 @brief This class composes all interesting parameter information into one object.
 */
@interface CucumberRuntimeParameterInfo : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                         withNSString:(NSString *)format
                                         withNSString:(NSString *)delimiter
                                          withBoolean:(jboolean)transposed
                           withCucumberApiTransformer:(CucumberApiTransformer *)transformer;

- (instancetype __nonnull)initWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                         withNSString:(NSString *)format
                                         withNSString:(NSString *)delimiter
                           withCucumberApiTransformer:(CucumberApiTransformer *)transformer;

- (id)convertWithNSString:(NSString *)value
withCucumberRuntimeXstreamLocalizedXStreams_LocalizedXStream:(CucumberRuntimeXstreamLocalizedXStreams_LocalizedXStream *)xStream;

+ (id<JavaUtilList>)fromMethodWithJavaLangReflectMethod:(JavaLangReflectMethod *)method;

+ (id<JavaUtilList>)fromTypesWithJavaLangReflectTypeArray:(IOSObjectArray *)genericParameterTypes;

- (NSString *)getFormat;

- (IOSClass *)getRawType;

- (id<JavaLangReflectType>)getType;

- (jboolean)isTransposed;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(CucumberRuntimeParameterInfo)

inline NSString *CucumberRuntimeParameterInfo_get_DEFAULT_DELIMITER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *CucumberRuntimeParameterInfo_DEFAULT_DELIMITER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CucumberRuntimeParameterInfo, DEFAULT_DELIMITER, NSString *)

FOUNDATION_EXPORT id<JavaUtilList> CucumberRuntimeParameterInfo_fromMethodWithJavaLangReflectMethod_(JavaLangReflectMethod *method);

FOUNDATION_EXPORT id<JavaUtilList> CucumberRuntimeParameterInfo_fromTypesWithJavaLangReflectTypeArray_(IOSObjectArray *genericParameterTypes);

FOUNDATION_EXPORT void CucumberRuntimeParameterInfo_initWithJavaLangReflectType_withNSString_withNSString_withCucumberApiTransformer_(CucumberRuntimeParameterInfo *self, id<JavaLangReflectType> type, NSString *format, NSString *delimiter, CucumberApiTransformer *transformer);

FOUNDATION_EXPORT CucumberRuntimeParameterInfo *new_CucumberRuntimeParameterInfo_initWithJavaLangReflectType_withNSString_withNSString_withCucumberApiTransformer_(id<JavaLangReflectType> type, NSString *format, NSString *delimiter, CucumberApiTransformer *transformer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberRuntimeParameterInfo *create_CucumberRuntimeParameterInfo_initWithJavaLangReflectType_withNSString_withNSString_withCucumberApiTransformer_(id<JavaLangReflectType> type, NSString *format, NSString *delimiter, CucumberApiTransformer *transformer);

FOUNDATION_EXPORT void CucumberRuntimeParameterInfo_initWithJavaLangReflectType_withNSString_withNSString_withBoolean_withCucumberApiTransformer_(CucumberRuntimeParameterInfo *self, id<JavaLangReflectType> type, NSString *format, NSString *delimiter, jboolean transposed, CucumberApiTransformer *transformer);

FOUNDATION_EXPORT CucumberRuntimeParameterInfo *new_CucumberRuntimeParameterInfo_initWithJavaLangReflectType_withNSString_withNSString_withBoolean_withCucumberApiTransformer_(id<JavaLangReflectType> type, NSString *format, NSString *delimiter, jboolean transposed, CucumberApiTransformer *transformer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CucumberRuntimeParameterInfo *create_CucumberRuntimeParameterInfo_initWithJavaLangReflectType_withNSString_withNSString_withBoolean_withCucumberApiTransformer_(id<JavaLangReflectType> type, NSString *format, NSString *delimiter, jboolean transposed, CucumberApiTransformer *transformer);

J2OBJC_TYPE_LITERAL_HEADER(CucumberRuntimeParameterInfo)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberRuntimeParameterInfo")
