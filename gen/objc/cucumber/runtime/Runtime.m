//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/runtime/Runtime.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "cucumber/api/StepDefinitionReporter.h"
#include "cucumber/api/SummaryPrinter.h"
#include "cucumber/api/event/TestRunFinished.h"
#include "cucumber/runner/EventBus.h"
#include "cucumber/runner/Runner.h"
#include "cucumber/runner/TimeService.h"
#include "cucumber/runtime/Backend.h"
#include "cucumber/runtime/ClassFinder.h"
#include "cucumber/runtime/CucumberException.h"
#include "cucumber/runtime/Glue.h"
#include "cucumber/runtime/LinePredicate.h"
#include "cucumber/runtime/NamePredicate.h"
#include "cucumber/runtime/PicklePredicate.h"
#include "cucumber/runtime/Reflections.h"
#include "cucumber/runtime/Runtime.h"
#include "cucumber/runtime/RuntimeGlue.h"
#include "cucumber/runtime/RuntimeOptions.h"
#include "cucumber/runtime/Stats.h"
#include "cucumber/runtime/TagPredicate.h"
#include "cucumber/runtime/UndefinedStepsTracker.h"
#include "cucumber/runtime/io/ResourceLoader.h"
#include "cucumber/runtime/model/CucumberFeature.h"
#include "cucumber/runtime/xstream/LocalizedXStreams.h"
#include "gherkin/ast/GherkinDocument.h"
#include "gherkin/events/PickleEvent.h"
#include "gherkin/pickles/Compiler.h"
#include "gherkin/pickles/Pickle.h"
#include "java/io/PrintStream.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@interface CucumberRuntimeRuntime () {
 @public
  CucumberRuntimeUndefinedStepsTracker *undefinedStepsTracker_;
  CucumberRuntimeRuntimeOptions *runtimeOptions_;
  id<CucumberRuntimeIoResourceLoader> resourceLoader_;
  JavaLangClassLoader *classLoader_;
  CucumberRunnerRunner *runner_;
  id<JavaUtilList> filters_;
  CucumberRunnerEventBus *bus_;
  GherkinPicklesCompiler *compiler_;
}

+ (id<JavaUtilCollection>)loadBackendsWithCucumberRuntimeIoResourceLoader:(id<CucumberRuntimeIoResourceLoader>)resourceLoader
                                           withCucumberRuntimeClassFinder:(id<CucumberRuntimeClassFinder>)classFinder;

@end

J2OBJC_FIELD_SETTER(CucumberRuntimeRuntime, undefinedStepsTracker_, CucumberRuntimeUndefinedStepsTracker *)
J2OBJC_FIELD_SETTER(CucumberRuntimeRuntime, runtimeOptions_, CucumberRuntimeRuntimeOptions *)
J2OBJC_FIELD_SETTER(CucumberRuntimeRuntime, resourceLoader_, id<CucumberRuntimeIoResourceLoader>)
J2OBJC_FIELD_SETTER(CucumberRuntimeRuntime, classLoader_, JavaLangClassLoader *)
J2OBJC_FIELD_SETTER(CucumberRuntimeRuntime, runner_, CucumberRunnerRunner *)
J2OBJC_FIELD_SETTER(CucumberRuntimeRuntime, filters_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(CucumberRuntimeRuntime, bus_, CucumberRunnerEventBus *)
J2OBJC_FIELD_SETTER(CucumberRuntimeRuntime, compiler_, GherkinPicklesCompiler *)

__attribute__((unused)) static id<JavaUtilCollection> CucumberRuntimeRuntime_loadBackendsWithCucumberRuntimeIoResourceLoader_withCucumberRuntimeClassFinder_(id<CucumberRuntimeIoResourceLoader> resourceLoader, id<CucumberRuntimeClassFinder> classFinder);

@implementation CucumberRuntimeRuntime

- (instancetype __nonnull)initWithCucumberRuntimeIoResourceLoader:(id<CucumberRuntimeIoResourceLoader>)resourceLoader
                                   withCucumberRuntimeClassFinder:(id<CucumberRuntimeClassFinder>)classFinder
                                          withJavaLangClassLoader:(JavaLangClassLoader *)classLoader
                                withCucumberRuntimeRuntimeOptions:(CucumberRuntimeRuntimeOptions *)runtimeOptions {
  CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withCucumberRuntimeClassFinder_withJavaLangClassLoader_withCucumberRuntimeRuntimeOptions_(self, resourceLoader, classFinder, classLoader, runtimeOptions);
  return self;
}

- (instancetype __nonnull)initWithCucumberRuntimeIoResourceLoader:(id<CucumberRuntimeIoResourceLoader>)resourceLoader
                                          withJavaLangClassLoader:(JavaLangClassLoader *)classLoader
                                           withJavaUtilCollection:(id<JavaUtilCollection>)backends
                                withCucumberRuntimeRuntimeOptions:(CucumberRuntimeRuntimeOptions *)runtimeOptions {
  CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_(self, resourceLoader, classLoader, backends, runtimeOptions);
  return self;
}

- (instancetype __nonnull)initWithCucumberRuntimeIoResourceLoader:(id<CucumberRuntimeIoResourceLoader>)resourceLoader
                                          withJavaLangClassLoader:(JavaLangClassLoader *)classLoader
                                           withJavaUtilCollection:(id<JavaUtilCollection>)backends
                                withCucumberRuntimeRuntimeOptions:(CucumberRuntimeRuntimeOptions *)runtimeOptions
                                          withCucumberRuntimeGlue:(id<CucumberRuntimeGlue>)optionalGlue {
  CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRuntimeGlue_(self, resourceLoader, classLoader, backends, runtimeOptions, optionalGlue);
  return self;
}

- (instancetype __nonnull)initWithCucumberRuntimeIoResourceLoader:(id<CucumberRuntimeIoResourceLoader>)resourceLoader
                                          withJavaLangClassLoader:(JavaLangClassLoader *)classLoader
                                           withJavaUtilCollection:(id<JavaUtilCollection>)backends
                                withCucumberRuntimeRuntimeOptions:(CucumberRuntimeRuntimeOptions *)runtimeOptions
                                    withCucumberRunnerTimeService:(id<CucumberRunnerTimeService>)stopWatch
                                          withCucumberRuntimeGlue:(id<CucumberRuntimeGlue>)optionalGlue {
  CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRunnerTimeService_withCucumberRuntimeGlue_(self, resourceLoader, classLoader, backends, runtimeOptions, stopWatch, optionalGlue);
  return self;
}

+ (id<JavaUtilCollection>)loadBackendsWithCucumberRuntimeIoResourceLoader:(id<CucumberRuntimeIoResourceLoader>)resourceLoader
                                           withCucumberRuntimeClassFinder:(id<CucumberRuntimeClassFinder>)classFinder {
  return CucumberRuntimeRuntime_loadBackendsWithCucumberRuntimeIoResourceLoader_withCucumberRuntimeClassFinder_(resourceLoader, classFinder);
}

- (void)run {
  id<JavaUtilList> features = [((CucumberRuntimeRuntimeOptions *) nil_chk(runtimeOptions_)) cucumberFeaturesWithCucumberRuntimeIoResourceLoader:resourceLoader_ withCucumberRunnerEventBus:bus_];
  id<CucumberApiStepDefinitionReporter> stepDefinitionReporter = [runtimeOptions_ stepDefinitionReporterWithJavaLangClassLoader:classLoader_];
  [self reportStepDefinitionsWithCucumberApiStepDefinitionReporter:stepDefinitionReporter];
  for (CucumberRuntimeModelCucumberFeature * __strong cucumberFeature in nil_chk(features)) {
    [self runFeatureWithCucumberRuntimeModelCucumberFeature:cucumberFeature];
  }
  [((CucumberRunnerEventBus *) nil_chk(bus_)) sendWithCucumberApiEventEvent:create_CucumberApiEventTestRunFinished_initWithJavaLangLong_([bus_ getTime])];
  [self printSummary];
}

- (void)reportStepDefinitionsWithCucumberApiStepDefinitionReporter:(id<CucumberApiStepDefinitionReporter>)stepDefinitionReporter {
  [((CucumberRunnerRunner *) nil_chk(runner_)) reportStepDefinitionsWithCucumberApiStepDefinitionReporter:stepDefinitionReporter];
}

- (void)runFeatureWithCucumberRuntimeModelCucumberFeature:(CucumberRuntimeModelCucumberFeature *)feature {
  id<JavaUtilList> pickleEvents = [self compileFeatureWithCucumberRuntimeModelCucumberFeature:feature];
  for (GherkinEventsPickleEvent * __strong pickleEvent in nil_chk(pickleEvents)) {
    if ([self matchesFiltersWithGherkinEventsPickleEvent:pickleEvent]) {
      [((CucumberRunnerRunner *) nil_chk(runner_)) runPickleWithGherkinEventsPickleEvent:pickleEvent];
    }
  }
}

- (id<JavaUtilList>)compileFeatureWithCucumberRuntimeModelCucumberFeature:(CucumberRuntimeModelCucumberFeature *)feature {
  id<JavaUtilList> pickleEvents = create_JavaUtilArrayList_init();
  for (GherkinPicklesPickle * __strong pickle in nil_chk([((GherkinPicklesCompiler *) nil_chk(compiler_)) compileWithGherkinAstGherkinDocument:[((CucumberRuntimeModelCucumberFeature *) nil_chk(feature)) getGherkinFeature]])) {
    [pickleEvents addWithId:create_GherkinEventsPickleEvent_initWithNSString_withGherkinPicklesPickle_([feature getUri], pickle)];
  }
  return pickleEvents;
}

- (jboolean)matchesFiltersWithGherkinEventsPickleEvent:(GherkinEventsPickleEvent *)pickleEvent {
  for (id<CucumberRuntimePicklePredicate> __strong filter in nil_chk(filters_)) {
    if (![((id<CucumberRuntimePicklePredicate>) nil_chk(filter)) applyWithGherkinEventsPickleEvent:pickleEvent]) {
      return false;
    }
  }
  return true;
}

- (void)printSummary {
  id<CucumberApiSummaryPrinter> summaryPrinter = [((CucumberRuntimeRuntimeOptions *) nil_chk(runtimeOptions_)) summaryPrinterWithJavaLangClassLoader:classLoader_];
  [((id<CucumberApiSummaryPrinter>) nil_chk(summaryPrinter)) printWithCucumberRuntimeRuntime:self];
}

- (void)printStatsWithJavaIoPrintStream:(JavaIoPrintStream *)outArg {
  [((CucumberRuntimeStats *) nil_chk(stats_)) printStatsWithJavaIoPrintStream:outArg withBoolean:[((CucumberRuntimeRuntimeOptions *) nil_chk(runtimeOptions_)) isStrict]];
}

- (id<JavaUtilList>)getErrors {
  return [((CucumberRuntimeStats *) nil_chk(stats_)) getErrors];
}

- (jbyte)exitStatus {
  return [((CucumberRuntimeStats *) nil_chk(stats_)) exitStatusWithBoolean:[((CucumberRuntimeRuntimeOptions *) nil_chk(runtimeOptions_)) isStrict]];
}

- (id<JavaUtilList>)getSnippets {
  return [((CucumberRuntimeUndefinedStepsTracker *) nil_chk(undefinedStepsTracker_)) getSnippets];
}

- (id<CucumberRuntimeGlue>)getGlue {
  return [((CucumberRunnerRunner *) nil_chk(runner_)) getGlue];
}

- (CucumberRunnerEventBus *)getEventBus {
  return bus_;
}

- (CucumberRunnerRunner *)getRunner {
  return runner_;
}

- (void)dealloc {
  RELEASE_(stats_);
  RELEASE_(undefinedStepsTracker_);
  RELEASE_(runtimeOptions_);
  RELEASE_(resourceLoader_);
  RELEASE_(classLoader_);
  RELEASE_(runner_);
  RELEASE_(filters_);
  RELEASE_(bus_);
  RELEASE_(compiler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, 6, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0xa, 7, 8, -1, 9, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 10, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 15, 14, -1, 16, -1, -1 },
    { NULL, "Z", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 19, 20, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 21, -1, -1 },
    { NULL, "B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 22, -1, -1 },
    { NULL, "LCucumberRuntimeGlue;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCucumberRunnerEventBus;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCucumberRunnerRunner;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCucumberRuntimeIoResourceLoader:withCucumberRuntimeClassFinder:withJavaLangClassLoader:withCucumberRuntimeRuntimeOptions:);
  methods[1].selector = @selector(initWithCucumberRuntimeIoResourceLoader:withJavaLangClassLoader:withJavaUtilCollection:withCucumberRuntimeRuntimeOptions:);
  methods[2].selector = @selector(initWithCucumberRuntimeIoResourceLoader:withJavaLangClassLoader:withJavaUtilCollection:withCucumberRuntimeRuntimeOptions:withCucumberRuntimeGlue:);
  methods[3].selector = @selector(initWithCucumberRuntimeIoResourceLoader:withJavaLangClassLoader:withJavaUtilCollection:withCucumberRuntimeRuntimeOptions:withCucumberRunnerTimeService:withCucumberRuntimeGlue:);
  methods[4].selector = @selector(loadBackendsWithCucumberRuntimeIoResourceLoader:withCucumberRuntimeClassFinder:);
  methods[5].selector = @selector(run);
  methods[6].selector = @selector(reportStepDefinitionsWithCucumberApiStepDefinitionReporter:);
  methods[7].selector = @selector(runFeatureWithCucumberRuntimeModelCucumberFeature:);
  methods[8].selector = @selector(compileFeatureWithCucumberRuntimeModelCucumberFeature:);
  methods[9].selector = @selector(matchesFiltersWithGherkinEventsPickleEvent:);
  methods[10].selector = @selector(printSummary);
  methods[11].selector = @selector(printStatsWithJavaIoPrintStream:);
  methods[12].selector = @selector(getErrors);
  methods[13].selector = @selector(exitStatus);
  methods[14].selector = @selector(getSnippets);
  methods[15].selector = @selector(getGlue);
  methods[16].selector = @selector(getEventBus);
  methods[17].selector = @selector(getRunner);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "stats_", "LCucumberRuntimeStats;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "undefinedStepsTracker_", "LCucumberRuntimeUndefinedStepsTracker;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "runtimeOptions_", "LCucumberRuntimeRuntimeOptions;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "resourceLoader_", "LCucumberRuntimeIoResourceLoader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "classLoader_", "LJavaLangClassLoader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "runner_", "LCucumberRunnerRunner;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "filters_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 23, -1 },
    { "bus_", "LCucumberRunnerEventBus;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "compiler_", "LGherkinPicklesCompiler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCucumberRuntimeIoResourceLoader;LCucumberRuntimeClassFinder;LJavaLangClassLoader;LCucumberRuntimeRuntimeOptions;", "LCucumberRuntimeIoResourceLoader;LJavaLangClassLoader;LJavaUtilCollection;LCucumberRuntimeRuntimeOptions;", "(Lcucumber/runtime/io/ResourceLoader;Ljava/lang/ClassLoader;Ljava/util/Collection<+Lcucumber/runtime/Backend;>;Lcucumber/runtime/RuntimeOptions;)V", "LCucumberRuntimeIoResourceLoader;LJavaLangClassLoader;LJavaUtilCollection;LCucumberRuntimeRuntimeOptions;LCucumberRuntimeGlue;", "(Lcucumber/runtime/io/ResourceLoader;Ljava/lang/ClassLoader;Ljava/util/Collection<+Lcucumber/runtime/Backend;>;Lcucumber/runtime/RuntimeOptions;Lcucumber/runtime/Glue;)V", "LCucumberRuntimeIoResourceLoader;LJavaLangClassLoader;LJavaUtilCollection;LCucumberRuntimeRuntimeOptions;LCucumberRunnerTimeService;LCucumberRuntimeGlue;", "(Lcucumber/runtime/io/ResourceLoader;Ljava/lang/ClassLoader;Ljava/util/Collection<+Lcucumber/runtime/Backend;>;Lcucumber/runtime/RuntimeOptions;Lcucumber/runner/TimeService;Lcucumber/runtime/Glue;)V", "loadBackends", "LCucumberRuntimeIoResourceLoader;LCucumberRuntimeClassFinder;", "(Lcucumber/runtime/io/ResourceLoader;Lcucumber/runtime/ClassFinder;)Ljava/util/Collection<+Lcucumber/runtime/Backend;>;", "LJavaIoIOException;", "reportStepDefinitions", "LCucumberApiStepDefinitionReporter;", "runFeature", "LCucumberRuntimeModelCucumberFeature;", "compileFeature", "(Lcucumber/runtime/model/CucumberFeature;)Ljava/util/List<Lgherkin/events/PickleEvent;>;", "matchesFilters", "LGherkinEventsPickleEvent;", "printStats", "LJavaIoPrintStream;", "()Ljava/util/List<Ljava/lang/Throwable;>;", "()Ljava/util/List<Ljava/lang/String;>;", "Ljava/util/List<Lcucumber/runtime/PicklePredicate;>;" };
  static const J2ObjcClassInfo _CucumberRuntimeRuntime = { "Runtime", "cucumber.runtime", ptrTable, methods, fields, 7, 0x1, 18, 9, -1, -1, -1, -1, -1 };
  return &_CucumberRuntimeRuntime;
}

@end

void CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withCucumberRuntimeClassFinder_withJavaLangClassLoader_withCucumberRuntimeRuntimeOptions_(CucumberRuntimeRuntime *self, id<CucumberRuntimeIoResourceLoader> resourceLoader, id<CucumberRuntimeClassFinder> classFinder, JavaLangClassLoader *classLoader, CucumberRuntimeRuntimeOptions *runtimeOptions) {
  CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_(self, resourceLoader, classLoader, CucumberRuntimeRuntime_loadBackendsWithCucumberRuntimeIoResourceLoader_withCucumberRuntimeClassFinder_(resourceLoader, classFinder), runtimeOptions);
}

CucumberRuntimeRuntime *new_CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withCucumberRuntimeClassFinder_withJavaLangClassLoader_withCucumberRuntimeRuntimeOptions_(id<CucumberRuntimeIoResourceLoader> resourceLoader, id<CucumberRuntimeClassFinder> classFinder, JavaLangClassLoader *classLoader, CucumberRuntimeRuntimeOptions *runtimeOptions) {
  J2OBJC_NEW_IMPL(CucumberRuntimeRuntime, initWithCucumberRuntimeIoResourceLoader_withCucumberRuntimeClassFinder_withJavaLangClassLoader_withCucumberRuntimeRuntimeOptions_, resourceLoader, classFinder, classLoader, runtimeOptions)
}

CucumberRuntimeRuntime *create_CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withCucumberRuntimeClassFinder_withJavaLangClassLoader_withCucumberRuntimeRuntimeOptions_(id<CucumberRuntimeIoResourceLoader> resourceLoader, id<CucumberRuntimeClassFinder> classFinder, JavaLangClassLoader *classLoader, CucumberRuntimeRuntimeOptions *runtimeOptions) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeRuntime, initWithCucumberRuntimeIoResourceLoader_withCucumberRuntimeClassFinder_withJavaLangClassLoader_withCucumberRuntimeRuntimeOptions_, resourceLoader, classFinder, classLoader, runtimeOptions)
}

void CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_(CucumberRuntimeRuntime *self, id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions) {
  CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRunnerTimeService_withCucumberRuntimeGlue_(self, resourceLoader, classLoader, backends, runtimeOptions, JreLoadStatic(CucumberRunnerTimeService, SYSTEM), nil);
}

CucumberRuntimeRuntime *new_CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_(id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions) {
  J2OBJC_NEW_IMPL(CucumberRuntimeRuntime, initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_, resourceLoader, classLoader, backends, runtimeOptions)
}

CucumberRuntimeRuntime *create_CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_(id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeRuntime, initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_, resourceLoader, classLoader, backends, runtimeOptions)
}

void CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRuntimeGlue_(CucumberRuntimeRuntime *self, id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions, id<CucumberRuntimeGlue> optionalGlue) {
  CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRunnerTimeService_withCucumberRuntimeGlue_(self, resourceLoader, classLoader, backends, runtimeOptions, JreLoadStatic(CucumberRunnerTimeService, SYSTEM), optionalGlue);
}

CucumberRuntimeRuntime *new_CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRuntimeGlue_(id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions, id<CucumberRuntimeGlue> optionalGlue) {
  J2OBJC_NEW_IMPL(CucumberRuntimeRuntime, initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRuntimeGlue_, resourceLoader, classLoader, backends, runtimeOptions, optionalGlue)
}

CucumberRuntimeRuntime *create_CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRuntimeGlue_(id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions, id<CucumberRuntimeGlue> optionalGlue) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeRuntime, initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRuntimeGlue_, resourceLoader, classLoader, backends, runtimeOptions, optionalGlue)
}

void CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRunnerTimeService_withCucumberRuntimeGlue_(CucumberRuntimeRuntime *self, id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions, id<CucumberRunnerTimeService> stopWatch, id<CucumberRuntimeGlue> optionalGlue) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->undefinedStepsTracker_, new_CucumberRuntimeUndefinedStepsTracker_init());
  JreStrongAssignAndConsume(&self->compiler_, new_GherkinPicklesCompiler_init());
  if ([((id<JavaUtilCollection>) nil_chk(backends)) isEmpty]) {
    @throw create_CucumberRuntimeCucumberException_initWithNSString_(@"No backends were found. Please make sure you have a backend module on your CLASSPATH.");
  }
  JreStrongAssign(&self->resourceLoader_, resourceLoader);
  JreStrongAssign(&self->classLoader_, classLoader);
  JreStrongAssign(&self->runtimeOptions_, runtimeOptions);
  id<CucumberRuntimeGlue> glue;
  glue = optionalGlue == nil ? create_CucumberRuntimeRuntimeGlue_initWithCucumberRuntimeXstreamLocalizedXStreams_(create_CucumberRuntimeXstreamLocalizedXStreams_initWithJavaLangClassLoader_withJavaUtilList_(classLoader, [((CucumberRuntimeRuntimeOptions *) nil_chk(runtimeOptions)) getConverters])) : optionalGlue;
  JreStrongAssignAndConsume(&self->stats_, new_CucumberRuntimeStats_initWithBoolean_([((CucumberRuntimeRuntimeOptions *) nil_chk(runtimeOptions)) isMonochrome]));
  JreStrongAssignAndConsume(&self->bus_, new_CucumberRunnerEventBus_initWithCucumberRunnerTimeService_(stopWatch));
  JreStrongAssignAndConsume(&self->runner_, new_CucumberRunnerRunner_initWithCucumberRuntimeGlue_withCucumberRunnerEventBus_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_(glue, self->bus_, backends, runtimeOptions));
  JreStrongAssignAndConsume(&self->filters_, new_JavaUtilArrayList_init());
  id<JavaUtilList> tagFilters = [runtimeOptions getTagFilters];
  if (![((id<JavaUtilList>) nil_chk(tagFilters)) isEmpty]) {
    [self->filters_ addWithId:create_CucumberRuntimeTagPredicate_initWithJavaUtilList_(tagFilters)];
  }
  id<JavaUtilList> nameFilters = [runtimeOptions getNameFilters];
  if (![((id<JavaUtilList>) nil_chk(nameFilters)) isEmpty]) {
    [self->filters_ addWithId:create_CucumberRuntimeNamePredicate_initWithJavaUtilList_(nameFilters)];
  }
  id<JavaUtilMap> lineFilters = [runtimeOptions getLineFiltersWithCucumberRuntimeIoResourceLoader:resourceLoader];
  if (![((id<JavaUtilMap>) nil_chk(lineFilters)) isEmpty]) {
    [self->filters_ addWithId:create_CucumberRuntimeLinePredicate_initWithJavaUtilMap_(lineFilters)];
  }
  [self->stats_ setEventPublisherWithCucumberApiEventEventPublisher:self->bus_];
  [self->undefinedStepsTracker_ setEventPublisherWithCucumberApiEventEventPublisher:self->bus_];
  [runtimeOptions setEventBusWithCucumberRunnerEventBus:self->bus_];
}

CucumberRuntimeRuntime *new_CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRunnerTimeService_withCucumberRuntimeGlue_(id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions, id<CucumberRunnerTimeService> stopWatch, id<CucumberRuntimeGlue> optionalGlue) {
  J2OBJC_NEW_IMPL(CucumberRuntimeRuntime, initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRunnerTimeService_withCucumberRuntimeGlue_, resourceLoader, classLoader, backends, runtimeOptions, stopWatch, optionalGlue)
}

CucumberRuntimeRuntime *create_CucumberRuntimeRuntime_initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRunnerTimeService_withCucumberRuntimeGlue_(id<CucumberRuntimeIoResourceLoader> resourceLoader, JavaLangClassLoader *classLoader, id<JavaUtilCollection> backends, CucumberRuntimeRuntimeOptions *runtimeOptions, id<CucumberRunnerTimeService> stopWatch, id<CucumberRuntimeGlue> optionalGlue) {
  J2OBJC_CREATE_IMPL(CucumberRuntimeRuntime, initWithCucumberRuntimeIoResourceLoader_withJavaLangClassLoader_withJavaUtilCollection_withCucumberRuntimeRuntimeOptions_withCucumberRunnerTimeService_withCucumberRuntimeGlue_, resourceLoader, classLoader, backends, runtimeOptions, stopWatch, optionalGlue)
}

id<JavaUtilCollection> CucumberRuntimeRuntime_loadBackendsWithCucumberRuntimeIoResourceLoader_withCucumberRuntimeClassFinder_(id<CucumberRuntimeIoResourceLoader> resourceLoader, id<CucumberRuntimeClassFinder> classFinder) {
  CucumberRuntimeRuntime_initialize();
  CucumberRuntimeReflections *reflections = create_CucumberRuntimeReflections_initWithCucumberRuntimeClassFinder_(classFinder);
  return [reflections instantiateSubclassesWithIOSClass:CucumberRuntimeBackend_class_() withNSString:@"cucumber.runtime" withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ CucumberRuntimeIoResourceLoader_class_() } count:1 type:IOSClass_class_()] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ resourceLoader } count:1 type:NSObject_class_()]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CucumberRuntimeRuntime)
