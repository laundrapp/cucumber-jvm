//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/cucumber/util/FixJava.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CucumberUtilFixJava")
#ifdef RESTRICT_CucumberUtilFixJava
#define INCLUDE_ALL_CucumberUtilFixJava 0
#else
#define INCLUDE_ALL_CucumberUtilFixJava 1
#endif
#undef RESTRICT_CucumberUtilFixJava

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CCBFixJava_) && (INCLUDE_ALL_CucumberUtilFixJava || defined(INCLUDE_CCBFixJava))
#define CCBFixJava_

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaIoReader;
@protocol CCBMapper;
@protocol JavaUtilList;

@interface CCBFixJava : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (NSString *)joinWithJavaUtilList:(id<JavaUtilList>)strings
                      withNSString:(NSString *)separator;

+ (id<JavaUtilList>)mapWithJavaUtilList:(id<JavaUtilList>)objects
                          withCCBMapper:(id<CCBMapper>)mapper;

+ (NSString *)readReaderWithJavaIoReader:(JavaIoReader *)inArg;

+ (NSString *)readResourceWithNSString:(NSString *)resourcePath;

+ (IOSByteArray *)readStreamWithJavaIoInputStream:(JavaIoInputStream *)inArg;

@end

J2OBJC_EMPTY_STATIC_INIT(CCBFixJava)

FOUNDATION_EXPORT void CCBFixJava_init(CCBFixJava *self);

FOUNDATION_EXPORT CCBFixJava *new_CCBFixJava_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CCBFixJava *create_CCBFixJava_init(void);

FOUNDATION_EXPORT NSString *CCBFixJava_joinWithJavaUtilList_withNSString_(id<JavaUtilList> strings, NSString *separator);

FOUNDATION_EXPORT id<JavaUtilList> CCBFixJava_mapWithJavaUtilList_withCCBMapper_(id<JavaUtilList> objects, id<CCBMapper> mapper);

FOUNDATION_EXPORT NSString *CCBFixJava_readResourceWithNSString_(NSString *resourcePath);

FOUNDATION_EXPORT NSString *CCBFixJava_readReaderWithJavaIoReader_(JavaIoReader *inArg);

FOUNDATION_EXPORT IOSByteArray *CCBFixJava_readStreamWithJavaIoInputStream_(JavaIoInputStream *inArg);

J2OBJC_TYPE_LITERAL_HEADER(CCBFixJava)

@compatibility_alias CucumberUtilFixJava CCBFixJava;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CucumberUtilFixJava")
