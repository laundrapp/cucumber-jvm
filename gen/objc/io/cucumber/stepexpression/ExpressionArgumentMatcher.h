//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/io/cucumber/stepexpression/ExpressionArgumentMatcher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoCucumberStepexpressionExpressionArgumentMatcher")
#ifdef RESTRICT_IoCucumberStepexpressionExpressionArgumentMatcher
#define INCLUDE_ALL_IoCucumberStepexpressionExpressionArgumentMatcher 0
#else
#define INCLUDE_ALL_IoCucumberStepexpressionExpressionArgumentMatcher 1
#endif
#undef RESTRICT_IoCucumberStepexpressionExpressionArgumentMatcher

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoCucumberStepexpressionExpressionArgumentMatcher_) && (INCLUDE_ALL_IoCucumberStepexpressionExpressionArgumentMatcher || defined(INCLUDE_IoCucumberStepexpressionExpressionArgumentMatcher))
#define IoCucumberStepexpressionExpressionArgumentMatcher_

#define RESTRICT_IoCucumberStepexpressionArgumentMatcher 1
#define INCLUDE_IoCucumberStepexpressionArgumentMatcher 1
#include "io/cucumber/stepexpression/ArgumentMatcher.h"

@class GHKPickleStep;
@class IoCucumberStepexpressionStepExpression;
@protocol JavaUtilList;

@interface IoCucumberStepexpressionExpressionArgumentMatcher : NSObject < IoCucumberStepexpressionArgumentMatcher >

#pragma mark Public

- (instancetype __nonnull)initWithIoCucumberStepexpressionStepExpression:(IoCucumberStepexpressionStepExpression *)expression;

- (id<JavaUtilList>)argumentsFromWithGHKPickleStep:(GHKPickleStep *)step;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberStepexpressionExpressionArgumentMatcher)

FOUNDATION_EXPORT void IoCucumberStepexpressionExpressionArgumentMatcher_initWithIoCucumberStepexpressionStepExpression_(IoCucumberStepexpressionExpressionArgumentMatcher *self, IoCucumberStepexpressionStepExpression *expression);

FOUNDATION_EXPORT IoCucumberStepexpressionExpressionArgumentMatcher *new_IoCucumberStepexpressionExpressionArgumentMatcher_initWithIoCucumberStepexpressionStepExpression_(IoCucumberStepexpressionStepExpression *expression) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoCucumberStepexpressionExpressionArgumentMatcher *create_IoCucumberStepexpressionExpressionArgumentMatcher_initWithIoCucumberStepexpressionStepExpression_(IoCucumberStepexpressionStepExpression *expression);

J2OBJC_TYPE_LITERAL_HEADER(IoCucumberStepexpressionExpressionArgumentMatcher)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoCucumberStepexpressionExpressionArgumentMatcher")
