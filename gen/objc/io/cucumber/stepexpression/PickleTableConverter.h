//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/io/cucumber/stepexpression/PickleTableConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoCucumberStepexpressionPickleTableConverter")
#ifdef RESTRICT_IoCucumberStepexpressionPickleTableConverter
#define INCLUDE_ALL_IoCucumberStepexpressionPickleTableConverter 0
#else
#define INCLUDE_ALL_IoCucumberStepexpressionPickleTableConverter 1
#endif
#undef RESTRICT_IoCucumberStepexpressionPickleTableConverter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoCucumberStepexpressionPickleTableConverter_) && (INCLUDE_ALL_IoCucumberStepexpressionPickleTableConverter || defined(INCLUDE_IoCucumberStepexpressionPickleTableConverter))
#define IoCucumberStepexpressionPickleTableConverter_

@class GHKPickleTable;
@protocol JavaUtilList;

@interface IoCucumberStepexpressionPickleTableConverter : NSObject

#pragma mark Package-Private

- (instancetype __nonnull)init;

+ (id<JavaUtilList>)toTableWithGHKPickleTable:(GHKPickleTable *)pickleTable;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberStepexpressionPickleTableConverter)

FOUNDATION_EXPORT void IoCucumberStepexpressionPickleTableConverter_init(IoCucumberStepexpressionPickleTableConverter *self);

FOUNDATION_EXPORT IoCucumberStepexpressionPickleTableConverter *new_IoCucumberStepexpressionPickleTableConverter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoCucumberStepexpressionPickleTableConverter *create_IoCucumberStepexpressionPickleTableConverter_init(void);

FOUNDATION_EXPORT id<JavaUtilList> IoCucumberStepexpressionPickleTableConverter_toTableWithGHKPickleTable_(GHKPickleTable *pickleTable);

J2OBJC_TYPE_LITERAL_HEADER(IoCucumberStepexpressionPickleTableConverter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoCucumberStepexpressionPickleTableConverter")
