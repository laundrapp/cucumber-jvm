//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/io/cucumber/stepexpression/DataTableArgument.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoCucumberStepexpressionDataTableArgument")
#ifdef RESTRICT_IoCucumberStepexpressionDataTableArgument
#define INCLUDE_ALL_IoCucumberStepexpressionDataTableArgument 0
#else
#define INCLUDE_ALL_IoCucumberStepexpressionDataTableArgument 1
#endif
#undef RESTRICT_IoCucumberStepexpressionDataTableArgument

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoCucumberStepexpressionDataTableArgument_) && (INCLUDE_ALL_IoCucumberStepexpressionDataTableArgument || defined(INCLUDE_IoCucumberStepexpressionDataTableArgument))
#define IoCucumberStepexpressionDataTableArgument_

#define RESTRICT_IoCucumberStepexpressionArgument 1
#define INCLUDE_IoCucumberStepexpressionArgument 1
#include "io/cucumber/stepexpression/Argument.h"

@protocol IoCucumberStepexpressionRawTableTransformer;
@protocol JavaUtilList;

@interface IoCucumberStepexpressionDataTableArgument : NSObject < IoCucumberStepexpressionArgument >

#pragma mark Public

- (NSString *)getText;

- (id)getValue;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype __nonnull)initWithIoCucumberStepexpressionRawTableTransformer:(id<IoCucumberStepexpressionRawTableTransformer>)tableType
                                                             withJavaUtilList:(id<JavaUtilList>)argument;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberStepexpressionDataTableArgument)

FOUNDATION_EXPORT void IoCucumberStepexpressionDataTableArgument_initWithIoCucumberStepexpressionRawTableTransformer_withJavaUtilList_(IoCucumberStepexpressionDataTableArgument *self, id<IoCucumberStepexpressionRawTableTransformer> tableType, id<JavaUtilList> argument);

FOUNDATION_EXPORT IoCucumberStepexpressionDataTableArgument *new_IoCucumberStepexpressionDataTableArgument_initWithIoCucumberStepexpressionRawTableTransformer_withJavaUtilList_(id<IoCucumberStepexpressionRawTableTransformer> tableType, id<JavaUtilList> argument) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoCucumberStepexpressionDataTableArgument *create_IoCucumberStepexpressionDataTableArgument_initWithIoCucumberStepexpressionRawTableTransformer_withJavaUtilList_(id<IoCucumberStepexpressionRawTableTransformer> tableType, id<JavaUtilList> argument);

J2OBJC_TYPE_LITERAL_HEADER(IoCucumberStepexpressionDataTableArgument)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoCucumberStepexpressionDataTableArgument")
