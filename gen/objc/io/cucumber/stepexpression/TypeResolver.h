//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber-jvm/core/src/main/java/io/cucumber/stepexpression/TypeResolver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoCucumberStepexpressionTypeResolver")
#ifdef RESTRICT_IoCucumberStepexpressionTypeResolver
#define INCLUDE_ALL_IoCucumberStepexpressionTypeResolver 0
#else
#define INCLUDE_ALL_IoCucumberStepexpressionTypeResolver 1
#endif
#undef RESTRICT_IoCucumberStepexpressionTypeResolver

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoCucumberStepexpressionTypeResolver_) && (INCLUDE_ALL_IoCucumberStepexpressionTypeResolver || defined(INCLUDE_IoCucumberStepexpressionTypeResolver))
#define IoCucumberStepexpressionTypeResolver_

@protocol JavaLangReflectType;

/*!
 @brief Allows lazy resolution of the type of a data table or doc string.
 */
@protocol IoCucumberStepexpressionTypeResolver < JavaObject >

/*!
 @brief A type to data convert the table or doc string to.May not return null.
 @return a type
 */
- (id<JavaLangReflectType>)resolve;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberStepexpressionTypeResolver)

J2OBJC_TYPE_LITERAL_HEADER(IoCucumberStepexpressionTypeResolver)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoCucumberStepexpressionTypeResolver")
