
description = 'Cucumber-JVM: JUnit'
dependencies {
  compile project(':cucumber-core')
    compile group: 'junit', name: 'junit', version:'4.12'
    testCompile(group: 'org.mockito', name: 'mockito-core', version:'1.10.19') {
exclude(module: 'hamcrest-core')
    }
}

task translateJava(type:Exec) {
    inputs.files sourceSets.main.allJava
    outputs.files files((sourceSets.main.allJava).collect { i ->
        i.collect { j ->
            def name = projectDir.path + '../../gen/objc/' + i.name
            //def name = j.path.replace(i.srcDirs.iterator().next().path, 'src/gen/objc')
            return [name.replace('.java', '.h'), name.replace('.java', '.m')]
        }
    }.flatten())


    // the classpath is built from the runtime dependencies for the sourcesets ...
    executable "${J2OBJC_HOME_LATEST}/j2objc"
    //args '--prefixes', file('main/resources/prefixes.properties').path
//    args '--mapping', file('mapping.properties').path
    args '--doc-comments'
    args '--nullability'
    args '-d', file('../../gen/objc').path
    args '-sourcepath', (sourceSets.main.allJava.srcDirs).join(':')
    args '-classpath', sourceSets.main.runtimeClasspath.collect { it.absolutePath }.join(':')
    args inputs.files
}
